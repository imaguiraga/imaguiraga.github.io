<?xml version="1.0" encoding="UTF-8"?>

<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <!--/* _Table245_TableView_B37 [B37:M46] - TableStyleLight17 */-->
  <!--B37:M46-->
  <!--
<SolidColorBrush x:Key="LT1" Color="#FFFFFF" />
<SolidColorBrush x:Key="DK1" Color="#000000" />
<SolidColorBrush x:Key="LT2" Color="#E7E6E6" />
<SolidColorBrush x:Key="DK2" Color="#44546A" />
<SolidColorBrush x:Key="ACCENT1" Color="#4472C4" />
<SolidColorBrush x:Key="ACCENT2" Color="#ED7D31" />
<SolidColorBrush x:Key="ACCENT3" Color="#A5A5A5" />
<SolidColorBrush x:Key="ACCENT4" Color="#FFC000" />
<SolidColorBrush x:Key="ACCENT5" Color="#5B9BD5" />
<SolidColorBrush x:Key="ACCENT6" Color="#70AD47" />
<SolidColorBrush x:Key="HLINK" Color="#0563C1" />
<SolidColorBrush x:Key="FOLHLINK" Color="#954F72" />
-->
  <!--TableStyleLight17-->  
  <Style TargetType="ContentControl" x:Key="wholeTable.T1b"> 
    <Setter Property="Foreground" Value="#000000"/> 
  </Style>  
  <Style TargetType="ContentControl" x:Key="firstColumnStripe.T1b"> 
    <Setter Property="Background" Value="#FBE4D5"/> 
  </Style>  
  <Style TargetType="ContentControl" x:Key="firstRowStripe.T1b"> 
    <Setter Property="Background" Value="#FBE4D5"/> 
  </Style>  
  <Style TargetType="ContentControl" x:Key="lastColumn.T1b"> 
    <Setter Property="Foreground" Value="#000000"/> 
  </Style>  
  <Style TargetType="ContentControl" x:Key="firstColumn.T1b"> 
    <Setter Property="Foreground" Value="#000000"/> 
  </Style>  
  <Style TargetType="ContentControl" x:Key="headerRow.T1b"> 
    <Setter Property="Foreground" Value="#000000"/> 
  </Style>  
  <Style TargetType="ContentControl" x:Key="totalRow.T1b"> 
    <Setter Property="Foreground" Value="#000000"/> 
  </Style>  
  <Style TargetType="{x:Type Thumb}" x:Key="ColumnHeaderGripperStyle.T1b"> 
    <Setter Property="Width" Value="8"/>  
    <Setter Property="Background" Value="Transparent"/>  
    <Setter Property="Cursor" Value="SizeWE"/>  
    <Setter Property="Template"> 
      <Setter.Value> 
        <ControlTemplate TargetType="{x:Type Thumb}"> 
          <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/> 
        </ControlTemplate> 
      </Setter.Value> 
    </Setter> 
  </Style>  
  <Style TargetType="{x:Type DataGridColumnHeader}" x:Key="DataGridColumnHeaderStyle.T1b"> 
    <Setter Property="VerticalContentAlignment" Value="Center"/>  
    <Setter Property="HorizontalContentAlignment" Value="Center"/>  
    <Setter Property="Background" Value="#ffffff"/>  
    <!-- headerRow|wholeTable|white - FillBackgroundColor -->  
    <Setter Property="Foreground" Value="#000000"/>  
    <!-- headerRow|black - FontColor -->  
    <Setter Property="BorderBrush" Value="#B65F25"/>  
    <Setter Property="SeparatorBrush" Value="#B65F25"/>  
    <Setter Property="SeparatorVisibility" Value="Visible"/>  
    <Setter Property="BorderThickness" Value="0,0,1,1"/>  
    <Setter Property="Padding" Value="5,0,5,0"/>  
    <Setter Property="FontFamily" Value="Calibri"/>  
    <Setter Property="FontSize" Value="11pt"/>  
    <Setter Property="FontWeight" Value="Bold"/>  
    <Setter Property="HorizontalContentAlignment" Value="Left"/>  
    <Setter Property="Template"> 
      <Setter.Value> 
        <ControlTemplate TargetType="{x:Type DataGridColumnHeader}"> 
          <Grid> 
            <Themes:DataGridHeaderBorder Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" IsClickable="{TemplateBinding CanUserSort}" IsHovered="{TemplateBinding IsMouseOver}" IsPressed="{TemplateBinding IsPressed}" Padding="{TemplateBinding Padding}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}" SortDirection="{TemplateBinding SortDirection}"> 
              <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/> 
            </Themes:DataGridHeaderBorder>  
            <Thumb HorizontalAlignment="Left" Style="{StaticResource ColumnHeaderGripperStyle.T1b}" x:Name="PART_LeftHeaderGripper"/>  
            <Thumb HorizontalAlignment="Right" Style="{StaticResource ColumnHeaderGripperStyle.T1b}" x:Name="PART_RightHeaderGripper"/> 
          </Grid> 
        </ControlTemplate> 
      </Setter.Value> 
    </Setter> 
  </Style>  
  <BooleanToVisibilityConverter x:Key="bool2VisibilityConverter.T1b"/>  
  <Style TargetType="{x:Type Thumb}" x:Key="RowHeaderGripperStyle.T1b"> 
    <Setter Property="Height" Value="8"/>  
    <Setter Property="Background" Value="Transparent"/>  
    <Setter Property="Cursor" Value="SizeNS"/>  
    <Setter Property="Template"> 
      <Setter.Value> 
        <ControlTemplate TargetType="{x:Type Thumb}"> 
          <Border Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}"/> 
        </ControlTemplate> 
      </Setter.Value> 
    </Setter> 
  </Style>  
  <Style TargetType="{x:Type DataGridRowHeader}" x:Key="DataGridRowHeaderStyle.T1b"> 
    <Setter Property="BorderBrush" Value="#B65F25"/>  
    <Setter Property="Template"> 
      <Setter.Value> 
        <ControlTemplate TargetType="{x:Type DataGridRowHeader}"> 
          <Grid> 
            <Themes:DataGridHeaderBorder Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" IsHovered="{TemplateBinding IsMouseOver}" IsPressed="{TemplateBinding IsPressed}" IsSelected="{TemplateBinding IsRowSelected}" Orientation="Horizontal" Padding="{TemplateBinding Padding}" SeparatorBrush="{TemplateBinding SeparatorBrush}" SeparatorVisibility="{TemplateBinding SeparatorVisibility}"> 
              <StackPanel Orientation="Horizontal"> 
                <ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>  
                <Control SnapsToDevicePixels="false" Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Visibility="{Binding (Validation.HasError), Converter={StaticResource bool2VisibilityConverter.T1b}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}"/> 
              </StackPanel> 
            </Themes:DataGridHeaderBorder>  
            <Thumb Style="{StaticResource RowHeaderGripperStyle.T1b}" VerticalAlignment="Top" x:Name="PART_TopHeaderGripper"/>  
            <Thumb Style="{StaticResource RowHeaderGripperStyle.T1b}" VerticalAlignment="Bottom" x:Name="PART_BottomHeaderGripper"/> 
          </Grid> 
        </ControlTemplate> 
      </Setter.Value> 
    </Setter> 
  </Style>  
  <Style TargetType="{x:Type DataGridRow}" x:Key="DataGridRowStyle.T1b"> 
    <Setter Property="Foreground" Value="#000000"/>  
    <Setter Property="BorderBrush" Value="#B65F25"/>  
    <Setter Property="SnapsToDevicePixels" Value="true"/>  
    <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>  
    <Setter Property="ValidationErrorTemplate"> 
      <Setter.Value> 
        <ControlTemplate> 
          <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/> 
        </ControlTemplate> 
      </Setter.Value> 
    </Setter>  
    <Setter Property="Template"> 
      <Setter.Value> 
        <ControlTemplate TargetType="{x:Type DataGridRow}"> 
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" x:Name="DGR_Border"> 
            <SelectiveScrollingGrid> 
              <SelectiveScrollingGrid.ColumnDefinitions> 
                <ColumnDefinition Width="Auto"/>  
                <ColumnDefinition Width="*"/> 
              </SelectiveScrollingGrid.ColumnDefinitions>  
              <SelectiveScrollingGrid.RowDefinitions> 
                <RowDefinition Height="*"/>  
                <RowDefinition Height="Auto"/> 
              </SelectiveScrollingGrid.RowDefinitions>  
              <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>  
              <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>  
              <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/> 
            </SelectiveScrollingGrid> 
          </Border> 
        </ControlTemplate> 
      </Setter.Value> 
    </Setter>  
    <Style.Triggers> 
      <Trigger Property="IsNewItem" Value="True"> 
        <Setter Property="Margin" Value="{Binding NewItemMargin, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/> 
      </Trigger> 
    </Style.Triggers> 
  </Style>  
  <Style TargetType="{x:Type DataGridCell}" x:Key="DataGridCellStyle.T1b"> 
    <Setter Property="Background" Value="Transparent"/>  
    <Setter Property="BorderBrush" Value="Transparent"/>  
    <Setter Property="Padding" Value="5,0,5,0"/>  
    <Setter Property="HorizontalAlignment" Value="Right"/>  
    <Setter Property="BorderThickness" Value="1"/>  
    <Setter Property="Template"> 
      <Setter.Value> 
        <ControlTemplate TargetType="{x:Type DataGridCell}"> 
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True"> 
            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/> 
          </Border> 
        </ControlTemplate> 
      </Setter.Value> 
    </Setter>  
    <Style.Triggers> 
      <Trigger Property="IsSelected" Value="True"> 
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>  
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>  
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/> 
      </Trigger>  
      <Trigger Property="IsKeyboardFocusWithin" Value="True"> 
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/> 
      </Trigger>  
      <MultiTrigger> 
        <MultiTrigger.Conditions> 
          <Condition Property="IsSelected" Value="true"/>  
          <Condition Property="Selector.IsSelectionActive" Value="false"/> 
        </MultiTrigger.Conditions>  
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>  
        <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>  
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/> 
      </MultiTrigger>  
      <Trigger Property="IsEnabled" Value="false"> 
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/> 
      </Trigger> 
    </Style.Triggers> 
  </Style>  
  <!-- DataGrid -->  
  <Style TargetType="{x:Type DataGrid}" x:Key="TableStyleLight17_T1b__table_view"> 
    <Setter Property="Background" Value="#B65F25"/>  
    <Setter Property="Foreground" Value="#000000"/>  
    <Setter Property="BorderBrush" Value="#B65F25"/>  
    <Setter Property="HorizontalGridLinesBrush" Value="#B65F25"/>  
    <Setter Property="VerticalGridLinesBrush" Value="#B65F25"/>  
    <Setter Property="FontFamily" Value="Calibri"/>  
    <Setter Property="FontSize" Value="11pt"/>  
    <Setter Property="AlternationCount" Value="2"/>  
    <Setter Property="AlternatingRowBackground" Value="#FBE4D5"/>  
    <Setter Property="RowBackground" Value="#ffffff"/>  
    <Setter Property="BorderThickness" Value="1"/>  
    <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>  
    <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>  
    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>  
    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>  
    <Setter Property="ColumnHeaderStyle" Value="{StaticResource DataGridColumnHeaderStyle.T1b}"/>  
    <Setter Property="RowHeaderStyle" Value="{StaticResource DataGridRowHeaderStyle.T1b}"/>  
    <Setter Property="RowStyle" Value="{StaticResource DataGridRowStyle.T1b}"/>  
    <Setter Property="CellStyle" Value="{StaticResource DataGridCellStyle.T1b}"/>  
    <Setter Property="Template"> 
      <Setter.Value> 
        <ControlTemplate TargetType="{x:Type DataGrid}"> 
          <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True"> 
            <ScrollViewer Focusable="false" x:Name="DG_ScrollViewer"> 
              <ScrollViewer.Template> 
                <ControlTemplate TargetType="{x:Type ScrollViewer}"> 
                  <Grid> 
                    <Grid.ColumnDefinitions> 
                      <ColumnDefinition Width="Auto"/>  
                      <ColumnDefinition Width="*"/>  
                      <ColumnDefinition Width="Auto"/> 
                    </Grid.ColumnDefinitions>  
                    <Grid.RowDefinitions> 
                      <RowDefinition Height="Auto"/>  
                      <RowDefinition Height="*"/>  
                      <RowDefinition Height="Auto"/> 
                    </Grid.RowDefinitions>  
                    <Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>  
                    <DataGridColumnHeadersPresenter Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" x:Name="PART_ColumnHeadersPresenter"/>  
                    <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1" x:Name="PART_ScrollContentPresenter"/>  
                    <ScrollBar Grid.Column="2" Grid.Row="1" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" x:Name="PART_VerticalScrollBar"/>  
                    <Grid Grid.Column="1" Grid.Row="2"> 
                      <Grid.ColumnDefinitions> 
                        <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>  
                        <ColumnDefinition Width="*"/> 
                      </Grid.ColumnDefinitions>  
                      <ScrollBar Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" x:Name="PART_HorizontalScrollBar"/> 
                    </Grid> 
                  </Grid> 
                </ControlTemplate> 
              </ScrollViewer.Template>  
              <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/> 
            </ScrollViewer> 
          </Border> 
        </ControlTemplate> 
      </Setter.Value> 
    </Setter>  
    <Style.Triggers> 
      <MultiTrigger> 
        <MultiTrigger.Conditions> 
          <Condition Property="IsGrouping" Value="true"/>  
          <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/> 
        </MultiTrigger.Conditions>  
        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/> 
      </MultiTrigger> 
    </Style.Triggers> 
  </Style> 
</ResourceDictionary>
