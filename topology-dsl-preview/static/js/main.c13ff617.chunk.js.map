{"version":3,"sources":["../../../node_modules/typescript/lib sync","../../../node_modules/systemjs/dist lazy groupOptions: {} namespace object","preview/widgets/menu-util.ts","preview/widgets/codemirror-widget.ts","preview/widgets/ace-editor-widget.ts","../../topology-dsl-core/src/dsl/core-dsl/resource-base.js","../../topology-dsl-core/src/dsl/core-dsl/resource-elt.js","../../topology-dsl-core/src/dsl/core-dsl/base-icons-map.js","../../topology-dsl-core/src/dsl/core-dsl/resource-dsl.js","../../topology-dsl-core/src/dsl/core-dsl/util.js","../../topology-dsl-core/src/dsl/pipeline-dsl/pipeline-terminal.js","../../topology-dsl-core/src/dsl/pipeline-dsl/pipeline-sequence.js","../../topology-dsl-core/src/parser/dsl-parser.js","preview/diagram/visitor/uid-flow-visitor.js","preview/diagram/visitor/util.js","preview/diagram/visitor/elk-diagram-generator.js","preview/diagram/visitor/elk-dimension-visitor.js","preview/diagram/elk/elk-layout-factory.js","preview/diagram/elk/x6-elk-renderer.js","preview/widgets/elkgraph-widget.js","preview/diagram/elk/elk-renderer-factory.js","preview/samples-2.js","assets/js/GCP/GCP-map.js","assets/js/GCP/GCP-dsl.js","preview/elk-widget-preview.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","webpackEmptyAsyncContext","Promise","then","createMenu","commands","sub1","Menu","title","label","mnemonic","addItem","command","sub2","type","submenu","root","CodeMirrorWidget","config","_valueChanged","Signal","_editor","selectElt","_samples","Map","addClass","div","document","createElement","setAttribute","node","appendChild","opt","value","text","add","separator","content","CodeMirror","self","editor","on","instance","getDoc","getValue","emit","target","doc","this","fetch","response","json","data","setValue","msg","refresh","width","height","setSize","values","firstChild","remove","forEach","index","source","toString","endsWith","res","set","addEventListener","event","result","get","Widget","ace","idGenFn","prefix","NODEIDGENFN","ResourceElt","elts","kind","tagName","provider","idGenIt","next","compound","direction","_start","_finish","link","name","inputElts","outputElts","r","resolveElt","push","callbackFn","i","arr","thisArg","undefined","v","n","a","preorder","postorder","map","predicateFn","filter","elt","call","err","console","error","message","visitor","filterFn","visit","length","splice","toElt","isGroup","_add_","tmp","split","join","key","Array","isArray","_in_","_out_","isTerminal","val","CompositeResourceElt","foundElt","WORKFLOW_KIND","WORKFLOW_PROVIDER","FanOutFanInElt","FanInElt","FanOutElt","OptionalElt","skip","RepeatElt","loop","SequenceElt","TerminalElt","GroupElt","BASE_ICONS_MAP","className","iconURL","fanOut_fanIn","_set_","choice","_tagName_","fanIn","merge","fanOut","branch","tree","use","parallel","optional","repeat","oneOrMore","sequence","process","activity","terminal","transition","state","zeroOrMore","resource","group","block","isContainer","children","model","clone_bak","obj","Object","create","getPrototypeOf","getOwnPropertyDescriptors","resetIds","idx","clone","copy","completeAssign","sources","descriptors","reduce","getOwnPropertyDescriptor","getOwnPropertySymbols","sym","descriptor","enumerable","defineProperties","jsonToDslObject","o","start","setPrototypeOf","prototype","PIPELINE_RESOURCE_TYPE","StepPipelineElt","ctx","DataPipelineElt","step","PipelineElt","pipeline","JobElt","job","StageElt","stage","ts","require","DEBUG","debugOn","debug","log","System","window","registerJSModule","_module_","register","exports_1","setters","execute","parseDsl","input","dslModule","MODULE_IDS","factoryFn","Function","variableIds","moduleIds","esprima","decl","declarations","init","callee","Set","indexOf","reject","isScript","importSource","transpileModule","compilerOptions","ModuleKind","AMD","moduleResolution","ModuleResolutionKind","Node","esModuleInterop","outputText","eval","has","delete","registerRegistry","getRegister","import","importURL","url","resolveImports","resolveFn","rejectFn","toload","arguments","loadpromises","allSettled","iterable","catch","constructor","transform","_id","startsWith","IMPORT_ID","location","href","parseDslModule","moduleId","loadFromCache","importPromise","modules","variables","updateInputOutputBindings","graph","t","ctree","accept","inbound","edges","edgeCntIt","finish","targets","getEdgeModel","outbound","DslToELKGenerator","_tree","MutltiPathEltDslToELKGenerator","_visitOptional","_visitSequence","_visitRepeat","_visitTerminal","SequenceEltDslToELKGenerator","OptionalEltDslToELKGenerator","RepeatEltDslToELKGenerator","TerminalFlowEltDslToELKGenerator","labels","properties","layoutOptions","getPortModel","style","startArrow","endArrow","parent","getNodeModel","ports","getSynthPortModel","edgeModel","ELKDimensionVisitor","nodeWidth","nodeHeight","iconWidth","portSize","labelHeight","_nodeWidth","_nodeHeight","_iconWidth","_portSize","_labelHeight","stack","x","y","len","w","Math","floor","nl","h","p","l","elkGenerator","toElkGraph","dslObject","elkgraph","elkLayout","elkDimensionVisitor","elk","ELK","options","UNIT","layoutFn","inelkgraph","knownLayoutOptions","d","layout","logging","measureExecutionTime","elkLayoutRelative","elkNode","ax","ay","sections","s","junctionPoints","j","startPoint","endPoint","bendPoints","b","c","toAbsoluteElkLayoutIt","toAbsoluteElkLayout","newSize","nodeSize","newOptions","LINE","Graph","registerRouter","vertices","args","view","Point","EMPTY_ARRAY","createElkX6Renderer","_container_","_minimap_","_width_","_height_","_iconWidth_","containerElt","getElementById","x6Graph","minimapContainer","container","resizing","background","color","interacting","async","scroller","enabled","pannable","pageVisible","pageBreak","panning","modifiers","mousewheel","connecting","allowBlank","allowLoop","highlight","anchor","connector","connectionPoint","router","minimap","minScale","maxScale","padding","cell","isNode","getData","addTools","useCellGeometry","attrs","fill","stroke","strokeWidth","strokeDasharray","fillOpacity","removeTools","createX6Graph","scrollWidth","scrollHeight","toElkLayout","render","lookup","buildNodeLookup","refreshLayoutFn","_elkgraph_","x6Layout","toX6LayoutRec","fromJSON","elkLayoutNode","collapsed","_children","_edges","zoomGraph","factor","zoom","zoomToFit","scale","centerContent","RESOURCE_HTML","wrap","display","iconPath","encodeURI","img","src","textdiv","margin","innerHTML","product","shouldComponentUpdate","hasChanged","nodes","createX6Node","createX6Edge","body","class","fo","clazz","PORT_RADIUS","items","groups","abs","position","zIndex","circle","magnet","fontSize","shape","rx","ry","html","createX6Label","opacity","line","sourceMarker","size","targetMarker","regex1","regex2","match","replace","port","bp","ELKGraphWidget","_width","_height","_flows","closable","caption","contentPane","createVisibleContentPane","errorPane","renderer","visible","_graph","current","renderFlow","samples2","mapArray","gcp_Compute_Engine","gcp_Cloud_Storage","gcp_Cloud_SDK","gcp_Cloud_SQL","gcp_Google_Kubernetes_Engine","gcp_BigQuery","gcp_Cloud_CDN","gcp_Dataflow","gcp_Operations","gcp_Cloud_Run","gcp_Anthos","gcp_See_all_products__100__","gcp_Vertex_AI","gcp_Speech_to_Text","gcp_Vision_AI","gcp_Text_to_Speech","gcp_Cloud_Translation","gcp_Cloud_Natural_Language","gcp_AutoML","gcp_Video_AI","gcp_AI_Infrastructure","gcp_Dialogflow","gcp_AutoML_Tables","gcp_See_all_AI_and_machine_learning_products","gcp_Apigee_API_Management","gcp_Cloud_Endpoints","gcp_Cloud_Healthcare_API","gcp_AppSheet","gcp_API_Gateway","gcp_App_Engine","gcp_Cloud_GPUs","gcp_Migrate_for_Compute_Engine","gcp_Preemptible_VMs","gcp_Shielded_VMs","gcp_Sole_Tenant_Nodes","gcp_Bare_Metal","gcp_Recommender","gcp_VMware_Engine","gcp_See_all_compute_products","gcp_Container_Registry","gcp_Container_Security","gcp_Cloud_Build","gcp_Deep_Learning_Containers","gcp_Kubernetes_Applications","gcp_Artifact_Registry","gcp_Knative","gcp_Cloud_Code","gcp_Looker","gcp_Pub_Sub","gcp_Dataproc","gcp_Cloud_Data_Fusion","gcp_Cloud_Composer","gcp_Dataprep","gcp_Dataplex","gcp_Data_Catalog","gcp_Analytics_Hub","gcp_See_all_developer_tools","gcp_Cloud_Bigtable","gcp_Firestore","gcp_Memorystore","gcp_Cloud_Spanner","gcp_Database_Migration_Service","gcp_Firebase_Realtime_Database","gcp_Datastream","gcp_Cloud_Deployment_Manager","gcp_Cloud_Scheduler","gcp_Cloud_Source_Repositories","gcp_Cloud_Tasks","gcp_Tekton","gcp_Apigee_Healthcare_APIx","gcp_Cloud_Life_Sciences","gcp_Healthcare_Natural_Language_AI","gcp_Cloud_Run_for_Anthos","gcp_Google_Cloud_Marketplace_for_Anthos","gcp_Migrate_for_Anthos","gcp_Traffic_Director","gcp_Cloud_IoT_Core","gcp_Edge_TPU","gcp_Cloud_Shell","gcp_Cloud_Console","gcp_Cloud_Mobile_App","gcp_Cloud_APIs","gcp_Private_Catalog","gcp_Cost_Management","gcp_Intelligent_Management","gcp_Game_Servers","gcp_OpenCue","gcp_Application_Migration","gcp_BigQuery_Data_Transfer_Service","gcp_Cloud_Foundation_Toolkit","gcp_Rapid_Assessment_Migration_Program_RAMP","gcp_Transfer_Appliance","gcp_Storage_Transfer_Service","gcp_Cloud_Armor","gcp_Cloud_DNS","gcp_Cloud_Load_Balancing","gcp_Cloud_NAT","gcp_Hybrid_Connectivity","gcp_Network_Connectivity_Center","gcp_Network_Intelligence_Center","gcp_Network_Service_Tiers","gcp_Network_Telemetry","gcp_See_all_networking_products","gcp_Cloud_Logging","gcp_Cloud_Monitoring","gcp_Error_Reporting","gcp_Kubernetes_Engine_Monitoring","gcp_Cloud_Trace","gcp_Cloud_Profiler","gcp_Cloud_Debugger","gcp_Intelligent_Operations","gcp_Cloud_IAM","gcp_Assured_Workloads","gcp_Cloud_Key_Management","gcp_Confidential_Computing","gcp_Security_Command_Center","gcp_Cloud_Data_Loss_Prevention","gcp_Managed_Service_for_Microsoft_Active_Directory","gcp_Access_Transparency","gcp_Titan_Security_Key","gcp_Secret_Manager","gcp_BeyondCorp_Enterprise","gcp_See_all_security_and_identity_products","gcp_Cloud_Functions","gcp_Workflows","gcp_All_Storage_Products","gcp_Filestore","gcp_Persistent_Disk","gcp_Cloud_Storage_for_Firebase","gcp_Local_SSD","gcp_Archival_Storage","gcp_Google_Workspace_Essentials","flowDsl","DSL_MODULE","gcp","load","loadedImports","loadFn","newValue","loadFnFactory","onload","CommandRegistry","bar","addCommand","iconClass","isEnabled","addKeyBinding","selector","menu1","menu2","menu3","MenuBar","addMenu","contextMenu","ContextMenu","open","preventDefault","processKeydownEvent","createBarWidget","main","palette","elkgraphWidget","editorWidget","mode","lineNumbers","tabSize","myWorker","SharedWorker","messageCallbackFn","jsonrpc","method","flows","params","onmessage","origin","dslObjectMap","postMessage","valueChanged","connect","sender","samples","dock","DockPanel","addWidget","ref","savedLayouts","saveLayout","category","restoreLayout","rank","BoxPanel","setStretch","spacing","onresize","update","createMainWidget","CommandPalette","createPalette","attach"],"mappings":"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","file":"static/js/main.c13ff617.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 52;","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 90;","import {\r\n  CommandPalette, ContextMenu, Menu, MenuBar\r\n} from '@lumino/widgets';\r\n\r\nexport function createMenu(commands: any): Menu {\r\n  const sub1 = new Menu({ commands });\r\n  sub1.title.label = 'More...';\r\n  sub1.title.mnemonic = 0;\r\n  sub1.addItem({ command: 'example:one' });\r\n  sub1.addItem({ command: 'example:two' });\r\n  sub1.addItem({ command: 'example:three' });\r\n  sub1.addItem({ command: 'example:four' });\r\n\r\n  const sub2 = new Menu({ commands });\r\n  sub2.title.label = 'More...';\r\n  sub2.title.mnemonic = 0;\r\n  sub2.addItem({ command: 'example:one' });\r\n  sub2.addItem({ command: 'example:two' });\r\n  sub2.addItem({ command: 'example:three' });\r\n  sub2.addItem({ command: 'example:four' });\r\n  sub2.addItem({ type: 'submenu', submenu: sub1 });\r\n\r\n  const root = new Menu({ commands });\r\n  root.addItem({ command: 'example:copy' });\r\n  root.addItem({ command: 'example:cut' });\r\n  root.addItem({ command: 'example:paste' });\r\n  root.addItem({ type: 'separator' });\r\n  root.addItem({ command: 'example:new-tab' });\r\n  root.addItem({ command: 'example:close-tab' });\r\n  root.addItem({ command: 'example:save-on-exit' });\r\n  root.addItem({ type: 'separator' });\r\n  root.addItem({ command: 'example:open-task-manager' });\r\n  root.addItem({ type: 'separator' });\r\n  root.addItem({ type: 'submenu', submenu: sub2 });\r\n  root.addItem({ type: 'separator' });\r\n  root.addItem({ command: 'example:close' });\r\n\r\n  return root;\r\n}\r\n\r\nexport function createPalette(commands: any) {\r\n  const palette = new CommandPalette({ commands });\r\n  palette.addItem({ command: 'example:cut', category: 'Edit' });\r\n  palette.addItem({ command: 'example:copy', category: 'Edit' });\r\n  palette.addItem({ command: 'example:paste', category: 'Edit' });\r\n  palette.addItem({ command: 'example:one', category: 'Number' });\r\n  palette.addItem({ command: 'example:two', category: 'Number' });\r\n  palette.addItem({ command: 'example:three', category: 'Number' });\r\n  palette.addItem({ command: 'example:four', category: 'Number' });\r\n  palette.addItem({ command: 'example:black', category: 'Number' });\r\n  palette.addItem({ command: 'example:new-tab', category: 'File' });\r\n  palette.addItem({ command: 'example:close-tab', category: 'File' });\r\n  palette.addItem({ command: 'example:save-on-exit', category: 'File' });\r\n  palette.addItem({ command: 'example:open-task-manager', category: 'File' });\r\n  palette.addItem({ command: 'example:close', category: 'File' });\r\n  palette.addItem({ command: 'example:clear-cell', category: 'Notebook Cell Operations' });\r\n  palette.addItem({ command: 'example:cut-cells', category: 'Notebook Cell Operations' });\r\n  palette.addItem({ command: 'example:run-cell', category: 'Notebook Cell Operations' });\r\n  palette.addItem({ command: 'example:cell-test', category: 'Console' });\r\n  palette.addItem({ command: 'notebook:new', category: 'Notebook' });\r\n  palette.id = 'palette';\r\n\r\n  return palette;\r\n}\r\n\r\nexport function createBarWidget(commands: any) {\r\n\r\n  commands.addCommand('example:cut', {\r\n    label: 'Cut',\r\n    mnemonic: 1,\r\n    iconClass: 'fa fa-cut',\r\n    execute: () => {\r\n      console.log('Cut');\r\n    }\r\n  });\r\n\r\n  commands.addCommand('example:copy', {\r\n    label: 'Copy File',\r\n    mnemonic: 0,\r\n    iconClass: 'fa fa-copy',\r\n    execute: () => {\r\n      console.log('Copy');\r\n    }\r\n  });\r\n\r\n  commands.addCommand('example:paste', {\r\n    label: 'Paste',\r\n    mnemonic: 0,\r\n    iconClass: 'fa fa-paste',\r\n    execute: () => {\r\n      console.log('Paste');\r\n    }\r\n  });\r\n\r\n  commands.addCommand('example:new-tab', {\r\n    label: 'New Tab',\r\n    mnemonic: 0,\r\n    caption: 'Open a new tab',\r\n    execute: () => {\r\n      console.log('New Tab');\r\n    }\r\n  });\r\n\r\n  commands.addCommand('example:close-tab', {\r\n    label: 'Close Tab',\r\n    mnemonic: 2,\r\n    caption: 'Close the current tab',\r\n    execute: () => {\r\n      console.log('Close Tab');\r\n    }\r\n  });\r\n\r\n  commands.addCommand('example:save-on-exit', {\r\n    label: 'Save on Exit',\r\n    mnemonic: 0,\r\n    caption: 'Toggle the save on exit flag',\r\n    execute: () => {\r\n      console.log('Save on Exit');\r\n    }\r\n  });\r\n\r\n  commands.addCommand('example:open-task-manager', {\r\n    label: 'Task Manager',\r\n    mnemonic: 5,\r\n    isEnabled: () => false,\r\n    execute: () => { }\r\n  });\r\n\r\n  commands.addCommand('example:close', {\r\n    label: 'Close',\r\n    mnemonic: 0,\r\n    iconClass: 'fa fa-close',\r\n    execute: () => {\r\n      console.log('Close');\r\n    }\r\n  });\r\n\r\n  commands.addCommand('example:one', {\r\n    label: 'One',\r\n    execute: () => {\r\n      console.log('One');\r\n    }\r\n  });\r\n\r\n  commands.addCommand('example:two', {\r\n    label: 'Two',\r\n    execute: () => {\r\n      console.log('Two');\r\n    }\r\n  });\r\n\r\n  commands.addCommand('example:three', {\r\n    label: 'Three',\r\n    execute: () => {\r\n      console.log('Three');\r\n    }\r\n  });\r\n\r\n  commands.addCommand('example:four', {\r\n    label: 'Four',\r\n    execute: () => {\r\n      console.log('Four');\r\n    }\r\n  });\r\n\r\n  commands.addCommand('example:black', {\r\n    label: 'Black',\r\n    execute: () => {\r\n      console.log('Black');\r\n    }\r\n  });\r\n\r\n  commands.addCommand('example:clear-cell', {\r\n    label: 'Clear Cell',\r\n    execute: () => {\r\n      console.log('Clear Cell');\r\n    }\r\n  });\r\n\r\n  commands.addCommand('example:cut-cells', {\r\n    label: 'Cut Cell(s)',\r\n    execute: () => {\r\n      console.log('Cut Cell(s)');\r\n    }\r\n  });\r\n\r\n  commands.addCommand('example:run-cell', {\r\n    label: 'Run Cell',\r\n    execute: () => {\r\n      console.log('Run Cell');\r\n    }\r\n  });\r\n\r\n  commands.addCommand('example:cell-test', {\r\n    label: 'Cell Test',\r\n    execute: () => {\r\n      console.log('Cell Test');\r\n    }\r\n  });\r\n\r\n  commands.addCommand('notebook:new', {\r\n    label: 'New Notebook',\r\n    execute: () => {\r\n      console.log('New Notebook');\r\n    }\r\n  });\r\n\r\n  commands.addKeyBinding({\r\n    keys: ['Accel X'],\r\n    selector: 'body',\r\n    command: 'example:cut'\r\n  });\r\n\r\n  commands.addKeyBinding({\r\n    keys: ['Accel C'],\r\n    selector: 'body',\r\n    command: 'example:copy'\r\n  });\r\n\r\n  commands.addKeyBinding({\r\n    keys: ['Accel V'],\r\n    selector: 'body',\r\n    command: 'example:paste'\r\n  });\r\n\r\n  commands.addKeyBinding({\r\n    keys: ['Accel J', 'Accel J'],\r\n    selector: 'body',\r\n    command: 'example:new-tab'\r\n  });\r\n\r\n  commands.addKeyBinding({\r\n    keys: ['Accel M'],\r\n    selector: 'body',\r\n    command: 'example:open-task-manager'\r\n  });\r\n\r\n  const menu1 = createMenu(commands);\r\n  menu1.title.label = 'File';\r\n  menu1.title.mnemonic = 0;\r\n\r\n  const menu2 = createMenu(commands);\r\n  menu2.title.label = 'Edit';\r\n  menu2.title.mnemonic = 0;\r\n\r\n  const menu3 = createMenu(commands);\r\n  menu3.title.label = 'View';\r\n  menu3.title.mnemonic = 0;\r\n\r\n  const bar = new MenuBar();\r\n  bar.addMenu(menu1);\r\n  bar.addMenu(menu2);\r\n  bar.addMenu(menu3);\r\n  bar.id = 'menuBar';\r\n\r\n  const contextMenu = new ContextMenu({ commands });\r\n\r\n  document.addEventListener('contextmenu', (event: MouseEvent) => {\r\n    if (contextMenu.open(event)) {\r\n      event.preventDefault();\r\n    }\r\n  });\r\n\r\n  contextMenu.addItem({ command: 'example:cut', selector: '.content' });\r\n  contextMenu.addItem({ command: 'example:copy', selector: '.content' });\r\n  contextMenu.addItem({ command: 'example:paste', selector: '.content' });\r\n\r\n  contextMenu.addItem({ command: 'example:one', selector: '.lm-CommandPalette' });\r\n  contextMenu.addItem({ command: 'example:two', selector: '.lm-CommandPalette' });\r\n  contextMenu.addItem({ command: 'example:three', selector: '.lm-CommandPalette' });\r\n  contextMenu.addItem({ command: 'example:four', selector: '.lm-CommandPalette' });\r\n  contextMenu.addItem({ command: 'example:black', selector: '.lm-CommandPalette' });\r\n\r\n  contextMenu.addItem({ command: 'notebook:new', selector: '.lm-CommandPalette-input' });\r\n  contextMenu.addItem({ command: 'example:save-on-exit', selector: '.lm-CommandPalette-input' });\r\n  contextMenu.addItem({ command: 'example:open-task-manager', selector: '.lm-CommandPalette-input' });\r\n  contextMenu.addItem({ type: 'separator', selector: '.lm-CommandPalette-input' });\r\n\r\n  document.addEventListener('keydown', (event: KeyboardEvent) => {\r\n    commands.processKeydownEvent(event);\r\n  });\r\n  return bar;\r\n}","/* tslint:disable */\r\nimport 'es6-promise/auto';  // polyfill Promise on IE\r\n\r\nimport {\r\n  Message\r\n} from '@lumino/messaging';\r\n\r\nimport {\r\n  Widget\r\n} from '@lumino/widgets';\r\n\r\nimport { ISignal, Signal } from '@lumino/signaling';\r\n\r\nimport CodeMirror from 'codemirror';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/mode/javascript/javascript.js';\r\nimport 'codemirror/mode/css/css.js';\r\nimport 'codemirror/addon/display/panel.js';\r\nimport 'codemirror/addon/lint/lint.js';\r\nimport 'codemirror/addon/lint/javascript-lint.js';\r\nimport 'codemirror/addon/lint/lint.css';\r\nimport '../style/widget-style.css';\r\n\r\n//import 'tslint';\r\n//globalThis.JSHINT = JSHINT;\r\n\r\n/**\r\n * A widget which hosts a CodeMirror editor.\r\n */\r\nexport class CodeMirrorWidget extends Widget {\r\n\r\n  constructor(config?: CodeMirror.EditorConfiguration) {\r\n    super();\r\n    this.addClass('CodeMirrorWidget');\r\n\r\n    const div = document.createElement('div');\r\n    div.setAttribute('style', 'padding:4px;background-color: #dfdfdf;');\r\n    this.node.appendChild(div);\r\n\r\n    this.selectElt = document.createElement('select');\r\n    this.selectElt.setAttribute('class', 'flow-select');\r\n\r\n    div.appendChild(this.selectElt);\r\n\r\n    const opt = document.createElement('option');\r\n    opt.value = 'Option 1';\r\n    opt.text = 'Option 1';\r\n    this.selectElt.add(opt);\r\n\r\n    const separator = document.createElement('div');\r\n    separator.setAttribute('class', 'separator');\r\n    this.node.appendChild(separator);\r\n\r\n    const content = document.createElement('div');\r\n    content.setAttribute('class', 'CodeMirrorWidget');\r\n    this.node.appendChild(content);\r\n\r\n    this._editor = CodeMirror(content, config);\r\n    const self = this;\r\n    self.editor.on('changes', (instance) => {\r\n      // Emit changes\r\n      const content = instance.getDoc().getValue();\r\n      self._valueChanged.emit(content);\r\n\r\n    });\r\n  }\r\n\r\n  get editor(): CodeMirror.Editor {\r\n    return this._editor;\r\n  }\r\n\r\n  get content(): string {\r\n    return this._editor.getDoc().getValue();\r\n  }\r\n\r\n  set content(text: string) {\r\n    this._editor.getDoc().setValue(text);\r\n  }\r\n\r\n  loadTarget(target: string): void {\r\n    const doc = this._editor.getDoc();\r\n    fetch(target)\r\n      .then(response => response.json())\r\n      .then(function (data) {\r\n        doc.setValue(data);\r\n      });\r\n  }\r\n\r\n  onAfterAttach(msg: Message): void {\r\n    this._editor.refresh();\r\n  }\r\n\r\n  onResize(msg: Widget.ResizeMessage): void {\r\n    if (msg.width < 0 || msg.height < 0) {\r\n      this._editor.refresh();\r\n    } else {\r\n      this._editor.setSize(msg.width, msg.height);\r\n    }\r\n  }\r\n  // samples\r\n  set samples(values: Array<string>) {\r\n    // Convert to Map\r\n    this._samples = new Map();\r\n    // Populate select component from list of samples\r\n    // Recreate sample options\r\n    while (this.selectElt.firstChild) {\r\n      this.selectElt.firstChild.remove();\r\n    }\r\n\r\n    values.forEach((value, index) => {\r\n      const opt: HTMLOptionElement = document.createElement('option');\r\n      opt.value = index.toString();\r\n      opt.text = `Sample #${index + 1}`;\r\n      if (isScript(value)) {\r\n        opt.text = `Sample #${index + 1} - ${value}`;\r\n        fetch(value).then((res) => {\r\n          return res.text();\r\n        }).then((text) => {\r\n          this._samples.set(opt.value, text);\r\n        });\r\n      } else {\r\n        this._samples.set(opt.value, value);\r\n      }\r\n\r\n      this.selectElt.add(opt);\r\n    });\r\n    // Update sample when the selection changes \r\n    this.selectElt.addEventListener('change', (event: Event) => {\r\n      const result: string = this._samples.get((event.target as HTMLSelectElement).value) || '';\r\n      // Update Editor with current selection \r\n      this._editor.getDoc().setValue(result);\r\n      this._valueChanged.emit(result);\r\n    });\r\n    // Set default\r\n    this._editor.getDoc().setValue(this._samples.get('0') || '');\r\n  }\r\n\r\n  get valueChanged(): ISignal<this, string> {\r\n    return this._valueChanged;\r\n  }\r\n\r\n  private _valueChanged = new Signal<this, string>(this);\r\n  private _editor: CodeMirror.Editor;\r\n  private selectElt: HTMLSelectElement;\r\n  private _samples: Map<string, string> = new Map();\r\n\r\n}\r\n\r\nfunction isScript(source: any) {\r\n  return (source.endsWith('.js') || source.endsWith('.jsx') || source.endsWith('.ts') || source.endsWith('.tsx'));\r\n}","/* tslint:disable */\r\nimport 'es6-promise/auto';  // polyfill Promise on IE\r\n\r\nimport {\r\n  Message\r\n} from '@lumino/messaging';\r\n\r\nimport {\r\n  Widget\r\n} from '@lumino/widgets';\r\n\r\nimport { ISignal, Signal } from '@lumino/signaling';\r\n\r\nimport * as ace from 'ace-builds';\r\nimport '../style//widget-style.css';\r\n\r\nace.config.set('basePath', 'https://ajaxorg.github.io/ace-builds/src-noconflict');\r\n\r\n//import 'tslint';\r\n//globalThis.JSHINT = JSHINT;\r\n\r\n/**\r\n * A widget which hosts a Ace editor.\r\n */\r\nexport class AceEditorWidget extends Widget {\r\n\r\n  constructor(config?: ace.Ace.EditorOptions) {\r\n    super();\r\n    this.addClass('CodeMirrorWidget');\r\n\r\n    const div = document.createElement('div');\r\n    div.setAttribute('style', 'padding:4px;background-color: #dfdfdf;');\r\n    this.node.appendChild(div);\r\n\r\n    this.selectElt = document.createElement('select');\r\n    this.selectElt.setAttribute('class', 'flow-select');\r\n\r\n    div.appendChild(this.selectElt);\r\n\r\n    const opt = document.createElement('option');\r\n    opt.value = 'Option 1';\r\n    opt.text = 'Option 1';\r\n    this.selectElt.add(opt);\r\n\r\n    const separator = document.createElement('div');\r\n    separator.setAttribute('class', 'separator');\r\n    this.node.appendChild(separator);\r\n\r\n    const content = document.createElement('div');\r\n    content.setAttribute('class', 'AceEditorWidget');\r\n    this.node.appendChild(content);\r\n\r\n    const editor = ace.edit(content, config || {\r\n      mode: 'ace/mode/javascript',\r\n      // selectionStyle: 'text',\r\n      autoScrollEditorIntoView: true,\r\n      copyWithEmptySelection: true,\r\n      enableAutoIndent: true,\r\n      hScrollBarAlwaysVisible: true,\r\n      vScrollBarAlwaysVisible: true,\r\n      theme: 'ace/theme/textmate',\r\n      showPrintMargin: true\r\n    });\r\n\r\n    editor.session.setTabSize(2);\r\n    editor.renderer.setScrollMargin(0, 10, 10, 10);\r\n    this._editor = editor;\r\n\r\n    const self = this;\r\n    self.editor.session.on('change', function (delta: ace.Ace.Delta) {\r\n      // delta.start, delta.end, delta.lines, delta.action\r\n      // Emit changes\r\n      const content = self.editor.getValue();\r\n      self._valueChanged.emit(content);\r\n\r\n    });\r\n  }\r\n\r\n  get editor(): any {\r\n    return this._editor;\r\n  }\r\n\r\n  get content(): string {\r\n    return this._editor.getValue();\r\n  }\r\n\r\n  set content(text: string) {\r\n    this._editor.setValue(text, -1);\r\n  }\r\n\r\n  loadTarget(target: string): void {\r\n    const doc = this._editor;\r\n    fetch(target)\r\n      .then(response => response.json())\r\n      .then(function (data) {\r\n        doc.setValue(data, -1);\r\n      });\r\n  }\r\n\r\n  onAfterAttach(msg: Message): void {\r\n\r\n  }\r\n\r\n  onResize(msg: Widget.ResizeMessage): void {\r\n    this._editor.container.setAttribute('width', msg.width.toString());\r\n    if (msg.width > 0 && msg.height > 0) {\r\n      this._editor.container.style.width = msg.width + 'px';\r\n      this._editor.container.style.height = msg.height + 'px';\r\n      this._editor.resize();\r\n    }\r\n  }\r\n\r\n  // samples\r\n  set samples(values: Array<string>) {\r\n    // Convert to Map\r\n    this._samples = new Map();\r\n    // Populate select component from list of samples\r\n    // Recreate sample options\r\n    while (this.selectElt.firstChild) {\r\n      this.selectElt.firstChild.remove();\r\n    }\r\n\r\n    values.forEach((value, index) => {\r\n      const opt: HTMLOptionElement = document.createElement('option');\r\n      opt.value = index.toString();\r\n      opt.text = `Sample #${index + 1}`;\r\n      if (isScript(value)) {\r\n        opt.text = `Sample #${index + 1} - ${value}`;\r\n        fetch(value).then((res) => {\r\n          return res.text();\r\n        }).then((text) => {\r\n          this._samples.set(opt.value, text);\r\n        });\r\n      } else {\r\n        this._samples.set(opt.value, value);\r\n      }\r\n\r\n      this.selectElt.add(opt);\r\n    });\r\n    // Update sample when the selection changes \r\n    this.selectElt.addEventListener('change', (event: Event) => {\r\n      const result: string = this._samples.get((event.target as HTMLSelectElement).value) || '';\r\n      // Update Editor with current selection \r\n      this._editor.setValue(result, -1);\r\n      this._valueChanged.emit(result);\r\n    });\r\n    // Set default\r\n    this._editor.setValue(this._samples.get('0') || '', -1);\r\n  }\r\n\r\n  get valueChanged(): ISignal<this, string> {\r\n    return this._valueChanged;\r\n  }\r\n\r\n  private _valueChanged = new Signal<this, string>(this);\r\n  private _editor: ace.Ace.Editor;\r\n  private selectElt: HTMLSelectElement;\r\n  private _samples: Map<string, string> = new Map();\r\n\r\n}\r\n\r\nfunction isScript(source: any) {\r\n  return (source.endsWith('.js') || source.endsWith('.jsx') || source.endsWith('.ts') || source.endsWith('.tsx'));\r\n}","/**\r\n * idGenFn function.\r\n */\r\nfunction* idGenFn(prefix, index) {\r\n  while (index >= 0) {\r\n    let reset = yield index++;\r\n    if (reset) {\r\n      index = 0;\r\n    }\r\n  }\r\n}\r\n\r\nexport const NODEIDGENFN = idGenFn('node.', 0);\r\n\r\n/**\r\n * Class ResourceElt.\r\n */\r\nexport class ResourceElt {\r\n  /**\r\n   * Create a ResourceElt.\r\n   * @param {object} elts - The elts value.\r\n   * @param {string} kind - The kind value.\r\n   * @param {string} tagName - The tagName value.\r\n   * @param {string} provider - The resource provider value.\r\n   */\r\n  constructor(elts, kind, tagName, provider) {\r\n    // Nex Id Generator\r\n    this.idGenIt = NODEIDGENFN;\r\n    this.title = 'title';\r\n\r\n    //get new id\r\n    this.kind = kind || 'resource';\r\n    this.tagName = tagName || 'resource';\r\n    this.id = this.tagName + '.' + this.idGenIt.next().value;\r\n    this.provider = provider;\r\n    this.compound = false;\r\n\r\n    // Layout direction\r\n    this.direction = null;\r\n\r\n    this._start = null;\r\n    this._finish = null;\r\n\r\n    this.data = {};\r\n    this.link = null;\r\n    this.name = this.id;\r\n    this.title = this.id;\r\n\r\n    this.elts = [];\r\n    // Support for dataflow with input and output bindings\r\n    this.inputElts = [];\r\n    this.outputElts = [];\r\n\r\n    let r = this.resolveElt(elts);\r\n    if (r !== null) {\r\n      // only one elt can be added\r\n      this.elts.push(r);\r\n      this.title = r.toString();\r\n    }\r\n\r\n  }\r\n\r\n  _up_() {\r\n    this.direction = 'UP';\r\n    return this;\r\n  }\r\n\r\n  _down_() {\r\n    this.direction = 'DOWN';\r\n    return this;\r\n  }\r\n\r\n  _left_() {\r\n    this.direction = 'LEFT';\r\n    return this;\r\n  }\r\n\r\n  _right_() {\r\n    this.direction = 'RIGHT';\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Performs preorder traversal.\r\n   * @param {(value: T, index: number, array: T[], thisArg: any) => void} callbackFn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\r\n   * @param {Object} thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n   */\r\n  preorder(callbackFn, i = -1, arr = [], thisArg = undefined) {\r\n    let self = this;\r\n    callbackFn(self, i, arr, thisArg);\r\n    self.forEach((v, n, a) => {\r\n      if (v.preorder) {\r\n        v.preorder(callbackFn, n, a, thisArg);\r\n      }\r\n    }, thisArg);\r\n\r\n  }\r\n\r\n  /**\r\n  * Performs postorder traversal.\r\n  * @param {(value: T, index: number, array: T[], thisArg: any)) => void} callbackFn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\r\n  * @param {Object} thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n  */\r\n  postorder(callbackFn, i = -1, arr = [], thisArg = undefined) {\r\n    let self = this;\r\n    self.forEach((v, n, a) => {\r\n      if (v.postorder) {\r\n        v.postorder(callbackFn, n, a, thisArg);\r\n      }\r\n    }, thisArg);\r\n    callbackFn(self, i, arr, thisArg);\r\n  }\r\n\r\n  /**\r\n   * Performs the specified action for each element in an array.\r\n   * @param {(value: T, index: number, array: T[]) => void} callbackFn  A function that accepts up to three arguments. forEach calls the callbackfn function one time for each element in the array.\r\n   * @param {Object} thisArg  An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n   */\r\n  forEach(callbackFn, thisArg) {\r\n    (this.elts || []).forEach(callbackFn, thisArg);\r\n  }\r\n\r\n  /**\r\n   * Calls a defined callback function on each element of an array, and returns an array that contains the results.\r\n   * @param {(value: T, index: number, array: T[]) => U} callbackFn A function that accepts up to three arguments. The map method calls the callbackfn function one time for each element in the array.\r\n   * @param {Object} thisArg An object to which the this keyword can refer in the callbackfn function. If thisArg is omitted, undefined is used as the this value.\r\n   * @returns {U[]}\r\n   */\r\n  map(callbackFn, thisArg) {\r\n    return (this.elts || []).map(callbackFn, thisArg);\r\n  }\r\n\r\n  /**\r\n   * Returns the elements of an array that meet the condition specified in a callback function.\r\n   * @param {(value: T, index: number, array: T[]) => unknown} predicateFn A function that accepts up to three arguments. The filter method calls the predicate function one time for each element in the array.\r\n   * @param {Object} thisArg An object to which the this keyword can refer in the predicate function. If thisArg is omitted, undefined is used as the this value.\r\n   * @returns {T[]}\r\n   */\r\n  filter(predicateFn, thisArg) {\r\n    // Filter children\r\n    return (this.elts || []).filter(predicateFn, thisArg);\r\n\r\n  }\r\n\r\n  get start() {\r\n    if (this._start == null) {\r\n      this._start = {\r\n        kind: this.kind,       \r\n        tagName: this.tagName,\r\n        id: this.id + '.start',\r\n        provider: this.provider,\r\n        compound: this.compound,\r\n        isTerminal: () => true,\r\n        elts: []\r\n      };\r\n    }\r\n\r\n    return this._start;\r\n  }\r\n\r\n  set start(val) {\r\n    this._start = val;\r\n  }\r\n\r\n  get finish() {\r\n    if (this._finish == null) {\r\n      this._finish = {\r\n        kind: this.kind,\r\n        tagName: this.tagName,\r\n        id: this.id + '.finish',\r\n        provider: this.provider,\r\n        compound: this.compound,\r\n        isTerminal: () => true,\r\n        elts: []\r\n      };\r\n    }\r\n    return this._finish;\r\n\r\n  }\r\n\r\n  set finish(val) {\r\n    this._finish = val;\r\n  }\r\n\r\n  isTerminal() {\r\n    return true;\r\n  }\r\n\r\n  isGroup() {\r\n    return (this.kind === 'group');\r\n  }\r\n\r\n  resolveElt(elt) {\r\n    // Only accept primitive types as Terminal Element \r\n    let result = null;\r\n    if (elt !== undefined) {\r\n      try {\r\n        if (typeof elt === 'function') {\r\n          result = elt.call();\r\n        }\r\n\r\n        if (typeof result === 'object') {\r\n          // Allow complex element as terminal\r\n          result = elt;\r\n\r\n        } else {\r\n          // primitive\r\n          result = elt.toString();\r\n        }\r\n\r\n      } catch (err) {\r\n        console.error(err.message + ' - ' + err);\r\n      }\r\n    }\r\n    return result;\r\n  }\r\n\r\n  toElt(elt) {\r\n    if (typeof elt === 'function') {\r\n      return elt.call();\r\n    } else if (typeof elt !== 'object') {\r\n      // very likely a primitive type\r\n      return new ResourceElt(elt, 'resource', 'resource', this.provider);\r\n    }\r\n    // default to object\r\n    return elt;\r\n  }\r\n\r\n  foundElt(elt) {\r\n    return this.id === elt.id;\r\n  }\r\n\r\n  accept(visitor, filterFn) {\r\n    return visitor.visit(this, filterFn);\r\n  }\r\n\r\n  _add_(elt) {\r\n    let r = this.resolveElt(elt);\r\n    if (r !== null) {\r\n      // only one elt can be added\r\n      if (this.elts.length > 0) {\r\n        this.elts.splice(0, this.elts.length);\r\n      }\r\n      this.elts.push(r);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  _require_(elt) {\r\n    let e = this.toElt(elt);\r\n    // Add self to group elt\r\n    if (e.isGroup()) {\r\n      e._add_(this);\r\n    } else {\r\n      this._add_(elt);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  _tagName_(value) {\r\n    if (value) {\r\n      this.tagName = value;\r\n      // Replace prefix with tagName\r\n      let tmp = this.id.split('\\.');\r\n      tmp[0] = this.tagName;\r\n      this.id = tmp.join('.');\r\n    }\r\n    return this;\r\n  }\r\n\r\n  _title_(value) {\r\n    this.title = value;\r\n    return this;\r\n  }\r\n\r\n  _name_(value) {\r\n    this.name = value;\r\n    return this;\r\n  }\r\n\r\n  _id_(value) {\r\n    this.id = value;\r\n    return this;\r\n  }\r\n\r\n  _set_(key, value) {\r\n    this.data[key] = value;\r\n    return this;\r\n  }\r\n\r\n  _get_(key) {\r\n    return this.data[key];\r\n  }\r\n\r\n  _link_(value) {\r\n    this.link = value;\r\n    return this;\r\n  }\r\n\r\n  // Add a reference \r\n  _ref_(elt) {\r\n    return this._add_(elt);\r\n  }\r\n\r\n  // Inbound bindings\r\n  _in_(...elts) {\r\n    if (Array.isArray(elts)) {\r\n      elts.forEach((e) => {\r\n        let r = this.toElt(e);\r\n        if (r != null) {\r\n          this.inputElts.push(r);\r\n        }\r\n      }, this);\r\n\r\n    } else {\r\n      let r = this.toElt(elts);\r\n      if (r != null) {\r\n        this.inputElts.push(r);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  // Outbound bindings\r\n  _out_(...elts) {\r\n    if (Array.isArray(elts)) {\r\n      elts.forEach((e) => {\r\n        let r = this.toElt(e);\r\n        if (r != null) {\r\n          this.outputElts.push(r);\r\n        }\r\n      }, this);\r\n\r\n    } else {\r\n      let r = this.toElt(elts);\r\n      if (r != null) {\r\n        this.outputElts.push(r);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  _from_(...elts) {\r\n    return this._in_(...elts);\r\n  }\r\n\r\n  _to_(...elts) {\r\n    return this._out_(...elts);\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Class CompositeResourceElt.\r\n * @extends ResourceElt\r\n */\r\nexport class CompositeResourceElt extends ResourceElt {\r\n  /**\r\n   * Create a CompositeResourceElt.\r\n   * @param {object} elts - The elts value.\r\n   * @param {string} kind - The kind value.\r\n   * @param {string} tagName - The tagName value.\r\n   * @param {string} provider - The resource provider value.\r\n   */\r\n  constructor(elts, kind, tagName, provider) {\r\n    super(elts, kind, tagName, provider);\r\n    this.elts = [];\r\n    this.title = null;\r\n    this._start = null;\r\n    this._finish = null;\r\n    //this.start = new ResourceElt('start', 'resource', 'mark', provider);\r\n    //this.finish = new ResourceElt('finish', 'resource', 'mark', provider);\r\n    this.compound = true;\r\n\r\n    if (Array.isArray(elts)) {\r\n      this.elts = elts.map(\r\n        (elt) => { return this.resolveElt(elt); }, this\r\n      ).filter(e => { return e != null; }, this);\r\n\r\n    } else {\r\n      let r = this.resolveElt(elts);\r\n      if (r != null) {\r\n        this.elts.push(r);\r\n      }\r\n    }\r\n\r\n    if (this.title === null) {\r\n      this.title = '' + this.id;\r\n    }\r\n  }\r\n\r\n  isTerminal() {\r\n    return false;\r\n  }\r\n\r\n  resolveElt(elt) {\r\n    return this.toElt(elt);\r\n  }\r\n\r\n  foundElt(elt) {\r\n    return this.elts.filter(e => e.id === elt.id).length > 0;\r\n  }\r\n\r\n  _add_(...elts) {\r\n    if (Array.isArray(elts)) {\r\n      elts.forEach((e) => {\r\n        let r = this.resolveElt(e);\r\n        if (r != null) {\r\n          this.elts.push(r);\r\n        }\r\n      }, this);\r\n\r\n    } else {\r\n      let r = this.resolveElt(elts);\r\n      if (r != null) {\r\n        this.elts.push(r);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  // Add a reference if it doesn't exist\r\n  _ref_(...elts) {\r\n    if (Array.isArray(elts)) {\r\n      elts.forEach((e) => {\r\n        if (!this.foundElt(e)) {\r\n          this._add_(e);\r\n        }\r\n      }, this);\r\n\r\n    } else if (!this.foundElt(elts)) {\r\n      this._add_(elts);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n}\r\n","import {\r\n  CompositeResourceElt,\r\n  ResourceElt\r\n} from './resource-base.js';\r\n\r\nexport const WORKFLOW_KIND = 'workflow';\r\nexport const WORKFLOW_PROVIDER = 'default';\r\n\r\n/**\r\n * Class FanInFanOutElt.\r\n * @extends CompositeResourceElt\r\n */\r\nexport class FanOutFanInElt extends CompositeResourceElt {\r\n  /**\r\n   * Create a FanOutFanInElt.\r\n   * @param {object} elts - The elts value.\r\n   */\r\n  constructor(elts) {\r\n    super(elts, 'fanOut_fanIn', 'fanOut_fanIn', WORKFLOW_PROVIDER);\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Class FanInElt.\r\n * @extends CompositeResourceElt\r\n */\r\nexport class FanInElt extends CompositeResourceElt {\r\n  /**\r\n   * Create a FanInElt.\r\n   * @param {object} elts - The elts value.\r\n   */\r\n  constructor(elts) {\r\n    super(elts, 'fanIn', 'fanIn', WORKFLOW_PROVIDER);\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Class FanOutElt.\r\n * @extends CompositeResourceElt\r\n */\r\nexport class FanOutElt extends CompositeResourceElt {\r\n  /**\r\n   * Create a FanOutElt.\r\n   * @param {object} elts - The elts value.\r\n   */\r\n  constructor(elts) {\r\n    super(elts, 'fanOut', 'fanOut', WORKFLOW_PROVIDER);\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Class OptionalElt.\r\n * @extends CompositeResourceElt\r\n */\r\nexport class OptionalElt extends CompositeResourceElt {\r\n  /**\r\n   * Create a OptionalElt.\r\n   * @param {object} elts - The elts value.\r\n   */\r\n  constructor(elts) {\r\n    super(elts, 'optional', 'optional', WORKFLOW_PROVIDER);\r\n    // skip node\r\n    this.skip = (new ResourceElt('skip', 'resource', 'mark', this.provider));\r\n  }\r\n\r\n  _add_(elt) {\r\n    // only one elt can be added\r\n    if (this.elts.length > 0) {\r\n      this.elts.splice(0, this.elts.length);\r\n    }\r\n    this.elts.push(this.resolveElt(elt));\r\n    return this;\r\n  }\r\n}\r\n\r\n/**\r\n * Class RepeatElt.\r\n * @extends CompositeResourceElt\r\n */\r\nexport class RepeatElt extends CompositeResourceElt {\r\n  /**\r\n   * Create a RepeatElt.\r\n   * @param {object} elts - The elts value.\r\n   */\r\n  constructor(elts) {\r\n    super(elts, 'repeat', 'repeat', WORKFLOW_PROVIDER);\r\n    // loop node\r\n    this.loop = (new ResourceElt('loop', 'resource', 'mark', this.provider));\r\n  }\r\n\r\n  _add_(elt) {\r\n    // only one elt can be added\r\n    if (this.elts.length > 0) {\r\n      this.elts.splice(0, this.elts.length);\r\n    }\r\n    this.elts.push(this.resolveElt(elt));\r\n    return this;\r\n  }\r\n}\r\n\r\n/**\r\n * Class SequenceElt.\r\n * @extends CompositeResourceElt\r\n */\r\nexport class SequenceElt extends CompositeResourceElt {\r\n  /**\r\n   * Create a SequenceElt.\r\n   * @param {object} elts - The elts value.\r\n   */\r\n  constructor(elts) {\r\n    super(elts, 'sequence', 'sequence', WORKFLOW_PROVIDER);\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Class TerminalElt.\r\n */\r\nexport class TerminalElt extends ResourceElt {\r\n\r\n  /**\r\n   * Create a TerminalElt.\r\n   * @param {object} elt - The elt value.\r\n   */\r\n  constructor(elt) {\r\n    super(elt, 'resource', 'resource', WORKFLOW_PROVIDER);\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Class GroupElt.\r\n * @extends CompositeResourceElt\r\n */\r\nexport class GroupElt extends CompositeResourceElt {\r\n  /**\r\n   * Create a SequenceElt.\r\n   * @param {object} elts - The elts value.\r\n   */\r\n  constructor(elts) {\r\n    super(elts, 'group', 'group', WORKFLOW_PROVIDER);\r\n  }\r\n\r\n}","export const WORKFLOW_KIND = 'workflow';\r\nexport const WORKFLOW_PROVIDER = 'default';\r\n\r\nexport const BASE_ICONS_MAP = new Map([\r\n  ['fanOut_fanIn', { className: 'fanOut_fanIn', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanOut_fanIn-diagram-3-fill.svg' }],\r\n  ['choice', { className: 'choice', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanOut_fanIn-diagram-3-fill.svg' }],\r\n  ['fanIn', { className: 'fanIn', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanIn-diagram-3-fill.svg' }],\r\n  ['merge', { className: 'merge', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanIn-diagram-3-fill.svg' }],\r\n  ['fanOut', { className: 'fanOut', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanOut-diagram-3-fill.svg' }],\r\n  ['branch', { className: 'branch', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanOut-diagram-3-fill.svg' }],\r\n  ['split', { className: 'split', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanOut-diagram-3-fill.svg' }],\r\n  ['tree', { className: 'tree', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanOut-diagram-3-fill.svg' }],\r\n  ['link', { className: 'link', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanOut-diagram-3-fill.svg' }],\r\n  ['use', { className: 'use', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanOut-diagram-3-fill.svg' }],\r\n  ['parallel', { className: 'parallel', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/fanOut-diagram-3-fill.svg' }],\r\n  ['optional', { className: 'optional', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/optional-question-square-fill.svg' }],\r\n  ['repeat', { className: 'repeat', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/repeat-bootstrap-reboot.svg' }],\r\n  ['sequence', { className: 'sequence', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/sequence-diagram-3-fill.svg' }],\r\n  ['resource', null],\r\n  ['state', null],\r\n  ['zeroOrMore', { className: 'zeroOrMore', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/repeat-bootstrap-reboot.svg' }],\r\n  ['oneOrMore', { className: 'oneOrMore', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/repeat-bootstrap-reboot.svg' }],\r\n  ['group', { className: 'group', provider: WORKFLOW_PROVIDER, iconURL: 'assets/icons/base/group-grid-fill.svg' }]\r\n]\r\n);","import {\r\n  FanOutFanInElt,\r\n  FanInElt,\r\n  FanOutElt,\r\n  OptionalElt,\r\n  RepeatElt,\r\n  SequenceElt,\r\n  TerminalElt,\r\n  GroupElt\r\n} from './resource-elt.js';\r\n\r\nimport { BASE_ICONS_MAP } from './base-icons-map';\r\n\r\n/**\r\n * Create a fanOut_fanIn dsl tree.\r\n * @param {array|object} elts - The elements.\r\n * @return {object} flow dsl.\r\n */\r\nexport function fanOut_fanIn(...elts) {\r\n  return new FanOutFanInElt([...elts])._set_('style', BASE_ICONS_MAP.get('fanOut_fanIn'));\r\n}\r\n\r\nexport function choice(...elts) {\r\n  return fanOut_fanIn(...elts)._tagName_('choice')._set_('style', BASE_ICONS_MAP.get('choice'));\r\n}\r\n\r\n/**\r\n * Create a fanIn dsl tree.\r\n * @param {array|object} elts - The elements.\r\n * @return {object} flow dsl.\r\n */\r\nexport function fanIn(...elts) {\r\n  return new FanInElt([...elts])._set_('style', BASE_ICONS_MAP.get('fanIn'));\r\n}\r\n\r\nexport function merge(...elts) {\r\n  return fanIn(...elts)._tagName_('fanIn')._set_('style', BASE_ICONS_MAP.get('merge'));\r\n}\r\n\r\n/**\r\n * Create a fanOut dsl tree.\r\n * @param {array|object} elts - The elements.\r\n * @return {object} flow dsl.\r\n */\r\nexport function fanOut(...elts) {\r\n  return new FanOutElt([...elts])._set_('style', BASE_ICONS_MAP.get('fanOut'));\r\n}\r\n\r\nexport function branch(...elts) {\r\n  return fanOut(...elts)._tagName_('branch')._set_('style', BASE_ICONS_MAP.get('branch'));\r\n}\r\n\r\nexport function split(...elts) {\r\n  return fanOut(...elts)._tagName_('split')._set_('style', BASE_ICONS_MAP.get('split'));\r\n}\r\n\r\nexport function tree(...elts) {\r\n  return fanOut(...elts)._tagName_('tree')._set_('style', BASE_ICONS_MAP.get('tree'));\r\n}\r\n\r\nexport function link(...elts) {\r\n  return fanOut(...elts)._tagName_('link')._set_('style', BASE_ICONS_MAP.get('link'));\r\n}\r\n\r\nexport function use(...elts) {\r\n  return fanOut(...elts)._tagName_('use')._set_('style', BASE_ICONS_MAP.get('use'));\r\n}\r\n\r\nexport function parallel(...elts) {\r\n  return fanOut(...elts)._tagName_('parallel')._set_('style', BASE_ICONS_MAP.get('parallel'));\r\n}\r\n\r\n/**\r\n * Create an optional dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} flow dsl.\r\n */\r\nexport function optional(elt) {\r\n  return new OptionalElt(elt)._set_('style', BASE_ICONS_MAP.get('optional'));\r\n}\r\n\r\n/**\r\n * Create a repeat dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} flow dsl.\r\n */\r\nexport function repeat(elt) {\r\n  return new RepeatElt(elt)._set_('style', BASE_ICONS_MAP.get('repeat'));\r\n}\r\n\r\nexport function oneOrMore(elt) {\r\n  return repeat(elt)._set_('style', BASE_ICONS_MAP.get('oneOrMore'));\r\n}\r\n\r\n/**\r\n * Create a sequence dsl tree.\r\n * @param {array|object} elts - The elements.\r\n * @return {object} flow dsl.\r\n */\r\nexport function sequence(...elts) {\r\n  return new SequenceElt([...elts])._set_('style', BASE_ICONS_MAP.get('sequence'));\r\n}\r\n\r\nexport function process(...elts) {\r\n  return sequence(...elts)._tagName_('process')._set_('style', BASE_ICONS_MAP.get('process'));\r\n}\r\n\r\nexport function activity(...elts) {\r\n  return sequence(...elts)._tagName_('activity')._set_('style', BASE_ICONS_MAP.get('activity'));\r\n}\r\n\r\n/**\r\n * Create a terminal dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} flow dsl.\r\n */\r\nexport function terminal(elt) {\r\n  return new TerminalElt(elt)._set_('style', BASE_ICONS_MAP.get('resource'));\r\n}\r\n\r\nexport function transition(elt) {\r\n  return terminal(elt)._tagName_('transition')._set_('style', BASE_ICONS_MAP.get('transition'));\r\n}\r\n\r\n/**\r\n * Create a state dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} flow dsl.\r\n */\r\nexport function state(elt) {\r\n  return terminal(elt)._tagName_('state')._set_('style', BASE_ICONS_MAP.get('state'));\r\n}\r\n\r\n/**\r\n * Create a zeroOrMore dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} flow dsl.\r\n */\r\nexport function zeroOrMore(elt) {\r\n  return optional(repeat(elt))._set_('style', BASE_ICONS_MAP.get('zeroOrMore'));\r\n}\r\n\r\n/**\r\n * Create a resource dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} resource dsl.\r\n */\r\nexport function resource(...elt) {\r\n  if(elt.length >1) {\r\n    return group(...elt);\r\n  } else {\r\n    return terminal(elt[0])._tagName_('resource')._set_('style', BASE_ICONS_MAP.get('resource'));\r\n  }\r\n  \r\n}\r\n\r\n/**\r\n * Create a group dsl tree.\r\n * @param {object} elts - The elements.\r\n * @return {object} group dsl.\r\n */\r\nexport function group(...elts) {\r\n  return new GroupElt([...elts])._set_('style', BASE_ICONS_MAP.get('group'));\r\n}\r\n\r\n/**\r\n * Create a block dsl tree.\r\n * @param {object} elts - The elements.\r\n * @return {object} group dsl.\r\n */\r\n export function block(...elts) {\r\n  return group(...elt)._tagName_('block')._set_('style', BASE_ICONS_MAP.get('group'));\r\n}\r\n\r\n// pipeline -> stages -> jobs -> tasks -> steps ","import {\r\n  ResourceElt,\r\n  CompositeResourceElt\r\n} from './resource-base.js';\r\n\r\nexport function isContainer(n) {\r\n  return (n.children && n.children != null && n.children.length > 0) ||\r\n    (n && n.model && n.model.compound === true);\r\n}\r\n\r\nexport function clone_bak(obj) {\r\n  let copy = Object.create(Object.getPrototypeOf(obj), Object.getOwnPropertyDescriptors(obj));\r\n  return copy;\r\n}\r\n\r\n// Reset ids\r\nexport function resetIds(obj, idx) {\r\n  if (obj.id) {\r\n    // Append a suffix\r\n    obj.id = obj.id + '_' + idx;\r\n\r\n    if (obj._start !== null) {\r\n      obj._start.id = obj._start.id + '_' + idx;\r\n    }\r\n    if (obj._finish !== null) {\r\n      obj._finish.id = obj._finish.id + '_' + idx;\r\n    }\r\n  }\r\n  return obj;\r\n}\r\n\r\n// Clone and reset ids\r\nexport function clone(obj, idx) {\r\n  if (obj === undefined || obj === null) {\r\n    return obj;\r\n  }\r\n  let copy = Object.create(Object.getPrototypeOf(obj), Object.getOwnPropertyDescriptors(obj));\r\n  // Deep copy\r\n  if (copy.compound) {\r\n    if (Array.isArray(copy.elts)) {\r\n      copy.elts = copy.elts.map((elt) => {\r\n        return clone(elt, idx);\r\n      });\r\n    }\r\n  }\r\n\r\n  if (copy._start !== null) {\r\n    copy._start = clone(copy._start, idx);\r\n  }\r\n  if (copy._finish !== null) {\r\n    copy._finish = clone(copy._finish, idx);\r\n  }\r\n\r\n  return resetIds(copy, idx);\r\n}\r\n\r\n// This is an assign function that copies full descriptors\r\nexport function completeAssign(target, ...sources) {\r\n  sources.forEach(source => {\r\n    let descriptors = Object.keys(source).reduce((descriptors, key) => {\r\n      descriptors[key] = Object.getOwnPropertyDescriptor(source, key);\r\n      return descriptors;\r\n    }, {});\r\n\r\n    // By default, Object.assign copies enumerable Symbols, too\r\n    Object.getOwnPropertySymbols(source).forEach(sym => {\r\n      let descriptor = Object.getOwnPropertyDescriptor(source, sym);\r\n      if (descriptor.enumerable) {\r\n        descriptors[sym] = descriptor;\r\n      }\r\n    });\r\n    Object.defineProperties(target, descriptors);\r\n  });\r\n  return target;\r\n}\r\n//*/\r\n\r\nexport function jsonToDslObject(o) {\r\n  let result = o;\r\n  if (o.start === undefined) {\r\n    if (o.compound) {\r\n      Object.setPrototypeOf(o, CompositeResourceElt.prototype);\r\n    } else {\r\n      Object.setPrototypeOf(o, ResourceElt.prototype);\r\n    }\r\n    if (Array.isArray(result.elts)) {\r\n      // Recursively enrich elts\r\n      result.elts = result.elts.map((v) => {\r\n        return jsonToDslObject(v);\r\n      });\r\n    }\r\n  }\r\n  return result;\r\n}\r\n","import {\r\n  ResourceElt\r\n} from '../core-dsl';\r\n\r\nexport const PIPELINE_RESOURCE_TYPE = 'pipeline';\r\n/**\r\n * Class StepPipelineElt.\r\n */\r\nexport class StepPipelineElt extends ResourceElt {\r\n\r\n  /**\r\n   * Create a StepPipelineElt.\r\n   * @param {object} elts - The elts value.\r\n   * @param {object} ctx - The ctx value.\r\n   * @param {string} tagName - The tagName value.\r\n   */\r\n  constructor(elts, ctx) {\r\n    super(elts, ctx, 'terminal', 'step', PIPELINE_RESOURCE_TYPE);\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Class DataPipelineElt.\r\n */\r\nexport class DataPipelineElt extends ResourceElt {\r\n\r\n  /**\r\n   * Create a DataPipelineElt.\r\n   * @param {object} elts - The elts value.\r\n   * @param {object} ctx - The ctx value.\r\n   * @param {string} tagName - The tagName value.\r\n   */\r\n  constructor(elts, ctx) {\r\n    super(elts, ctx, 'terminal', 'data', PIPELINE_RESOURCE_TYPE);\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Create a step dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} pipeline dsl.\r\n */\r\nexport function step(elt) {\r\n  return new StepPipelineElt(elt);\r\n}\r\n\r\n/**\r\n * Create a data dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} pipeline dsl.\r\n */\r\nexport function data(elt) {\r\n  return new DataPipelineElt(elt);\r\n}","import {\r\n  CompositeResourceElt\r\n} from '../core-dsl';\r\n\r\nimport { PIPELINE_RESOURCE_TYPE } from './pipeline-terminal.js';\r\n\r\n/**\r\n * Class PipelineElt.\r\n * @extends CompositeResourceElt\r\n */\r\nexport class PipelineElt extends CompositeResourceElt {\r\n  /**\r\n   * Create a PipelineElt.\r\n   * @param {object} elts - The elts value.\r\n   * @param {object} ctx - The ctx value.\r\n   */\r\n  constructor(elts, ctx) {\r\n    super(elts, ctx, 'container', 'pipeline', PIPELINE_RESOURCE_TYPE);\r\n  }\r\n\r\n}\r\n/**\r\n * Create a Pipeline dsl tree.\r\n * @param {array|object} elts - The elements.\r\n * @return {object} pipeline dsl.\r\n */\r\nexport function pipeline(...elts) {\r\n  return new PipelineElt([...elts]);\r\n}\r\n\r\n\r\n/**\r\n * Class JobElt.\r\n * @extends CompositeResourceElt\r\n */\r\nexport class JobElt extends CompositeResourceElt {\r\n  /**\r\n   * Create a JobElt.\r\n   * @param {object} elts - The elts value.\r\n   * @param {object} ctx - The ctx value.\r\n   */\r\n  constructor(elts, ctx) {\r\n    super(elts, ctx, 'container', 'job', PIPELINE_RESOURCE_TYPE);\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Create a Job dsl tree.\r\n * @param {array|object} elts - The elements.\r\n * @return {object} pipeline dsl.\r\n */\r\nexport function job(...elts) {\r\n  return new JobElt([...elts]);\r\n}\r\n\r\n/**\r\n * Class StageElt.\r\n * @extends CompositeResourceElt\r\n */\r\nexport class StageElt extends CompositeResourceElt {\r\n  /**\r\n   * Create a StageElt.\r\n   * @param {object} elts - The elts value.\r\n   * @param {object} ctx - The ctx value.\r\n   */\r\n  constructor(elts, ctx) {\r\n    super(elts, ctx, 'container', 'stage', PIPELINE_RESOURCE_TYPE);\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Create a Stage dsl tree.\r\n * @param {array|object} elts - The elements.\r\n * @return {object} pipeline dsl.\r\n */\r\nexport function stage(...elts) {\r\n  return new StageElt([...elts]);\r\n}","const ts = require('typescript/lib/typescriptServices.js');\r\nrequire('systemjs/dist/system.js');\r\nrequire('systemjs/dist/extras/global.js');\r\nrequire('systemjs/dist/extras/amd.js');\r\nrequire('systemjs/dist/extras/transform.js');\r\nrequire('systemjs/dist/extras/dynamic-import-maps.js');\r\nrequire('systemjs/dist/extras/named-exports.js');\r\nrequire('systemjs/dist/extras/named-register.js');\r\n//*/\r\n//var esprima = require('esprima');\r\n//var escodegen = require('escodegen');\r\n//import * as escodegen from 'escodegen';\r\nimport * as esprima from 'esprima';\r\nimport * as model from '../dsl';\r\n\r\nconst {\r\n  jsonToDslObject\r\n} = model;\r\n\r\nlet DEBUG = true;\r\n\r\nexport function debugOn(v = true) {\r\n  DEBUG = v;\r\n}\r\n\r\nfunction debug(msg) {\r\n  if (DEBUG) {\r\n    console.log(msg);\r\n  }\r\n}\r\n\r\nconst System = window.System;\r\nvar systemJSPrototype = System.constructor.prototype;\r\n// Hookable transform function!\r\nsystemJSPrototype.transform = function (_id, source) {\r\n  if (isScript(_id)) {\r\n    // If code is a System or AMD module\r\n    if (!source.startsWith('System.register') && !source.startsWith('define')) {\r\n      // If code is not a Sytem or AMD module transpile it\r\n      let result = ts.transpileModule(\r\n        source,\r\n        {\r\n          compilerOptions: {\r\n            module: ts.ModuleKind.AMD,\r\n            moduleResolution: ts.ModuleResolutionKind.Node,\r\n            esModuleInterop: true\r\n          }\r\n        }\r\n      );\r\n      debug('transpiled code:\\n' + result.outputText);\r\n      return result.outputText;\r\n    }\r\n  }\r\n\r\n  return source;\r\n};\r\n\r\n// Re-export a module with a new id\r\nexport function registerJSModule(id, _module_) {\r\n  const exportsFn = function (exports_1) {\r\n    'use strict';\r\n    exports_1(_module_);\r\n    return {\r\n      setters: [],\r\n      execute: function () {\r\n      }\r\n    };\r\n  };\r\n\r\n  System.register(id, [], exportsFn);\r\n}\r\n\r\n// Dynamically register compiled modules\r\nregisterJSModule('topology-dsl', model);\r\nregisterJSModule('@imaguiraga/topology-dsl-core', model);\r\nregisterJSModule('core-dsl', model);\r\n\r\nexport function parseDsl(input, dslModule) {\r\n\r\n  // Get module ids\r\n  let MODULE_IDS = Object.keys(dslModule);\r\n  // Parse text\r\n  // eslint-disable-next-line\r\n  let factoryFn = new Function('dslModule', 'return new Map();');\r\n  let variableIds = [];\r\n  let moduleIds = [];\r\n\r\n  let callbackFn = function (elt) {\r\n    // Extract Identifiers\r\n    if (elt.type === 'VariableDeclaration') {\r\n      let decl = elt.declarations[0];\r\n      let name = decl.id.name;\r\n      let value = name;\r\n\r\n      if (decl.init.type === 'ArrowFunctionExpression' || decl.init.type === 'FunctionExpression') {\r\n        value = name + '()';\r\n      }\r\n      variableIds.push(`result.set('${name}',${value});`);\r\n\r\n    } else if (elt.type === 'CallExpression') {\r\n      let name = elt.callee.name;\r\n      moduleIds.push(name);\r\n    }\r\n  };\r\n\r\n  try {\r\n    let tree = esprima.parseScript(input, {}, callbackFn);\r\n\r\n    // Extract call ids\r\n    // Keep only ids in the default  \r\n    // Remove duplicates\r\n    moduleIds = [...new Set(moduleIds)].filter((elt) => {\r\n      return (MODULE_IDS.indexOf(elt) >= 0);\r\n    });\r\n\r\n    let text =\r\n      `const {\r\n${moduleIds.join(',\\n')}\r\n} = dslModule;\r\n\r\n${input}\r\n\r\nlet result = new Map();\r\n${variableIds.join('\\n')}\r\nreturn result;\r\n`;\r\n    debug(text);\r\n    // eslint-disable-next-line\r\n    factoryFn = new Function('dslModule', text);\r\n\r\n  } catch (e) {\r\n    console.error(e.name + ': ' + e.message);\r\n    return Promise.reject(e);\r\n  }\r\n\r\n  return Promise.resolve(factoryFn(dslModule));\r\n\r\n}\r\n\r\nfunction isScript(source) {\r\n  return (source.endsWith('.js') ||\r\n    source.endsWith('.jsx') ||\r\n    source.endsWith('.ts') ||\r\n    source.endsWith('.tsx')\r\n  );\r\n}\r\n\r\nfunction importSource(id, source) {\r\n  // https://github.com/Microsoft/TypeScript/wiki/Using-the-Compiler-API\r\n  // https://jsfiddle.net/k78t436y/\r\n  // https://unpkg.com/typescript@latest/lib/typescriptServices.js\r\n  // https://github.com/systemjs/systemjs/blob/master/docs/system-register.md transpileModule\r\n  // Transpile code to Module\r\n  try {\r\n    let result = ts.transpileModule(\r\n      source,\r\n      {\r\n        compilerOptions: {\r\n          module: ts.ModuleKind.AMD,\r\n          moduleResolution: ts.ModuleResolutionKind.Node,\r\n          esModuleInterop: true\r\n        }\r\n      }\r\n    );\r\n\r\n    debug('importSource -> ' + result.outputText);\r\n    // Dynamically register module\r\n\r\n    (0, eval)(result.outputText);\r\n    // Invalidate import cache\r\n    if (System.has(id)) {\r\n      System.delete(id);\r\n    }\r\n    // Re-register the module\r\n    System.registerRegistry[id] = System.getRegister();\r\n    debug(System.getRegister());\r\n\r\n  } catch (err) {\r\n    console.log(err);\r\n    return Promise.reject(err);\r\n  }\r\n  return System.import(id);\r\n}\r\n\r\nfunction importURL(id, url) {\r\n  debug('importURL -> ' + url);\r\n  if (System.has(url)) {\r\n    System.delete(url);\r\n  }\r\n  return System.import(url);\r\n}\r\n\r\nexport function resolveImports(input) {\r\n  const result = new Promise((resolveFn, rejectFn) => {\r\n\r\n    const toload = new Map(); // Map of external imports to load with fetch\r\n    // AST callback function to extract imports\r\n    let callbackFn = function (elt) {\r\n      // Extract Identifiers\r\n      if (elt.type === 'CallExpression' && elt.callee.name === 'load') {\r\n        // Extract parameters from function name 'load' \r\n        // Add files to load async\r\n        let key = elt.arguments[0].value;\r\n        toload.set(key, null);\r\n      }\r\n    };\r\n\r\n    try {\r\n      let tree = esprima.parseScript(input, {}, callbackFn);\r\n    } catch (e) {\r\n      console.error(e.name + ': ' + e.message);\r\n      rejectFn(e);\r\n    }\r\n\r\n    // Load files async\r\n    let loadpromises = [];\r\n    toload.forEach((value, key, map) => {\r\n      loadpromises.push(\r\n        fetch(key)\r\n          .then(response => response.json())\r\n          .then(function (data) {\r\n            console.log('loaded -> ' + key);\r\n            map.set(key, jsonToDslObject(data));\r\n          })\r\n      );\r\n    });\r\n    // Wait on all promises to load\r\n    Promise.allSettled(loadpromises).then((iterable) => {\r\n      console.log('loaded imports -> ' + iterable);\r\n      // Delegate to main promise (map of resolved imports)\r\n      resolveFn(toload);\r\n    })\r\n      .catch((error) => {\r\n        console.error('Error:', error);\r\n        rejectFn(error);\r\n      });\r\n\r\n  });\r\n\r\n  return result;\r\n}\r\n\r\n// MODULE RESOLVER\r\nconst IMPORT_ID = location.href + 'IMPORT.js';\r\nexport function parseDslModule(source, dslModule, moduleId = IMPORT_ID, loadFromCache = false) {\r\n  let importPromise = null;\r\n  if (loadFromCache && System.has(moduleId)) {\r\n    importPromise = Promise.resolve(System.registerRegistry[moduleId]);\r\n  } else {\r\n    // Import URL\r\n    if (isScript(source)) {\r\n      importPromise = importURL(moduleId, source);\r\n\r\n    } else {\r\n      // Import text content\r\n      importPromise = importSource(moduleId, source);\r\n    }\r\n  }\r\n\r\n  // Convert exports to map\r\n  if (importPromise != null) {\r\n    return importPromise.then((modules) => {\r\n      let variables = new Map();\r\n      // Convert resolved export keys to a map\r\n      for (let key in modules) {\r\n        // Exclude module specific properties\r\n        if (key !== 'default' && !key.startsWith('_')) {\r\n          // Extract only subclasses of ResourceElt\r\n          if (modules[key] instanceof model.ResourceElt) {\r\n            variables.set(key, modules[key]);\r\n          }\r\n        }\r\n      }\r\n      return variables;\r\n    });\r\n\r\n  } else {\r\n    return Promise.resolve(new Map());\r\n  }\r\n\r\n}\r\n","import {\r\n  jsonToDslObject\r\n} from '@imaguiraga/topology-dsl-core';\r\n/**\r\n * Class FlowUIDVisitor.\r\n */\r\nexport class FlowUIDVisitor {\r\n  /**\r\n   * Create a FlowUIDVisitor.\r\n   * @param {string} prefix - The UID prefix.\r\n   */\r\n  constructor(prefix) {\r\n    this._prefix = prefix || 'UID';\r\n  }\r\n\r\n  visit(_tree, filterFn) {\r\n    if (typeof _tree === 'undefined' || _tree === null) {\r\n      return null;\r\n    }\r\n    let tree = _tree;\r\n\r\n    // Add start finish properties if missing\r\n    tree = jsonToDslObject(tree);\r\n    return tree; // Skip UID rename\r\n  }\r\n\r\n  _visit_(_tree, filterFn) {\r\n    if (typeof _tree === 'undefined' || _tree === null) {\r\n      return null;\r\n    }\r\n    let tree = _tree;\r\n\r\n    // Add start finish properties if missing\r\n    tree = jsonToDslObject(tree);\r\n\r\n    // Non terminal nodes have start and finish\r\n    if (!tree.isTerminal()) {\r\n      tree.start.id = this._prefix + '_' + tree.subType + '_start';\r\n      tree.finish.id = this._prefix + '_' + tree.subType + '_finish';\r\n    }\r\n\r\n    tree.elts.filter(elt => elt instanceof Object).forEach(\r\n      (elt, index) => {\r\n        // keep only terminal nodes\r\n        let p = this._prefix.concat('_' + index);\r\n        elt.id = p + '_' + elt.subType;\r\n        elt.accept(new FlowUIDVisitor(p), null);\r\n      });\r\n    return tree;\r\n  }\r\n\r\n}\r\n","\r\n/**\r\n * Class FlowToELKVisitor.\r\n */\r\nexport function* idGenFn(prefix, index) {\r\n  while (index >= 0) {\r\n    yield prefix + index;\r\n    index++;\r\n  }\r\n}\r\n\r\nexport function isIconFn(n) {\r\n  return (n && n.model && n.model.tagName === 'mark');\r\n}\r\n\r\nexport function isDefaultResourceFn(n) {\r\n  return (n && n.model && n.model.tagName === 'resource');\r\n}\r\n\r\n// Reset ids\r\nexport function resetIds(obj, idx) {\r\n  if (obj.id) {\r\n    // Append a suffix\r\n    obj.id = obj.id + '_' + idx;\r\n\r\n    if (obj._start !== null) {\r\n      obj._start.id = obj._start.id + '_' + idx;\r\n    }\r\n    if (obj._finish !== null) {\r\n      obj._finish.id = obj._finish.id + '_' + idx;\r\n    }\r\n  }\r\n  return obj;\r\n}\r\n\r\n// Clone and reset ids\r\nexport function clone(obj, idx) {\r\n  if (obj === undefined || obj === null) {\r\n    return obj;\r\n  }\r\n  let copy = Object.create(Object.getPrototypeOf(obj), Object.getOwnPropertyDescriptors(obj));\r\n  // Deep copy\r\n  if (copy.compound) {\r\n    if (Array.isArray(copy.elts)) {\r\n      copy.elts = copy.elts.map((elt) => {\r\n        return clone(elt, idx);\r\n      });\r\n    }\r\n  }\r\n\r\n  if (copy._start !== null) {\r\n    copy._start = clone(copy._start, idx);\r\n  }\r\n  if (copy._finish !== null) {\r\n    copy._finish = clone(copy._finish, idx);\r\n  }\r\n\r\n  return resetIds(copy, idx);\r\n}","import {\r\n  idGenFn\r\n} from './util.js';\r\n\r\nimport {\r\n  jsonToDslObject\r\n} from '@imaguiraga/topology-dsl-core';\r\n\r\n\r\nfunction updateInputOutputBindings(elt, graph, visitor) {\r\n  // Add Inbounds nodes and edges from children\r\n  elt.inputElts = elt.inputElts || [];\r\n  elt.inputElts.forEach(t => {\r\n    let ctree = t.accept(visitor);\r\n    if (ctree !== null) {\r\n      ctree.inbound = true;\r\n      graph.children.push(ctree);\r\n      graph.edges.push({\r\n        id: `${visitor.edgeCntIt.next().value}`,\r\n        sources: [t.finish.id],\r\n        targets: [elt.start.id],\r\n        ...visitor.getEdgeModel(elt),\r\n      });\r\n    }\r\n  });\r\n\r\n  // Add Outbounds nodes and edges from children \r\n  elt.outputElts = elt.outputElts || [];\r\n  elt.outputElts.forEach(t => {\r\n    let ctree = t.accept(visitor);\r\n    if (ctree !== null) {\r\n      ctree.outbound = true;\r\n      graph.children.push(ctree);\r\n      graph.edges.push({\r\n        id: `${visitor.edgeCntIt.next().value}`,\r\n        sources: [elt.finish.id],\r\n        targets: [t.start.id],\r\n        ...visitor.getEdgeModel(elt),\r\n      });\r\n    }\r\n  });\r\n}\r\nexport class DslToELKGenerator {\r\n  constructor() {\r\n    this.edgeCntIt = idGenFn('edge.', 0);\r\n  }\r\n\r\n  toElkGraph(tree, filterFn) {\r\n    return {\r\n      id: '$root',\r\n      children: [\r\n        this.visit(tree, filterFn)\r\n      ]\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Convert a dsl tree to ELK Graph.\r\n   * @param {object} tree - The dsl tree.\r\n   * @param {function} filterFn - The dsl filterFn function.\r\n   * @return {object} ELK graph.\r\n   */\r\n  visit(_tree, filterFn) {\r\n    if (typeof _tree === 'undefined' || _tree === null) {\r\n      return null;\r\n    }\r\n    let tree = _tree;\r\n    // Add start finish properties if missing\r\n    tree = jsonToDslObject(tree);\r\n\r\n    let result = null;\r\n    if (typeof tree === 'undefined') {\r\n      return result;\r\n    }\r\n    if (tree.compound) {\r\n      switch (tree.kind) {\r\n        case 'fanOut_fanIn':\r\n        case 'fanIn':\r\n        case 'fanOut':\r\n        case 'group':\r\n          result = MutltiPathEltDslToELKGenerator.visit(this, tree, filterFn, tree.kind);\r\n          break;\r\n        case 'optional':\r\n          result = this._visitOptional(tree, filterFn);\r\n          break;\r\n        case 'sequence':\r\n          result = this._visitSequence(tree, filterFn);\r\n          break;\r\n        case 'repeat':\r\n          result = this._visitRepeat(tree, filterFn);\r\n          break;\r\n        case 'resoource':\r\n          result = this._visitTerminal(tree, filterFn);\r\n          break;\r\n        default:\r\n          console.error('==>WARNING: ' + tree.kind + ' type was not found');\r\n          break;\r\n      }\r\n\r\n    } else {\r\n      result = this._visitTerminal(tree, filterFn);\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  _visitSequence(tree, filterFn) {\r\n    return SequenceEltDslToELKGenerator.visit(this, tree, filterFn);\r\n  }\r\n\r\n  _visitOptional(tree, filterFn) {\r\n    return OptionalEltDslToELKGenerator.visit(this, tree, filterFn);\r\n  }\r\n\r\n  _visitRepeat(tree, filterFn) {\r\n    return RepeatEltDslToELKGenerator.visit(this, tree, filterFn);\r\n  }\r\n\r\n  _visitTerminal(tree, filterFn) {\r\n    return TerminalFlowEltDslToELKGenerator.visit(this, tree, filterFn);\r\n  }\r\n\r\n  getNodeModel(n) {\r\n    let r = {\r\n      id: n.id,\r\n      label: n.title,\r\n      model: {\r\n        kind: n.kind,\r\n        title: n.title,\r\n        direction: n.direction,\r\n        tagName: n.tagName,\r\n        id: n.id,\r\n        provider: n.provider,\r\n        compound: n.compound,\r\n        data: n.data\r\n      },\r\n      // use label for container elt\r\n      labels: n.isTerminal() ? [] : [\r\n        {\r\n          text: n.title || n.id,\r\n          properties: {\r\n            'nodeLabels.placement': '[V_TOP, H_LEFT, OUTSIDE]',\r\n          }\r\n        }\r\n      ]\r\n    };\r\n    // Layout direction\r\n    if (n.direction !== null) {\r\n      r.layoutOptions = {\r\n        'org.eclipse.elk.direction': n.direction\r\n      };\r\n    }\r\n    return r;\r\n  }\r\n\r\n  getPortModel(n) {\r\n    let r = {\r\n      id: n.id,\r\n      label: n.id,\r\n      model: {\r\n        kind: 'port',\r\n        tagName: 'port',\r\n        compound: false,\r\n        provider: 'custom',\r\n        id: n.id,\r\n        data: n.data\r\n      },\r\n      // use label for container elt\r\n      labels: n.isTerminal() ? [] : [\r\n        {\r\n          text: n.title || n.id\r\n        }\r\n      ]\r\n    };\r\n    return r;\r\n  }\r\n\r\n  getSynthPortModel(n, tagName = 'port') {\r\n    let r = this.getPortModel(n);\r\n    r.model.tagName = tagName;\r\n    r.id = r.id + '.port';\r\n    r.model.id = r.id;\r\n    r.model.compound = false;\r\n    return r;\r\n  }\r\n\r\n  getEdgeModel(n) {\r\n    let r = {\r\n      model: {\r\n        provider: n.provider,\r\n        tagName: 'edge',\r\n        kind: 'edge'\r\n      },\r\n      style: {\r\n        startArrow: false,\r\n        endArrow: true,\r\n      }\r\n    };\r\n    return r;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Class TerminalFlowEltDslToELKGenerator.\r\n */\r\nclass TerminalFlowEltDslToELKGenerator {\r\n  /**\r\n   * Convert a dsl tree to ctree Graph graph.\r\n   * @param {object} visitor - The dsl tree visitor.\r\n   * @param {object} tree - The dsl tree.\r\n   * @param {function} filterFn - The dsl filterFn function.\r\n   * @return {object} ctree Graph graph.\r\n   */\r\n  static visit(visitor, tree, filterFn) {\r\n    const parent = visitor.getNodeModel(tree);\r\n    const graph = {\r\n      ...parent,\r\n      ports: [],\r\n      children: [],\r\n      edges: []\r\n    };\r\n    // start + finish nodes\r\n    graph.ports.push(visitor.getPortModel(tree.start));\r\n    graph.ports.push(visitor.getPortModel(tree.finish));\r\n\r\n    // Check if the only element is not a string \r\n    if (typeof tree.elts[0] === 'object') {\r\n      let n = visitor.getNodeModel(tree);\r\n      n.parent = parent;\r\n      if (filterFn) {\r\n        if (!filterFn(n)) {\r\n          graph.children.push(n);\r\n        }\r\n      } else {\r\n        graph.children.push(n);\r\n      }\r\n    }\r\n    return graph;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Class SequenceEltDslToELKGenerator.\r\n */\r\nclass SequenceEltDslToELKGenerator {\r\n  /**\r\n   * Convert a dsl tree to ctree Graph graph.\r\n   * @param {object} visitor - The dsl tree visitor.\r\n   * @param {object} tree - The dsl tree.\r\n   * @param {function} filterFn - The dsl filterFn function.\r\n   * @return {object} ctree Graph graph.\r\n   */\r\n  static visit(visitor, tree, filterFn) {\r\n    const SEQUENCE = 'sequence';\r\n    const parent = visitor.getNodeModel(tree);\r\n    const graph = {\r\n      ...parent,\r\n      /* layoutOptions: \r\n       { \r\n         'nodePlacement.strategy': 'NETWORK_SIMPLEX'\r\n       },//*/\r\n      ports: [],\r\n      children: [],\r\n      edges: []\r\n    };\r\n    if (tree.kind !== SEQUENCE) {\r\n      return graph;\r\n    }\r\n    // start + finish nodes\r\n    graph.ports.push(visitor.getPortModel(tree.start));\r\n    graph.ports.push(visitor.getPortModel(tree.finish));\r\n\r\n    const start = visitor.getSynthPortModel(tree.start, 'start');\r\n    graph.children.push(start);\r\n    const finish = visitor.getSynthPortModel(tree.finish, 'finish');\r\n    graph.children.push(finish);\r\n\r\n    // edges\r\n\r\n    graph.edges.push({\r\n      id: `${visitor.edgeCntIt.next().value}`,\r\n      sources: [start.id],\r\n      targets: [tree.elts[0].start.id],\r\n      ...visitor.getEdgeModel(tree),\r\n    });\r\n    //*/\r\n    for (let i = 0; i < tree.elts.length - 1; i++) {\r\n      graph.edges.push({\r\n        id: `${visitor.edgeCntIt.next().value}`,\r\n        sources: [tree.elts[i].finish.id],\r\n        targets: [tree.elts[i + 1].start.id],\r\n        ...visitor.getEdgeModel(tree),\r\n      });\r\n    }\r\n\r\n    graph.edges.push({\r\n      id: `${visitor.edgeCntIt.next().value}`,\r\n      sources: [tree.elts[tree.elts.length - 1].finish.id],\r\n      targets: [finish.id],\r\n      ...visitor.getEdgeModel(tree),\r\n    });\r\n    //*/\r\n    // concatenate graphs\r\n\r\n    // nodes\r\n    tree.elts.forEach(elt => {\r\n      let ctree = elt.accept(visitor, n => tree.foundElt(n));\r\n      if (ctree !== null) {\r\n        ctree.parent = parent;\r\n        if (filterFn) {\r\n          if (!filterFn(ctree)) {\r\n            graph.children.push(ctree);\r\n            updateInputOutputBindings(elt, graph, visitor);\r\n          }\r\n        } else {\r\n          graph.children.push(ctree);\r\n          updateInputOutputBindings(elt, graph, visitor);\r\n        }\r\n      }\r\n\r\n    });\r\n\r\n    return graph;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Class MutltiPathEltDslToELKGenerator.\r\n */\r\nclass MutltiPathEltDslToELKGenerator {\r\n  /**\r\n   * Convert a dsl tree to ctree Graph graph.\r\n   * @param {object} visitor - The dsl tree visitor.\r\n   * @param {object} tree - The dsl tree.\r\n   * @param {function} filterFn - The dsl filterFn function.\r\n   * @return {object} ctree Graph graph.\r\n   */\r\n  static visit(visitor, tree, filterFn, type) {\r\n    //const type = 'choice' | 'parallel';\r\n    const parent = visitor.getNodeModel(tree);\r\n    const graph = {\r\n      ...parent,\r\n      ports: [],\r\n      children: [],\r\n      edges: []\r\n    };\r\n    //\r\n    if (tree.kind !== type) {\r\n      return graph;\r\n    }\r\n    // start + finish nodes\r\n    graph.ports.push(visitor.getPortModel(tree.start));\r\n    graph.ports.push(visitor.getPortModel(tree.finish));\r\n    // edges\r\n    // groups are just containers\r\n    if (type === 'fanOut') {\r\n      const start = visitor.getSynthPortModel(tree.start, 'start');\r\n      graph.children.push(start);\r\n\r\n      (tree.elts || []).forEach((elt) => {\r\n        graph.edges.push({\r\n          id: `${visitor.edgeCntIt.next().value}`,\r\n          sources: [start.id],\r\n          targets: [elt.start.id],\r\n          ...visitor.getEdgeModel(tree),\r\n        });\r\n      });\r\n\r\n    } else if (type === 'fanIn') {\r\n      const finish = visitor.getSynthPortModel(tree.finish, 'finish');\r\n      graph.children.push(finish);\r\n      (tree.elts || []).forEach((elt) => {\r\n        graph.edges.push({\r\n          id: `${visitor.edgeCntIt.next().value}`,\r\n          sources: [elt.finish.id],\r\n          targets: [finish.id],\r\n          ...visitor.getEdgeModel(tree),\r\n        });\r\n      });\r\n\r\n    } else if (type === 'fanOut_fanIn') {\r\n      const start = visitor.getSynthPortModel(tree.start, 'start');\r\n      graph.children.push(start);\r\n      const finish = visitor.getSynthPortModel(tree.finish, 'finish');\r\n      graph.children.push(finish);\r\n      (tree.elts || []).forEach((elt) => {\r\n        graph.edges.push({\r\n          id: `${visitor.edgeCntIt.next().value}`,\r\n          sources: [start.id],\r\n          targets: [elt.start.id],\r\n          ...visitor.getEdgeModel(tree),\r\n        });\r\n\r\n        graph.edges.push({\r\n          id: `${visitor.edgeCntIt.next().value}`,\r\n          sources: [elt.finish.id],\r\n          targets: [finish.id],\r\n          ...visitor.getEdgeModel(tree),\r\n        });\r\n      });\r\n    }\r\n    // concatenate graphs\r\n    // nodes\r\n    tree.elts.forEach(elt => {\r\n      let ctree = elt.accept(visitor, n => tree.foundElt(n));\r\n      if (ctree !== null) {\r\n        ctree.parent = parent;\r\n        if (filterFn) {\r\n          if (!filterFn(ctree)) {\r\n            graph.children.push(ctree);\r\n            updateInputOutputBindings(elt, graph, visitor);\r\n          }\r\n        } else {\r\n          graph.children.push(ctree);\r\n          updateInputOutputBindings(elt, graph, visitor);\r\n        }\r\n      }\r\n    });\r\n\r\n    return graph;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * Class OptionalEltDslToELKGenerator.\r\n */\r\nclass OptionalEltDslToELKGenerator {\r\n  /**\r\n   * Convert a dsl tree to ctree Graph graph.\r\n   * @param {object} visitor - The dsl tree visitor.\r\n   * @param {object} tree - The dsl tree.\r\n   * @param {function} filterFn - The dsl filterFn function.\r\n   * @return {object} ctree Graph graph.\r\n   */\r\n  static visit(visitor, tree, filterFn) {\r\n    const OPTIONAL = 'optional';\r\n    const parent = visitor.getNodeModel(tree);\r\n    const graph = {\r\n      ...parent,\r\n      ports: [],\r\n      children: [],\r\n      edges: []\r\n    };\r\n    if (tree.kind !== OPTIONAL) {\r\n      return graph;\r\n    }\r\n    // start node\r\n    graph.ports.push(visitor.getPortModel(tree.start));\r\n\r\n    // skip node\r\n    if (tree.skip) {\r\n      graph.children.push(visitor.getNodeModel(tree.skip));\r\n    }\r\n\r\n    graph.ports.push(visitor.getPortModel(tree.finish));\r\n    // edges\r\n\r\n    const start = visitor.getSynthPortModel(tree.start, 'start');\r\n    graph.children.push(start);\r\n    const finish = visitor.getSynthPortModel(tree.finish, 'finish');\r\n    graph.children.push(finish);\r\n\r\n    if (tree.elts.length > 0) {\r\n\r\n      graph.edges.push({\r\n        id: `${visitor.edgeCntIt.next().value}`,\r\n        sources: [start.id],\r\n        targets: [tree.elts[0].start.id],\r\n        ...visitor.getEdgeModel(tree),\r\n\r\n      });\r\n\r\n    }\r\n\r\n    // start -> skip? -> finish\r\n    if (typeof (tree.skip) !== 'undefined') {\r\n\r\n      graph.edges.push({\r\n        id: `${visitor.edgeCntIt.next().value}`,\r\n        sources: [start.id],\r\n        targets: [tree.skip.id],\r\n        ...visitor.getEdgeModel(tree),\r\n      });\r\n\r\n      graph.edges.push({\r\n        id: `${visitor.edgeCntIt.next().value}`,\r\n        sources: [tree.skip.id],\r\n        targets: [finish.id],\r\n        ...visitor.getEdgeModel(tree),\r\n      });\r\n    } else {\r\n\r\n      graph.edges.push({\r\n        id: `${visitor.edgeCntIt.next().value}`,\r\n        sources: [start.id],\r\n        targets: [finish.id],\r\n        ...visitor.getEdgeModel(tree),\r\n      });\r\n    }\r\n\r\n    if (tree.elts.length > 0) {\r\n\r\n      graph.edges.push({\r\n        id: `${visitor.edgeCntIt.next().value}`,\r\n        sources: [tree.elts[tree.elts.length - 1].finish.id],\r\n        targets: [finish.id],\r\n        ...visitor.getEdgeModel(tree),\r\n      });\r\n    }\r\n    // concatenate graphs\r\n    // nodes\r\n    tree.elts.forEach(elt => {\r\n      let ctree = elt.accept(visitor, n => tree.foundElt(n));\r\n      if (ctree !== null) {\r\n        ctree.parent = parent;\r\n        if (filterFn) {\r\n          if (!filterFn(ctree)) {\r\n            graph.children.push(ctree);\r\n            updateInputOutputBindings(elt, graph, visitor);\r\n          }\r\n        } else {\r\n          graph.children.push(ctree);\r\n          updateInputOutputBindings(elt, graph, visitor);\r\n        }\r\n      }\r\n    });\r\n\r\n    return graph;\r\n  }\r\n}\r\n\r\n/**\r\n * Class RepeatEltDslToELKGenerator.\r\n */\r\nclass RepeatEltDslToELKGenerator {\r\n  /**\r\n   * Convert a dsl tree to ctree Graph graph.\r\n   * @param {object} visitor - The dsl tree visitor.\r\n   * @param {object} tree - The dsl tree.\r\n   * @param {function} filterFn - The dsl filterFn function.\r\n   * @return {object} ctree Graph graph.\r\n   */\r\n  static visit(visitor, tree, filterFn) {\r\n    const REPEAT = 'repeat';\r\n    const parent = visitor.getNodeModel(tree);\r\n    const graph = {\r\n      ...parent,\r\n      ports: [],\r\n      children: [],\r\n      edges: []\r\n    };\r\n    if (tree.kind !== REPEAT) {\r\n      return graph;\r\n    }\r\n    // start node\r\n    graph.ports.push(visitor.getPortModel(tree.start));\r\n\r\n    // loop node\r\n    if (tree.loop) {\r\n      graph.children.push(visitor.getNodeModel(tree.loop));\r\n    }\r\n\r\n    // finish node\r\n    graph.ports.push(visitor.getPortModel(tree.finish));\r\n\r\n    const start = visitor.getSynthPortModel(tree.start, 'start');\r\n    graph.children.push(start);\r\n    const finish = visitor.getSynthPortModel(tree.finish, 'finish');\r\n    graph.children.push(finish);\r\n    // edges\r\n    if (tree.elts.length > 0) {\r\n\r\n      graph.edges.push({\r\n        id: `${visitor.edgeCntIt.next().value}`,\r\n        sources: [start.id],\r\n        targets: [tree.elts[0].start.id],\r\n        ...visitor.getEdgeModel(tree),\r\n      });\r\n\r\n    }\r\n\r\n    // start <- loop <- finish\r\n    // reverse the arrow direction\r\n    if (typeof (tree.loop) !== 'undefined') {\r\n      let edgeModel = visitor.getEdgeModel(tree);\r\n      edgeModel.style.startArrow = false;\r\n      edgeModel.style.endArrow = false;\r\n\r\n      graph.edges.push({\r\n        id: `${visitor.edgeCntIt.next().value}`,\r\n        sources: [start.id],\r\n        targets: [tree.loop.id],\r\n        ...edgeModel,\r\n      });\r\n\r\n      edgeModel = visitor.getEdgeModel(tree);\r\n      edgeModel.style.startArrow = true;\r\n      edgeModel.style.endArrow = false;\r\n\r\n      graph.edges.push({\r\n        id: `${visitor.edgeCntIt.next().value}`,\r\n        sources: [tree.loop.id],\r\n        targets: [finish.id],\r\n        ...edgeModel,\r\n      });\r\n\r\n    } else {\r\n\r\n      graph.edges.push({\r\n        id: `${visitor.edgeCntIt.next().value}`,\r\n        sources: [finish.id],\r\n        targets: [start.id],\r\n        ...visitor.getEdgeModel(tree),\r\n      });\r\n    }\r\n    //*/\r\n    // edges\r\n    if (tree.elts.length > 0) {\r\n\r\n      graph.edges.push({\r\n        id: `${visitor.edgeCntIt.next().value}`,\r\n        sources: [tree.elts[tree.elts.length - 1].finish.id],\r\n        targets: [finish.id],\r\n        ...visitor.getEdgeModel(tree),\r\n      });\r\n    }\r\n\r\n    // concatenate graphs\r\n    // nodes\r\n    tree.elts.forEach(elt => {\r\n      let ctree = elt.accept(visitor, n => tree.foundElt(n));\r\n      if (ctree !== null) {\r\n        ctree.parent = parent;\r\n        if (filterFn) {\r\n          if (!filterFn(ctree)) {\r\n            graph.children.push(ctree);\r\n            updateInputOutputBindings(elt, graph, visitor);\r\n          }\r\n        } else {\r\n          graph.children.push(ctree);\r\n          updateInputOutputBindings(elt, graph, visitor);\r\n        }\r\n      }\r\n    });\r\n    return graph;\r\n  }\r\n}\r\n","import {\r\n  isContainer\r\n} from '@imaguiraga/topology-dsl-core';\r\n\r\nconst UNIT = 8;\r\nexport class ELKDimensionVisitor {\r\n  constructor(\r\n    nodeWidth = (6 * UNIT),\r\n    nodeHeight = (4 * UNIT),\r\n    iconWidth = (2 * UNIT),\r\n    portSize = UNIT,\r\n    labelHeight = (2 * UNIT)\r\n  ) {\r\n    this._nodeWidth = nodeWidth;\r\n    this._nodeHeight = nodeHeight;\r\n    this._iconWidth = iconWidth;\r\n    this._portSize = portSize;\r\n    this._labelHeight = labelHeight;\r\n  }\r\n\r\n  nodeWidth(value) {\r\n    if (value !== undefined & value !== null) {\r\n      this._nodeWidth = value;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  nodeHeight(value) {\r\n    if (value !== undefined & value !== null) {\r\n      this._nodeHeight = value;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  labelHeight(value) {\r\n    if (value !== undefined & value !== null) {\r\n      this._labelHeight = value;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  iconWidth(value) {\r\n    if (value !== undefined & value !== null) {\r\n      this._iconWidth = value;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  portSize(value) {\r\n    if (value !== undefined & value !== null) {\r\n      this._portSize = value;\r\n    }\r\n    return this;\r\n  }\r\n\r\n  visit(root) {\r\n    const stack = [root];\r\n    // FIFO\r\n    let i = 0;\r\n    while (i < stack.length) {\r\n      let tree = stack[i]; i++;\r\n      // Reset dimensions\r\n      if (tree === undefined || tree === null) {\r\n        return null;\r\n      }\r\n      if (tree.width !== undefined) {\r\n        delete tree.width;\r\n      }\r\n      if (tree.height !== undefined) {\r\n        delete tree.height;\r\n      }\r\n      if (tree.x !== undefined) {\r\n        delete tree.x;\r\n      }\r\n      if (tree.y !== undefined) {\r\n        delete tree.y;\r\n      }\r\n\r\n      // Set Node dimensions\r\n      if (isContainer(tree)) {\r\n        // Set node properties\r\n        tree.properties = {\r\n          'nodeLabels.placement': '[H_LEFT, V_TOP, OUTSIDE]'\r\n        };\r\n\r\n      } else {\r\n        // Terminal Nodes dimensions\r\n        const tagName = tree.model.tagName;\r\n        const style = (tree.model.data !== undefined) ? tree.model.data.style : null;\r\n        if (tagName === 'port' || tagName === 'start' || tagName === 'finish') {\r\n          tree.width = 2 * this._portSize;\r\n          tree.height = tree.width;\r\n\r\n        } else if (tagName === 'mark') {\r\n          tree.width = 0;// 4 * this._portSize;\r\n          tree.height = 0;// 2 * this._portSize;\r\n\r\n        } else {\r\n          tree.width = 2 * this._nodeWidth;\r\n          tree.height = this._nodeHeight;\r\n          // Nodes with no style \r\n          if (style === undefined || style === null) {\r\n            let len = tree.model.title.length;\r\n            // Pt to Px 4/3\r\n            let w = Math.floor((len * UNIT * 2) / 3 + 6 * UNIT);\r\n            tree.width = w;\r\n            // How many lines\r\n            let nl = tree.model.title.split('\\n').length;\r\n            let h = Math.floor(nl * UNIT * 4 / 3) + 4 * UNIT;\r\n            tree.height = h;\r\n\r\n          }\r\n        }\r\n      }\r\n\r\n      // Set port dimensions\r\n      if (Array.isArray(tree.ports)) {\r\n        tree.ports.forEach((p) => {\r\n          p.width = 0;// this._portSize;\r\n          p.height = p.width;\r\n        }, this);\r\n\r\n      }\r\n\r\n      // Set label dimensions\r\n      if (Array.isArray(tree.labels)) {\r\n        tree.labels.forEach((l) => {\r\n          l.height = 2 * this._labelHeight;\r\n          //l.width = 3 * this._nodeWidth;\r\n        }, this);\r\n      }\r\n\r\n      if (Array.isArray(tree.children)) {\r\n        tree.children.forEach((n) => {\r\n          //this.visit(n);\r\n          stack.push(n);\r\n        }, this);\r\n      }\r\n    }\r\n    return root;\r\n  }\r\n\r\n}","//const ELK = require('elkjs');\r\nimport ELK from 'elkjs/lib/elk.bundled.js';\r\n\r\nimport {\r\n  DslToELKGenerator,\r\n  ELKDimensionVisitor\r\n} from '../visitor/index.js';\r\n\r\nconst elkGenerator = new DslToELKGenerator();\r\nconst UNIT = 8;\r\n\r\nexport function toElkGraph(dslObject) {\r\n  let elkgraph = null;\r\n  try {\r\n    // dslObject to elkgraph\r\n    elkgraph = elkGenerator.toElkGraph(dslObject);\r\n  } catch (e) {\r\n    console.error(e);\r\n  }\r\n  return elkgraph;\r\n}\r\n\r\nexport function elkLayout() {\r\n  const elkDimensionVisitor = new ELKDimensionVisitor();\r\n  const elk = new ELK();\r\n  let options = {\r\n    'algorithm': 'layered',\r\n    'nodePlacement.strategy': 'SIMPLE',//'NETWORK_SIMPLEX', //'BRANDES_KOEPF'\r\n    'org.eclipse.elk.direction': 'RIGHT',\r\n    'port.borderOffset': UNIT / 4,\r\n    'padding': 2 * UNIT,\r\n    'edgeRouting': 'ORTHOGONAL',\r\n    'layered.mergeEdges': true,\r\n    'zoomToFit': true,\r\n    'spacing': 4 * UNIT,\r\n    'spacing.nodeNodeBetweenLayers': 4 * UNIT,\r\n    'spacing.edgeNodeBetweenLayers': 4 * UNIT,\r\n    'spacing.edgeEdgeBetweenLayers': 4 * UNIT,\r\n    //'layering.strategy': 'LONGEST_PATH', 'NETWORK_SIMPLEX'\r\n    'layering.strategy': 'COFFMAN_GRAHAM ',\r\n    'spacing.labelNode': UNIT\r\n  };\r\n  //https://www.eclipse.org/elk/reference/options/org-eclipse-elk-layered-layering-strategy.html\r\n  //https://www.eclipse.org/elk/reference/options/org-eclipse-elk-layered-nodeplacement-strategy.html\r\n  function layoutFn(inelkgraph) {\r\n    if (inelkgraph === null) {\r\n      return Promise.resolve(null);\r\n    }\r\n    // Add node width.height\r\n    let elkgraph = elkDimensionVisitor.visit(inelkgraph);\r\n    if (elkgraph === null) {\r\n      return Promise.resolve(null);\r\n    }\r\n    // console.log(JSON.stringify(elkgraph, null, '  '));\r\n\r\n    elk.knownLayoutOptions().then((d) => {\r\n      //console.log(d);\r\n    });\r\n    // start the layout\r\n    let elkpromise = elk.layout(elkgraph, {\r\n      layoutOptions: options,\r\n      logging: false,\r\n      measureExecutionTime: false\r\n    }).then((elkLayoutRelative) => {\r\n      const elkLayoutAbsolute = toAbsoluteElkLayout(elkLayoutRelative);\r\n      //console.log(elkLayoutAbsolute);\r\n      return elkLayoutAbsolute;\r\n    });\r\n\r\n    return elkpromise;\r\n  }\r\n\r\n  layoutFn.nodeHeight = function (newSize) {\r\n    if (!arguments.length) return elkDimensionVisitor._nodeHeight;\r\n    elkDimensionVisitor.nodeHeight(newSize);\r\n    return this;\r\n  };\r\n\r\n  layoutFn.nodeWidth = function (newSize) {\r\n    if (!arguments.length) return elkDimensionVisitor._nodeWidth;\r\n    elkDimensionVisitor.nodeWidth(newSize);\r\n    return this;\r\n  };\r\n\r\n  layoutFn.nodeSize = function (width, height) {\r\n    if (!arguments.length) return [elkDimensionVisitor._nodeWidth, elkDimensionVisitor._nodeHeight];\r\n\r\n    elkDimensionVisitor.nodeWidth(width);\r\n    elkDimensionVisitor.nodeHeight(height || width);\r\n\r\n    return this;\r\n  };\r\n\r\n  layoutFn.portSize = function (newSize) {\r\n    if (!arguments.length) return elkDimensionVisitor._portSize;\r\n    elkDimensionVisitor.portSize(newSize);\r\n    return this;\r\n  };\r\n\r\n  layoutFn.options = function (newOptions) {\r\n    if (!arguments.length) {\r\n      return options;\r\n    }\r\n    options = newOptions;\r\n    return this;\r\n  };\r\n\r\n  return layoutFn;\r\n}\r\n\r\nexport function toAbsoluteElkLayout(elkLayout) {\r\n  return toAbsoluteElkLayoutIt(elkLayout);\r\n}\r\n\r\nfunction toAbsoluteElkLayoutRec(elkNode, x0 = 0, y0 = 0) {\r\n  // Clone node \r\n  const n = elkNode;\r\n  // absolute coordinate\r\n  n.ax = n.x + x0;\r\n  n.ay = n.y + y0;\r\n\r\n  (n.labels || []).forEach((l) => {\r\n    // absolute coordinate\r\n    l.ax = l.x + x0;\r\n    l.ay = l.y + y0;\r\n  });\r\n\r\n  (elkNode.edges || []).forEach((e) => {\r\n    const t = e;\r\n    // absolute coordinate\r\n    t.source = e.sources[0];\r\n    t.target = e.targets[0];\r\n\r\n    // Update sections\r\n    (t.sections || []).forEach((s) => {\r\n      // junctionPoints\r\n      (s.junctionPoints || []).forEach((j) => {\r\n        j.ax = j.x + n.ax;\r\n        j.ay = j.y + n.ay;\r\n      });\r\n\r\n      // startPoint\r\n      s.startPoint.ax = s.startPoint.x + n.ax;\r\n      s.startPoint.ay = s.startPoint.y + n.ay;\r\n      // endPoint\r\n      s.endPoint.ax = s.endPoint.x + n.ax;\r\n      s.endPoint.ay = s.endPoint.y + n.ay;\r\n      // bendPoints\r\n      (s.bendPoints || []).forEach((b) => {\r\n        b.ax = b.x + n.ax;\r\n        b.ay = b.y + n.ay;\r\n      });\r\n    });\r\n\r\n  });\r\n\r\n  (elkNode.ports || []).forEach((p) => {\r\n    // absolute coordinate\r\n    p.ax = p.x + n.ax;\r\n    p.ay = p.y + n.ay;\r\n  });\r\n\r\n  (elkNode.children || []).forEach((c) => {\r\n    toAbsoluteElkLayoutRec(c, n.ax, n.ay);\r\n  });\r\n\r\n  return n;\r\n  //*/\r\n}\r\n\r\nexport function buildNodeLookup(elkNode) {\r\n  const index = new Map();\r\n\r\n  const stack = [elkNode];\r\n  // FIFO\r\n  let i = 0;\r\n  while (i < stack.length) {\r\n    //let n = stack.pop();\r\n    let n = stack[i];\r\n    i++;\r\n    index.set(n.id, n);\r\n\r\n    (n.ports || []).forEach((p) => {\r\n      stack.push(p);\r\n    });\r\n\r\n    (n.children || []).forEach((c) => {\r\n      stack.push(c);\r\n    });\r\n  }\r\n  return index;\r\n}\r\n\r\nfunction toAbsoluteElkLayoutIt(elkNode) {\r\n  // absolute coordinate\r\n  elkNode.ax = elkNode.x;\r\n  elkNode.ay = elkNode.y;\r\n  const stack = [elkNode];\r\n\r\n  let i = 0;\r\n  // FIFO\r\n  while (i < stack.length) {\r\n    let n = stack[i];\r\n    i++;\r\n    (n.labels || []).forEach((l) => {\r\n      // absolute coordinate\r\n      l.ax = l.x + n.ax;\r\n      l.ay = l.y + n.ay;\r\n    });\r\n\r\n    (n.edges || []).forEach((e) => {\r\n      const t = e;\r\n      // absolute coordinate\r\n      t.source = e.sources[0];\r\n      t.target = e.targets[0];\r\n\r\n      // Update sections\r\n      (t.sections || []).forEach((s) => {\r\n        // junctionPoints\r\n        (s.junctionPoints || []).forEach((j) => {\r\n          j.ax = j.x + n.ax;\r\n          j.ay = j.y + n.ay;\r\n        });\r\n\r\n        // startPoint\r\n        s.startPoint.ax = s.startPoint.x + n.ax;\r\n        s.startPoint.ay = s.startPoint.y + n.ay;\r\n        // endPoint\r\n        s.endPoint.ax = s.endPoint.x + n.ax;\r\n        s.endPoint.ay = s.endPoint.y + n.ay;\r\n        // bendPoints\r\n        (s.bendPoints || []).forEach((b) => {\r\n          b.ax = b.x + n.ax;\r\n          b.ay = b.y + n.ay;\r\n        });\r\n      });\r\n\r\n    });\r\n\r\n    (n.ports || []).forEach((p) => {\r\n      // absolute coordinate\r\n      p.ax = p.x + n.ax;\r\n      p.ay = p.y + n.ay;\r\n    });\r\n\r\n    (n.children || []).forEach((c) => {\r\n      c.ax = c.x + n.ax;\r\n      c.ay = c.y + n.ay;\r\n      stack.push(c);\r\n    });\r\n  }\r\n  return elkNode;\r\n}","\r\nimport { Graph, Shape, Point, Node, Edge } from '@antv/x6';\r\nimport { data } from './x6-data.js';\r\nimport { elkLayout, buildNodeLookup } from './elk-layout-factory';\r\n\r\nfunction lineRouter(vertices/*: Point.PointLike[]*/, args/*: RandomRouterArgs*/, view/*: EdgeView*/) {\r\n  const points = vertices.map((p) => Point.create(p));\r\n  return points;\r\n}\r\nconst LINE = 'line';\r\nGraph.registerRouter(LINE, lineRouter);\r\n\r\nconst UNIT = 8;\r\nconst EMPTY_ARRAY = [];\r\nexport function createElkX6Renderer(_container_, _minimap_, _width_, _height_, _iconWidth_) {\r\n\r\n  let containerElt = (typeof _container_ === 'string') ? document.getElementById(_container_) : _container_;\r\n\r\n  const iconWidth = _iconWidth_ || 3 * UNIT;\r\n  const width = (_width_ || containerElt.scrollWidth || 800) + 240;\r\n  const height = (_height_ || containerElt.scrollHeight || 800) + 240;\r\n\r\n  const x6Graph = createX6Graph(containerElt, _minimap_, width, height);\r\n  const toElkLayout = elkLayout();\r\n  toElkLayout.nodeSize(10 * UNIT).portSize(UNIT);\r\n\r\n  function render(elkgraph) {\r\n    if (elkgraph === null) {\r\n      return Promise.resolve(null);\r\n    }\r\n\r\n    const lookup = buildNodeLookup(elkgraph);\r\n\r\n    function refreshLayoutFn(_elkgraph_) {\r\n      return toElkLayout(_elkgraph_).then((elkLayout) => {\r\n        // Clear and redraw\r\n        // reset diagram\r\n        //console.log(JSON.stringify(elkLayout,null, ' '));\r\n        const x6Layout = toX6Layout(elkLayout);\r\n        //console.log(x6Layout);\r\n        //console.log(JSON.stringify(x6Layout,null, ' '));\r\n        x6Graph.fromJSON(x6Layout);\r\n        //graph.resetCells([...x6Layout.nodes, ...x6Layout.edges]);\r\n        return x6Graph;\r\n      }).catch((e) => {\r\n        console.log(e);\r\n      });\r\n    }\r\n\r\n    const toggleCollapseNode = function (d) {\r\n      if (d === undefined || d === null) {\r\n        return;\r\n      }\r\n      // is expanded\r\n      if (d.model.compound || d.collapsed === true) {\r\n        if (d.collapsed !== true) {\r\n          // Remove children and edges \r\n          d._children = d.children;\r\n          d.children = EMPTY_ARRAY;\r\n\r\n          d._edges = d.edges;\r\n          d.edges = null;\r\n          d.model.compound = false;\r\n          d.collapsed = true;\r\n\r\n        } else {\r\n          // Restore children and edges\r\n          d.children = d._children;\r\n          d._children = null;\r\n\r\n          d.edges = d._edges;\r\n          d._edges = null;\r\n          d.model.compound = true;\r\n          d.collapsed = false;\r\n        }\r\n\r\n        refreshLayoutFn(elkgraph);\r\n      }\r\n    };\r\n\r\n    x6Graph.on('node:dblclick', ({ e, x, y, node, view }) => {\r\n      console.log(node);\r\n      const elkLayoutNode = lookup.get(node.id);\r\n      toggleCollapseNode(elkLayoutNode);\r\n    });\r\n\r\n    //*/\r\n    return refreshLayoutFn(elkgraph);\r\n  }\r\n\r\n  return {\r\n    render,\r\n    zoomGraph(factor/*: number | 'fit' | 'real'*/) {\r\n      if (typeof factor === 'number') {\r\n        x6Graph.zoom(factor);\r\n      } else if (factor === 'fit') {\r\n        x6Graph.zoomToFit({ padding: 0 });\r\n      } else if (factor) {\r\n        x6Graph.scale(1);\r\n        x6Graph.centerContent();\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nexport function toX6Layout(elkLayoutNode) {\r\n  return toX6LayoutRec(elkLayoutNode);\r\n}\r\n\r\nconst RESOURCE_HTML = {\r\n  render(node) { //: Cell\r\n    const model = node.getData(); //as any\r\n    const style = model.data.style;// IconPath\r\n\r\n    const wrap = document.createElement('div');\r\n    wrap.style.display = 'flex';\r\n\r\n    let iconPath = (style !== undefined && style !== null) ? encodeURI(style.iconURL) : null;\r\n    // If icon exist\r\n    if (iconPath !== undefined && iconPath !== null) {\r\n      const img = document.createElement('img');\r\n\r\n      img.src = iconPath;\r\n      img.width = (model.compound === undefined || model.compound === true ? model.height : model.height / 2) - UNIT;\r\n      img.height = img.width;\r\n      wrap.appendChild(img);\r\n    }\r\n\r\n    const textdiv = document.createElement('div');\r\n    textdiv.style.padding = UNIT / 2;\r\n    textdiv.style.display = 'inline-block';\r\n    textdiv.style.margin = 'auto';\r\n\r\n    textdiv.innerHTML =\r\n      (style && style.product ? `<div><code>${style.product}</code></div>` : '') +\r\n      `<div><code class='resource-title'>${model !== undefined ? model.title : ''}</code></div>`\r\n      ;\r\n    wrap.appendChild(textdiv);\r\n\r\n    return wrap;\r\n  },\r\n  shouldComponentUpdate(node) { //: Cell\r\n    return node.hasChanged('data');\r\n  },\r\n};\r\n\r\nfunction toX6LayoutRec(elkLayoutNode, x6Layout = { nodes: [], edges: [] }) {\r\n  // Clone node \r\n  const n = createX6Node(elkLayoutNode, x6Layout);\r\n\r\n  const children = [];\r\n  (elkLayoutNode.children || []).forEach((c) => {\r\n    children.push(c.id);\r\n    toX6LayoutRec(c, x6Layout);\r\n  });\r\n\r\n  if (children.length > 0) {\r\n    n.children = children;\r\n  }\r\n\r\n  // Edges\r\n  (elkLayoutNode.edges || []).forEach((e) => {\r\n    const t = createX6Edge(e, x6Layout);\r\n  });\r\n  return x6Layout;\r\n}\r\n\r\nfunction createX6Node(elkLayoutNode, x6Layout) {\r\n  let model = elkLayoutNode.model || {};\r\n  const n = {\r\n    id: elkLayoutNode.id,\r\n    //label: elkLayoutNode.label,\r\n    data: {\r\n      ...model,\r\n      width: elkLayoutNode.width,\r\n      height: elkLayoutNode.height\r\n    },\r\n    x: elkLayoutNode.ax,\r\n    y: elkLayoutNode.ay,\r\n    width: elkLayoutNode.width,\r\n    height: elkLayoutNode.height,\r\n    attrs: {\r\n      body: {\r\n        class: 'node',\r\n      },\r\n      fo: {\r\n        class: 'node',\r\n      }\r\n    },\r\n  };\r\n  n.data.width = elkLayoutNode.width;\r\n  n.data.height = elkLayoutNode.height;\r\n\r\n  const clazz = ['node'];\r\n  if (elkLayoutNode.model !== undefined) {\r\n    clazz.push(elkLayoutNode.model.provider);\r\n    clazz.push(elkLayoutNode.model.kind);\r\n    clazz.push(elkLayoutNode.model.tagName);\r\n  }\r\n  n.attrs.body.class = clazz.join(' ');\r\n\r\n  // Ports\r\n  let PORT_RADIUS = 0;\r\n  const ports = (elkLayoutNode.ports || []);\r\n  const items = ports.map((p) => {\r\n    PORT_RADIUS = p.width / 2;\r\n    const r = {\r\n      group: 'abs',\r\n      id: p.id,\r\n      args: {\r\n        x: p.x + PORT_RADIUS,\r\n        y: p.y + PORT_RADIUS\r\n      },\r\n      data: p.model\r\n    };\r\n    return r;\r\n  });\r\n\r\n  if (ports.length > 0) {\r\n    n.ports = {\r\n      items: items,\r\n      groups: {\r\n        abs: {\r\n          position: {\r\n            name: 'absolute'\r\n          },\r\n          zIndex: 10,\r\n          attrs: {\r\n            circle: {\r\n              class: 'port',\r\n              r: PORT_RADIUS,\r\n              magnet: false,\r\n            },\r\n            text: {\r\n              fontSize: 0.8 * UNIT,\r\n              fill: '#444'\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n  }\r\n\r\n  //node_modules\\@antv\\x6\\lib\\shape\\standard\\html.d.ts\r\n  // Port rendering\r\n  const children = (elkLayoutNode.children || []);\r\n  const tagName = n.data.tagName;\r\n  if (tagName === 'port' || tagName === 'start' || tagName === 'finish' || tagName === 'mark') {\r\n    n.label = null;\r\n    n.data.compound = undefined;\r\n    n.shape = 'rect';\r\n    n.attrs = {\r\n      body: {\r\n        class: n.data.tagName,\r\n      },\r\n      text: {\r\n        fontSize: 0.8 * UNIT,\r\n        fill: '#444'\r\n      }\r\n    };\r\n    // Round corners\r\n    if (tagName === 'mark') {\r\n      n.label =  null;// n.data.title;\r\n      n.attrs.body.rx = 0;// UNIT / 2;\r\n      n.attrs.body.ry = 0;// UNIT / 2;\r\n    }\r\n\r\n  } else {\r\n    if (children.length === 0) {\r\n      n.label = null;\r\n      n.shape = 'html';\r\n      n.html = RESOURCE_HTML;\r\n\r\n    } else if (elkLayoutNode.labels !== undefined) {\r\n      const l = createX6Label(elkLayoutNode, x6Layout);\r\n    }\r\n  }\r\n\r\n  n.attrs.body.strokeWidth = (children.length > 0) ? '0px' : '1px';\r\n  n.attrs.body.opacity = (children.length > 0) ? 0.15 : 0.9;\r\n  x6Layout.nodes.push(n);\r\n  return n;\r\n}\r\n\r\nfunction createX6Label(elkLayoutNode, x6Layout) {\r\n  const label = elkLayoutNode.labels[0];\r\n  // Label Node\r\n  const model = elkLayoutNode.model || {};\r\n  const l = {\r\n    id: elkLayoutNode.id + '.label',\r\n    //label: elkLayoutNode.label,\r\n    data: {\r\n      ...model,\r\n      width: 30 * UNIT,//label.width,\r\n      height: label.height,\r\n    },\r\n    x: label.ax,\r\n    y: label.ay,\r\n    width: elkLayoutNode.width,\r\n    height: label.height,\r\n    attrs: {\r\n      body: {\r\n        class: 'label',\r\n      },\r\n      fo: {\r\n        class: 'label',\r\n      }\r\n    },\r\n\r\n  };\r\n  l.data.compound = undefined;\r\n  l.label = null;\r\n  l.shape = 'html';\r\n  l.html = RESOURCE_HTML;\r\n  x6Layout.nodes.push(l);\r\n  return l;\r\n}\r\n\r\nfunction createX6Edge(e, x6Layout) {\r\n  const t = {\r\n    attrs: {\r\n      line: {\r\n        class: 'edge',\r\n        sourceMarker: {\r\n          name: e.style.startArrow ? 'classic' : null,\r\n          size: UNIT\r\n        },\r\n        targetMarker: {\r\n          name: e.style.endArrow ? 'classic' : null,\r\n          size: UNIT\r\n        },\r\n      }\r\n    }\r\n  };\r\n\r\n  t.id = e.id;\r\n  t.data = e.model;\r\n  const source = e.sources[0];\r\n  const target = e.targets[0];\r\n  const regex1 = /\\.(start|finish)/ig;\r\n  const regex2 = /\\.(start|finish)\\.port/ig;\r\n\r\n  if (source.match(regex2)) {\r\n    t.source = { cell: source };\r\n  } else {\r\n    t.source = { cell: source.replace(regex1, ''), port: source };\r\n  }\r\n\r\n  if (target.match(regex2)) {\r\n    t.target = { cell: target };\r\n  } else {\r\n    t.target = { cell: target.replace(regex1, ''), port: target };\r\n  }\r\n\r\n  if (e.sections !== undefined) {\r\n    let d = e.sections[0];\r\n\r\n    if (d.startPoint && d.endPoint) {\r\n      /*     \r\n      t.source = {\r\n        x: d.startPoint.ax,\r\n        y: d.startPoint.ay\r\n      };\r\n\r\n      t.target = {\r\n        x: d.endPoint.ax,\r\n        y: d.endPoint.ay\r\n      };\r\n      //*/\r\n    }\r\n\r\n    const vertices = [];\r\n    (d.bendPoints || []).forEach(function (bp, i) {\r\n      vertices.push({ x: bp.ax, y: bp.ay });\r\n    });\r\n\r\n    (d.junctionPoints || []).forEach(function (bp, i) {\r\n      vertices.push({ x: bp.ax, y: bp.ay });\r\n    });\r\n\r\n    if (vertices.length > 0) {\r\n      t.vertices = vertices;\r\n    }\r\n  }\r\n  x6Layout.edges.push(t);\r\n  //g.edges.push(Edge.create(t));\r\n  return t;\r\n}\r\n\r\nfunction createX6Graph(containerElt, minimapContainer, width, height) {\r\n  const x6Graph = new Graph({\r\n    container: containerElt,\r\n    width: width,\r\n    height: height,\r\n    resizing: false,\r\n    background: {\r\n      color: '#fff',\r\n    },\r\n    interacting: false,\r\n\r\n    async: false,\r\n    //frozen: true,\r\n    scroller: {\r\n      enabled: true,\r\n      pannable: true,\r\n      pageVisible: true,\r\n      pageBreak: true,\r\n      className: 'app-content-pane'\r\n    },\r\n    panning: {\r\n      enabled: true,\r\n      modifiers: 'shift',\r\n    },\r\n    mousewheel: {\r\n      enabled: true,\r\n      modifiers: ['ctrl', 'meta'],\r\n    },\r\n    connecting: {\r\n      //snap: true,\r\n      allowBlank: false,\r\n      allowLoop: false,\r\n      highlight: true,\r\n      anchor: 'orth',\r\n      connector: 'rounded',\r\n      connectionPoint: 'boundary',\r\n      router: {\r\n        // https://x6.antv.vision/en/docs/tutorial/basic/edge/#router\r\n        // node_modules\\@antv\\x6\\lib\\registry\\router\r\n        // https://x6.antv.vision/en/docs/api/registry/router#oneside\r\n        // er orth metro manhattan https://x6.antv.vision/en/examples/edge/edge#edge\r\n        name: LINE,\r\n      }\r\n    },\r\n    minimap: {\r\n      enabled: true,\r\n      container: minimapContainer,\r\n      minScale: 0.5,\r\n      maxScale: 2,\r\n      padding: UNIT / 2,\r\n      width: 200,\r\n      height: 160\r\n    },\r\n  });\r\n\r\n  x6Graph.on('cell:mouseenter', ({ e, cell, view }) => {\r\n    if (cell.isNode() && cell.getData().compound !== undefined) {\r\n      cell.addTools([\r\n        {\r\n          name: 'boundary',\r\n          args: {\r\n            padding: 0,\r\n            useCellGeometry: true,\r\n            attrs: {\r\n              fill: 'lightgrey',\r\n              stroke: 'blue',\r\n              strokeWidth: 3,\r\n              strokeDasharray: 'none',\r\n              fillOpacity: 0.45,\r\n            },\r\n          },\r\n        },\r\n      ]);\r\n    }\r\n  });\r\n  x6Graph.on('cell:mouseleave', ({ e, cell, view }) => {\r\n    cell.removeTools();\r\n  });\r\n  //*/\r\n  return x6Graph;\r\n}","/* tslint:disable */\r\nimport 'es6-promise/auto';  // polyfill Promise on IE\r\n\r\nimport {\r\n  Widget\r\n} from '@lumino/widgets';\r\n\r\nimport * as diagram from '../diagram';\r\n\r\nexport class ELKGraphWidget extends Widget {\r\n\r\n  constructor(_width, _height) {\r\n    super();\r\n    this._flows = new Map();\r\n    this.addClass('CodeMirrorWidget');\r\n    this.title.label = 'PREVIEW';\r\n    this.title.closable = false;\r\n    this.title.caption = `Long description for ELK Graph`;\r\n\r\n    let div = document.createElement('div');\r\n    div.setAttribute('style', 'padding:4px;background-color: #dfdfdf;');\r\n    this.node.appendChild(div);\r\n\r\n    this.selectElt = document.createElement('select');\r\n    this.selectElt.setAttribute('class', 'flow-select');\r\n    div.appendChild(this.selectElt);\r\n\r\n    let opt = document.createElement('option');\r\n    opt.value = 'Option 1';\r\n    opt.text = 'Option 1';\r\n    this.selectElt.add(opt);\r\n\r\n    let separator = document.createElement('div');\r\n    separator.setAttribute('class', 'separator');\r\n    this.node.appendChild(separator);\r\n\r\n    const content = document.createElement('div');\r\n    content.setAttribute('class', 'app');\r\n    this.node.appendChild(content);\r\n\r\n    this.contentPane = this.createVisibleContentPane();\r\n    content.appendChild(this.contentPane);\r\n\r\n    this.errorPane = this.createVisibleContentPane(false);\r\n    this.errorPane.style.padding = '10px';\r\n    this.errorPane.style.fontSize = '2em';\r\n    content.appendChild(this.errorPane);\r\n\r\n    const minimapContainer = document.createElement('div');\r\n    minimapContainer.setAttribute('class', 'minimap-container');\r\n    content.appendChild(minimapContainer);\r\n\r\n    this.renderer = diagram.createElkRenderer(this.contentPane, minimapContainer, _width, _height);\r\n\r\n    console.log(`ctor : W${this.contentPane.scrollWidth} - H${this.contentPane.scrollHeight}`);\r\n  }\r\n\r\n  createVisibleContentPane(visible = true) {\r\n    const content = document.createElement('div');\r\n    content.setAttribute('class', 'app-content-pane');\r\n    content.setAttribute('style', 'scroll-behavior: auto; overflow: scroll;');\r\n    content.style.display = visible ? 'block' : 'none';\r\n    return content;\r\n  }\r\n\r\n  onAfterAttach(msg) {\r\n    /*\r\n    console.log(`onAfterAttach : W${this.contentPane.scrollWidth} - H${this.contentPane.scrollHeight}`);\r\n    //*/\r\n  }\r\n\r\n  onResize(msg) {\r\n    /*\r\n    console.log(`onResize : W${this.contentPane.clientWidth} - H${this.contentPane.clientHeight} # W${msg.width} - H${msg.height}`);\r\n    //*/\r\n  }\r\n\r\n  get graph() {\r\n    return this._graph;\r\n  }\r\n\r\n  get flows() {\r\n    return this._flows;\r\n  }\r\n\r\n  set flows(values) {\r\n    this._flows = values;\r\n    // Populate select component from list of samples\r\n    // Recreate flow options\r\n    while (this.selectElt.firstChild) {\r\n      this.selectElt.firstChild.remove();\r\n    }\r\n\r\n    values.forEach((value, key) => {\r\n      let opt = document.createElement('option');\r\n      opt.value = key;\r\n      opt.text = key;\r\n      this.selectElt.add(opt);\r\n    });\r\n    const current = values.get(values.keys().next().value);\r\n    if (current instanceof Error || typeof current === 'string') {\r\n      // Display Error Pane\r\n      this.contentPane.style.display = 'none';\r\n      this.errorPane.style.display = 'block';\r\n      this.errorPane.innerHTML = '<code>' + current + '</code>';\r\n\r\n    } else {\r\n      // Display flow\r\n      // Update flow when the selection changes \r\n      this.contentPane.style.display = 'block';\r\n      this.errorPane.style.display = 'none';\r\n\r\n      let self = this;\r\n      this.selectElt.addEventListener('change', (event) => {\r\n        const result = self._flows.get(event.target.value);\r\n        self.renderFlow(result).then((result) => {\r\n          if (result !== null) {\r\n            self.renderer.zoomGraph('fit');\r\n          }\r\n        });\r\n      });\r\n      this.renderFlow(current);\r\n    }\r\n  }\r\n\r\n  renderFlow(input) {\r\n    if (input === undefined || input === null) {\r\n      return Promise.resolve(null);\r\n    }\r\n\r\n    try {\r\n      return this.renderer.render(input);\r\n    } catch (e) {\r\n      console.error(e);\r\n      return Promise.reject(e);\r\n    }\r\n\r\n  }\r\n\r\n}","import './style/x6-elk-style.css';\r\n\r\nimport { createElkD3Renderer } from './d3-elk-renderer';\r\nimport { createElkX6Renderer } from './x6-elk-renderer';\r\n\r\nexport function createElkRenderer(_container_, _width_, _height_, _iconWidth_) {\r\n  return createElkX6Renderer(_container_, _width_, _height_, _iconWidth_);\r\n}\r\n","export const samples2 = [\r\n  `import { choice, terminal, sequence } from 'topology-dsl';\r\n  export const testflow = \r\n    sequence(\r\n      terminal('a'), \r\n      terminal('b')\r\n    );`,\r\n`import { choice, terminal, sequence } from 'topology-dsl';\r\nimport { \r\n  gcp_Cloud_SQL,\r\n  gcp_Memorystore\r\n} from './assets/js/GCP/index.js';\r\n\r\nimport { \r\n  gcp_Compute_Engine,\r\n  gcp_Cloud_Storage,\r\n  gcp_Pub_Sub \r\n} from 'gcp-dsl';\r\n\r\nconst gce = gcp_Compute_Engine;\r\n\r\nconst choice1 = choice(\r\n  gcp_Cloud_Storage('c')._title_('AZ BLOB-A'),\r\n      gcp_Cloud_SQL('a')._title_('AZ SQL-A')\r\n    )._down_();\r\n\t\r\nexport const sequence1 = sequence(\r\n    gce('c')._title_('GCP VM-C'),\r\n    gcp_Memorystore('b')._title_('AZ CACHE-B'),\r\n    choice1,\r\n    gce('c')._title_('AZ VM-C')\r\n  );\t\r\n  \r\nexport const v1 = sequence(\r\n  terminal('b'), \r\n  choice(\r\n    'c',\r\n    gce('a')._title_('GCP VM-A'),\r\n    gce('b')._title_('AZ VM-B')\r\n  ),\r\n  sequence1,\r\n  gcp_Cloud_Storage('S1'),\r\n  gcp_Pub_Sub('PS1')\r\n);\r\n\r\nv1._title_('CLOUD DIAGRgce1')._id_('DIAGRgce1');\r\n\r\nexport const testflow = gce('b');\r\ntestflow._title_('AZ VM-B');\r\n`,\r\n`import { choice, terminal, sequence } from 'topology-dsl';\r\nexport const testflow = choice(\r\n  terminal('a')._in_('a','b')._out_('a','b'),\r\n  choice('e', 'd'),\r\n  sequence(\r\n    terminal('b'), \r\n    terminal('c')._in_('a','b'),\r\n    sequence('c','d')._in_('a','b')._out_('e','f')\r\n  ),\r\n  sequence('c','d')\r\n);`,\r\n`import {\r\n  choice,\r\n  terminal,\r\n  sequence,\r\n  repeat,\r\n  optional,\r\n  zeroOrMore\r\n} from 'topology-dsl';\r\n\r\nexport const testflow = choice(\r\n  terminal('a')._in_('a','b')._out_('a','b'),\r\n  choice('e', 'd'),\r\n  sequence(\r\n    terminal('b'),\r\n    terminal('c')._in_('a','b'),\r\n    sequence('c','d')._in_('a','b')._out_('e','f')\r\n  ),\r\n  sequence('c','d')\r\n);\r\n\r\nlet selectClause = () => sequence('a', 'b', repeat(optional('c')), zeroOrMore('d'));\r\nlet fromClause = function a() {\r\n    return  choice('1', '2', selectClause, '4');\r\n};\r\n\r\nexport const v1 = selectClause();\r\nexport const v2 = fromClause();\r\n`,\r\n`import {\r\n  choice,\r\n  terminal,\r\n  sequence,\r\n  repeat,\r\n  optional,\r\n  zeroOrMore\r\n} from 'topology-dsl';\r\n\r\nlet selectClause = () => sequence('a', 'b', repeat(optional('c')), zeroOrMore('d'));\r\nlet fromClause = function a() {\r\n    return  choice('1', '2', selectClause, '4');\r\n};\r\n\r\nexport const v1 = selectClause();\r\nexport const v2 = fromClause();\r\n`,\r\n'./assets/js/dummy.js',\r\n`import {\r\n  choice,\r\n  terminal,\r\n  sequence,\r\n  repeat,\r\n  optional,\r\n  zeroOrMore\r\n} from 'topology-dsl';\r\n\r\nimport { path1, path2, path3 } from './assets/js/dummy.js';\r\n\r\nexport const v1 = sequence(path1, path2);\r\n\r\nexport const v2 = path1;\r\nexport const v3 = path2;\r\nexport const v4 = path3;\r\n`,\r\n`import { choice, terminal, sequence, fanOut, fanIn, group } from 'topology-dsl';\r\nexport const v1 = sequence(\r\n  'Create \\\\nAggregations',\r\n  'Store \\\\nAggregations'\r\n)._down_()._title_('Step 2');\r\n\r\nconst phase1 = sequence(\r\n\tfanIn(\r\n\t\t'GBP.EUR',\r\n\t\t'GBP.BRL',\r\n\t\t'EUR.AUD',\r\n\t\t'GBP.JPY'\r\n\t)._title_('Step 1'),\r\n\tv1\r\n)._title_('Phase 1');\r\n\r\nconst phase2 = sequence(\r\n\tgroup(\r\n\t\t'Create Operating \\\\nWindows'\r\n\t)._title_('Step 3'),\r\n\tsequence(\r\n\t\t'Compute \\\\nCorrelations'\r\n\t\tfanOut(\r\n\t\t\t'Store \\\\nCorrelations',\r\n\t\t\t'Publish \\\\nCorrelations',\r\n\t\t)\r\n\t)._down_()._title_('Step 4')\r\n)._title_('Phase 2');\r\n\r\nexport const flow = sequence(phase1,phase2);`\r\n];","let _mapArray_ = [\r\n  ['gcp_Compute_Engine', {\r\n \"provider\": \"GCP\",\r\n \"category\": null,\r\n \"product\": \"Compute Engine\",\r\n \"dsl\": \"gcp_Compute_Engine\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Compute_Engine\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#computeengine\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/compute\"\r\n}],\r\n  ['gcp_Cloud_Storage', {\r\n \"provider\": \"GCP\",\r\n \"category\": null,\r\n \"product\": \"Cloud Storage\",\r\n \"dsl\": \"gcp_Cloud_Storage\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Storage\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudstorage\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/storage\"\r\n}],\r\n  ['gcp_Cloud_SDK', {\r\n \"provider\": \"GCP\",\r\n \"category\": null,\r\n \"product\": \"Cloud SDK\",\r\n \"dsl\": \"gcp_Cloud_SDK\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_SDK\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudshell\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/sdk\"\r\n}],\r\n  ['gcp_Cloud_SQL', {\r\n \"provider\": \"GCP\",\r\n \"category\": null,\r\n \"product\": \"Cloud SQL\",\r\n \"dsl\": \"gcp_Cloud_SQL\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_SQL\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudsql\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/sql\"\r\n}],\r\n  ['gcp_Google_Kubernetes_Engine', {\r\n \"provider\": \"GCP\",\r\n \"category\": null,\r\n \"product\": \"Google Kubernetes Engine\",\r\n \"dsl\": \"gcp_Google_Kubernetes_Engine\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Google_Kubernetes_Engine\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#kubernetesengine\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/kubernetes-engine\"\r\n}],\r\n  ['gcp_BigQuery', {\r\n \"provider\": \"GCP\",\r\n \"category\": null,\r\n \"product\": \"BigQuery\",\r\n \"dsl\": \"gcp_BigQuery\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_BigQuery\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#bigquery\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/bigquery\"\r\n}],\r\n  ['gcp_Cloud_CDN', {\r\n \"provider\": \"GCP\",\r\n \"category\": null,\r\n \"product\": \"Cloud CDN\",\r\n \"dsl\": \"gcp_Cloud_CDN\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_CDN\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudcdn\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/cdn\"\r\n}],\r\n  ['gcp_Dataflow', {\r\n \"provider\": \"GCP\",\r\n \"category\": null,\r\n \"product\": \"Dataflow\",\r\n \"dsl\": \"gcp_Dataflow\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Dataflow\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#clouddataflow\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/dataflow\"\r\n}],\r\n  ['gcp_Operations', {\r\n \"provider\": \"GCP\",\r\n \"category\": null,\r\n \"product\": \"Operations\",\r\n \"dsl\": \"gcp_Operations\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Operations\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#stackdriver\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/products/operations\"\r\n}],\r\n  ['gcp_Cloud_Run', {\r\n \"provider\": \"GCP\",\r\n \"category\": null,\r\n \"product\": \"Cloud Run\",\r\n \"dsl\": \"gcp_Cloud_Run\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Run\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudrun\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/run\"\r\n}],\r\n  ['gcp_Anthos', {\r\n \"provider\": \"GCP\",\r\n \"category\": null,\r\n \"product\": \"Anthos\",\r\n \"dsl\": \"gcp_Anthos\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Anthos\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#anthos\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/anthos\"\r\n}],\r\n  ['gcp_See_all_products__100__', {\r\n \"provider\": \"GCP\",\r\n \"category\": null,\r\n \"product\": \"See all products (100+)\",\r\n \"dsl\": \"gcp_See_all_products__100__\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_See_all_products__100__\",\r\n \"iconURL\": \"\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/products\"\r\n}],\r\n  ['gcp_Vertex_AI', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"AI and Machine Learning\",\r\n \"product\": \"Vertex AI\",\r\n \"dsl\": \"gcp_Vertex_AI\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Vertex_AI\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/vertex-ai.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/vertex-ai\"\r\n}],\r\n  ['gcp_Speech_to_Text', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"AI and Machine Learning\",\r\n \"product\": \"Speech-to-Text\",\r\n \"dsl\": \"gcp_Speech_to_Text\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Speech_to_Text\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudspeechapi\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/speech-to-text\"\r\n}],\r\n  ['gcp_Vision_AI', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"AI and Machine Learning\",\r\n \"product\": \"Vision AI\",\r\n \"dsl\": \"gcp_Vision_AI\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Vision_AI\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudvisionapi\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/vision\"\r\n}],\r\n  ['gcp_Text_to_Speech', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"AI and Machine Learning\",\r\n \"product\": \"Text-to-Speech\",\r\n \"dsl\": \"gcp_Text_to_Speech\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Text_to_Speech\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudtexttospeech\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/text-to-speech\"\r\n}],\r\n  ['gcp_Cloud_Translation', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"AI and Machine Learning\",\r\n \"product\": \"Cloud Translation\",\r\n \"dsl\": \"gcp_Cloud_Translation\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Translation\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudtranslationapi\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/translate\"\r\n}],\r\n  ['gcp_Cloud_Natural_Language', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"AI and Machine Learning\",\r\n \"product\": \"Cloud Natural Language\",\r\n \"dsl\": \"gcp_Cloud_Natural_Language\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Natural_Language\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudnaturallanguageapi\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/natural-language\"\r\n}],\r\n  ['gcp_AutoML', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"AI and Machine Learning\",\r\n \"product\": \"AutoML\",\r\n \"dsl\": \"gcp_AutoML\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_AutoML\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#automl\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/automl\"\r\n}],\r\n  ['gcp_Video_AI', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"AI and Machine Learning\",\r\n \"product\": \"Video AI\",\r\n \"dsl\": \"gcp_Video_AI\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Video_AI\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudvideointelligenceapi\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/video-intelligence\"\r\n}],\r\n  ['gcp_AI_Infrastructure', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"AI and Machine Learning\",\r\n \"product\": \"AI Infrastructure\",\r\n \"dsl\": \"gcp_AI_Infrastructure\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_AI_Infrastructure\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#aiplatform\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/ai-infrastructure\"\r\n}],\r\n  ['gcp_Dialogflow', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"AI and Machine Learning\",\r\n \"product\": \"Dialogflow\",\r\n \"dsl\": \"gcp_Dialogflow\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Dialogflow\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#dialogflow\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/dialogflow\"\r\n}],\r\n  ['gcp_AutoML_Tables', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"AI and Machine Learning\",\r\n \"product\": \"AutoML Tables\",\r\n \"dsl\": \"gcp_AutoML_Tables\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_AutoML_Tables\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#automltables\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/automl-tables\"\r\n}],\r\n  ['gcp_See_all_AI_and_machine_learning_products', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"AI and Machine Learning\",\r\n \"product\": \"See all AI and machine learning products\",\r\n \"dsl\": \"gcp_See_all_AI_and_machine_learning_products\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_See_all_AI_and_machine_learning_products\",\r\n \"iconURL\": \"\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/products#ai-and-machine-learning\"\r\n}],\r\n  ['gcp_Apigee_API_Management', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"AI and Machine Learning\",\r\n \"product\": \"Apigee API Management\",\r\n \"dsl\": \"gcp_Apigee_API_Management\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Apigee_API_Management\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#apigeeapiplatform\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/apigee/api-management\"\r\n}],\r\n  ['gcp_Cloud_Endpoints', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"AI and Machine Learning\",\r\n \"product\": \"Cloud Endpoints\",\r\n \"dsl\": \"gcp_Cloud_Endpoints\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Endpoints\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudendpoints\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/endpoints\"\r\n}],\r\n  ['gcp_Cloud_Healthcare_API', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"AI and Machine Learning\",\r\n \"product\": \"Cloud Healthcare API\",\r\n \"dsl\": \"gcp_Cloud_Healthcare_API\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Healthcare_API\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#healthcareapi\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/healthcare\"\r\n}],\r\n  ['gcp_AppSheet', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"AI and Machine Learning\",\r\n \"product\": \"AppSheet\",\r\n \"dsl\": \"gcp_AppSheet\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_AppSheet\",\r\n \"iconURL\": \"https://cloud.google.com/images/navigation/products/appsheet-icon.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/appsheet\"\r\n}],\r\n  ['gcp_API_Gateway', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"AI and Machine Learning\",\r\n \"product\": \"API Gateway\",\r\n \"dsl\": \"gcp_API_Gateway\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_API_Gateway\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/api-gateway.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/apigee\"\r\n}],\r\n  ['gcp_App_Engine', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Compute\",\r\n \"product\": \"App Engine\",\r\n \"dsl\": \"gcp_App_Engine\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_App_Engine\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#appengine\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/appengine\"\r\n}],\r\n  ['gcp_Cloud_GPUs', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Compute\",\r\n \"product\": \"Cloud GPUs\",\r\n \"dsl\": \"gcp_Cloud_GPUs\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_GPUs\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#gpu\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/gpu\"\r\n}],\r\n  ['gcp_Migrate_for_Compute_Engine', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Compute\",\r\n \"product\": \"Migrate for Compute Engine\",\r\n \"dsl\": \"gcp_Migrate_for_Compute_Engine\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Migrate_for_Compute_Engine\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#migrateforcomputeengine\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/migrate/compute-engine\"\r\n}],\r\n  ['gcp_Preemptible_VMs', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Compute\",\r\n \"product\": \"Preemptible VMs\",\r\n \"dsl\": \"gcp_Preemptible_VMs\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Preemptible_VMs\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#computeengine\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/preemptible-vms\"\r\n}],\r\n  ['gcp_Shielded_VMs', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Compute\",\r\n \"product\": \"Shielded VMs\",\r\n \"dsl\": \"gcp_Shielded_VMs\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Shielded_VMs\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#computeengine\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/shielded-vm\"\r\n}],\r\n  ['gcp_Sole_Tenant_Nodes', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Compute\",\r\n \"product\": \"Sole-Tenant Nodes\",\r\n \"dsl\": \"gcp_Sole_Tenant_Nodes\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Sole_Tenant_Nodes\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#computeengine\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/sole-tenant-nodes\"\r\n}],\r\n  ['gcp_Bare_Metal', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Compute\",\r\n \"product\": \"Bare Metal\",\r\n \"dsl\": \"gcp_Bare_Metal\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Bare_Metal\",\r\n \"iconURL\": \"https://cloud.google.com/_static/cloud/images/navigation/products/bare-metal.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/bare-metal\"\r\n}],\r\n  ['gcp_Recommender', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Compute\",\r\n \"product\": \"Recommender\",\r\n \"dsl\": \"gcp_Recommender\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Recommender\",\r\n \"iconURL\": \"https://cloud.google.com/_static/cloud/images/navigation/products/recommender.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/recommender\"\r\n}],\r\n  ['gcp_VMware_Engine', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Compute\",\r\n \"product\": \"VMware Engine\",\r\n \"dsl\": \"gcp_VMware_Engine\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_VMware_Engine\",\r\n \"iconURL\": \"https://cloud.google.com/_static/cloud/images/navigation/products/vmware-engine.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/vmware-engine\"\r\n}],\r\n  ['gcp_See_all_compute_products', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Compute\",\r\n \"product\": \"See all compute products\",\r\n \"dsl\": \"gcp_See_all_compute_products\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_See_all_compute_products\",\r\n \"iconURL\": \"\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/products#compute\"\r\n}],\r\n  ['gcp_Container_Registry', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Containers\",\r\n \"product\": \"Container Registry\",\r\n \"dsl\": \"gcp_Container_Registry\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Container_Registry\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#containerregistry\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/container-registry\"\r\n}],\r\n  ['gcp_Container_Security', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Containers\",\r\n \"product\": \"Container Security\",\r\n \"dsl\": \"gcp_Container_Security\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Container_Security\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#kubernetesengine\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/containers/security\"\r\n}],\r\n  ['gcp_Cloud_Build', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Containers\",\r\n \"product\": \"Cloud Build\",\r\n \"dsl\": \"gcp_Cloud_Build\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Build\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudbuild\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/build\"\r\n}],\r\n  ['gcp_Deep_Learning_Containers', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Containers\",\r\n \"product\": \"Deep Learning Containers\",\r\n \"dsl\": \"gcp_Deep_Learning_Containers\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Deep_Learning_Containers\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#aiplatform\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/ai-platform/deep-learning-containers\"\r\n}],\r\n  ['gcp_Kubernetes_Applications', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Containers\",\r\n \"product\": \"Kubernetes Applications\",\r\n \"dsl\": \"gcp_Kubernetes_Applications\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Kubernetes_Applications\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#kubernetesengine\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/kubernetes-applications\"\r\n}],\r\n  ['gcp_Artifact_Registry', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Containers\",\r\n \"product\": \"Artifact Registry\",\r\n \"dsl\": \"gcp_Artifact_Registry\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Artifact_Registry\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#containerregistry\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/artifact-registry\"\r\n}],\r\n  ['gcp_Knative', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Containers\",\r\n \"product\": \"Knative\",\r\n \"dsl\": \"gcp_Knative\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Knative\",\r\n \"iconURL\": \"https://cloud.google.com/images/navigation/products/knative.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/knative\"\r\n}],\r\n  ['gcp_Cloud_Code', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Containers\",\r\n \"product\": \"Cloud Code\",\r\n \"dsl\": \"gcp_Cloud_Code\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Code\",\r\n \"iconURL\": \"https://cloud.google.com/_static/cloud/images/navigation/products/cloud-code.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/code\"\r\n}],\r\n  ['gcp_Looker', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Data Analytics\",\r\n \"product\": \"Looker\",\r\n \"dsl\": \"gcp_Looker\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Looker\",\r\n \"iconURL\": \"https://cloud.google.com/images/navigation/products/cloud-looker.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/looker\"\r\n}],\r\n  ['gcp_Pub_Sub', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Data Analytics\",\r\n \"product\": \"Pub/Sub\",\r\n \"dsl\": \"gcp_Pub_Sub\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Pub_Sub\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudpubsub\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/pubsub\"\r\n}],\r\n  ['gcp_Dataproc', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Data Analytics\",\r\n \"product\": \"Dataproc\",\r\n \"dsl\": \"gcp_Dataproc\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Dataproc\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#clouddataproc\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/dataproc\"\r\n}],\r\n  ['gcp_Cloud_Data_Fusion', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Data Analytics\",\r\n \"product\": \"Cloud Data Fusion\",\r\n \"dsl\": \"gcp_Cloud_Data_Fusion\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Data_Fusion\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#clouddatafusion\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/data-fusion\"\r\n}],\r\n  ['gcp_Cloud_Composer', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Data Analytics\",\r\n \"product\": \"Cloud Composer\",\r\n \"dsl\": \"gcp_Cloud_Composer\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Composer\",\r\n \"iconURL\": \"https://cloud.google.com/_static/cloud/images/navigation/products/cloud-composer.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/composer\"\r\n}],\r\n  ['gcp_Dataprep', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Data Analytics\",\r\n \"product\": \"Dataprep\",\r\n \"dsl\": \"gcp_Dataprep\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Dataprep\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#clouddataprep\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/dataprep\"\r\n}],\r\n  ['gcp_Dataplex', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Data Analytics\",\r\n \"product\": \"Dataplex\",\r\n \"dsl\": \"gcp_Dataplex\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Dataplex\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/dataplex.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/dataplex\"\r\n}],\r\n  ['gcp_Data_Catalog', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Data Analytics\",\r\n \"product\": \"Data Catalog\",\r\n \"dsl\": \"gcp_Data_Catalog\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Data_Catalog\",\r\n \"iconURL\": \"https://cloud.google.com/_static/cloud/images/navigation/products/cloud-data-catalog.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/data-catalog\"\r\n}],\r\n  ['gcp_Analytics_Hub', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Data Analytics\",\r\n \"product\": \"Analytics Hub\",\r\n \"dsl\": \"gcp_Analytics_Hub\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Analytics_Hub\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/analytics-hub.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/analytics-hub\"\r\n}],\r\n  ['gcp_See_all_developer_tools', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Data Analytics\",\r\n \"product\": \"See all developer tools\",\r\n \"dsl\": \"gcp_See_all_developer_tools\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_See_all_developer_tools\",\r\n \"iconURL\": \"\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/products/tools\"\r\n}],\r\n  ['gcp_Cloud_Bigtable', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Databases\",\r\n \"product\": \"Cloud Bigtable\",\r\n \"dsl\": \"gcp_Cloud_Bigtable\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Bigtable\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#bigtable\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/bigtable\"\r\n}],\r\n  ['gcp_Firestore', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Databases\",\r\n \"product\": \"Firestore\",\r\n \"dsl\": \"gcp_Firestore\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Firestore\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudfirestore\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/firestore\"\r\n}],\r\n  ['gcp_Memorystore', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Databases\",\r\n \"product\": \"Memorystore\",\r\n \"dsl\": \"gcp_Memorystore\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Memorystore\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudmemorystore\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/memorystore\"\r\n}],\r\n  ['gcp_Cloud_Spanner', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Databases\",\r\n \"product\": \"Cloud Spanner\",\r\n \"dsl\": \"gcp_Cloud_Spanner\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Spanner\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudspanner\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/spanner\"\r\n}],\r\n  ['gcp_Database_Migration_Service', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Databases\",\r\n \"product\": \"Database Migration Service\",\r\n \"dsl\": \"gcp_Database_Migration_Service\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Database_Migration_Service\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/database-migration-service.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/database-migration\"\r\n}],\r\n  ['gcp_Firebase_Realtime_Database', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Databases\",\r\n \"product\": \"Firebase Realtime Database\",\r\n \"dsl\": \"gcp_Firebase_Realtime_Database\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Firebase_Realtime_Database\",\r\n \"iconURL\": \"https://cloud.google.com/_static/cloud/images/navigation/products/firebase.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://firebase.google.com/products/realtime-database/\"\r\n}],\r\n  ['gcp_Datastream', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Databases\",\r\n \"product\": \"Datastream\",\r\n \"dsl\": \"gcp_Datastream\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Datastream\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/datastream.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/datastream\"\r\n}],\r\n  ['gcp_Cloud_Deployment_Manager', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Developer Tools\",\r\n \"product\": \"Cloud Deployment Manager\",\r\n \"dsl\": \"gcp_Cloud_Deployment_Manager\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Deployment_Manager\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/deployment-manager.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/deployment-manager\"\r\n}],\r\n  ['gcp_Cloud_Scheduler', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Developer Tools\",\r\n \"product\": \"Cloud Scheduler\",\r\n \"dsl\": \"gcp_Cloud_Scheduler\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Scheduler\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudscheduler\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/scheduler\"\r\n}],\r\n  ['gcp_Cloud_Source_Repositories', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Developer Tools\",\r\n \"product\": \"Cloud Source Repositories\",\r\n \"dsl\": \"gcp_Cloud_Source_Repositories\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Source_Repositories\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#logging\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/source-repositories\"\r\n}],\r\n  ['gcp_Cloud_Tasks', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Developer Tools\",\r\n \"product\": \"Cloud Tasks\",\r\n \"dsl\": \"gcp_Cloud_Tasks\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Tasks\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudtasks\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/tasks\"\r\n}],\r\n  ['gcp_Tekton', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Developer Tools\",\r\n \"product\": \"Tekton\",\r\n \"dsl\": \"gcp_Tekton\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Tekton\",\r\n \"iconURL\": \"https://cloud.google.com/images/navigation/products/tekton.png\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/tekton\"\r\n}],\r\n  ['gcp_Apigee_Healthcare_APIx', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Developer Tools\",\r\n \"product\": \"Apigee Healthcare APIx\",\r\n \"dsl\": \"gcp_Apigee_Healthcare_APIx\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Apigee_Healthcare_APIx\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#apigeeapiplatform\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/apigee/solutions/healthcare-apix\"\r\n}],\r\n  ['gcp_Cloud_Life_Sciences', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Developer Tools\",\r\n \"product\": \"Cloud Life Sciences\",\r\n \"dsl\": \"gcp_Cloud_Life_Sciences\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Life_Sciences\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#genomics\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/life-sciences\"\r\n}],\r\n  ['gcp_Healthcare_Natural_Language_AI', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Developer Tools\",\r\n \"product\": \"Healthcare Natural Language AI\",\r\n \"dsl\": \"gcp_Healthcare_Natural_Language_AI\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Healthcare_Natural_Language_AI\",\r\n \"iconURL\": \"https://cloud.google.com/images/navigation/products/healthcare.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/natural-language\"\r\n}],\r\n  ['gcp_Cloud_Run_for_Anthos', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Hybrid and Multicloud\",\r\n \"product\": \"Cloud Run for Anthos\",\r\n \"dsl\": \"gcp_Cloud_Run_for_Anthos\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Run_for_Anthos\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudrun\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/anthos/run\"\r\n}],\r\n  ['gcp_Google_Cloud_Marketplace_for_Anthos', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Hybrid and Multicloud\",\r\n \"product\": \"Google Cloud Marketplace for Anthos\",\r\n \"dsl\": \"gcp_Google_Cloud_Marketplace_for_Anthos\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Google_Cloud_Marketplace_for_Anthos\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#marketplace\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/kubernetes-applications\"\r\n}],\r\n  ['gcp_Migrate_for_Anthos', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Hybrid and Multicloud\",\r\n \"product\": \"Migrate for Anthos\",\r\n \"dsl\": \"gcp_Migrate_for_Anthos\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Migrate_for_Anthos\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#migrateforanthos\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/migrate/anthos\"\r\n}],\r\n  ['gcp_Traffic_Director', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Hybrid and Multicloud\",\r\n \"product\": \"Traffic Director\",\r\n \"dsl\": \"gcp_Traffic_Director\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Traffic_Director\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#trafficdirector\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/traffic-director\"\r\n}],\r\n  ['gcp_Cloud_IoT_Core', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Hybrid and Multicloud\",\r\n \"product\": \"Cloud IoT Core\",\r\n \"dsl\": \"gcp_Cloud_IoT_Core\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_IoT_Core\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudiotcore\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/iot-core\"\r\n}],\r\n  ['gcp_Edge_TPU', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Hybrid and Multicloud\",\r\n \"product\": \"Edge TPU\",\r\n \"dsl\": \"gcp_Edge_TPU\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Edge_TPU\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudiotedge\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/edge-tpu\"\r\n}],\r\n  ['gcp_Cloud_Shell', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Management Tools\",\r\n \"product\": \"Cloud Shell\",\r\n \"dsl\": \"gcp_Cloud_Shell\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Shell\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudshell\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/shell\"\r\n}],\r\n  ['gcp_Cloud_Console', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Management Tools\",\r\n \"product\": \"Cloud Console\",\r\n \"dsl\": \"gcp_Cloud_Console\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Console\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#generic\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/cloud-console\"\r\n}],\r\n  ['gcp_Cloud_Mobile_App', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Management Tools\",\r\n \"product\": \"Cloud Mobile App\",\r\n \"dsl\": \"gcp_Cloud_Mobile_App\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Mobile_App\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#generic\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/console-app\"\r\n}],\r\n  ['gcp_Cloud_APIs', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Management Tools\",\r\n \"product\": \"Cloud APIs\",\r\n \"dsl\": \"gcp_Cloud_APIs\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_APIs\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudapis\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/apis\"\r\n}],\r\n  ['gcp_Private_Catalog', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Management Tools\",\r\n \"product\": \"Private Catalog\",\r\n \"dsl\": \"gcp_Private_Catalog\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Private_Catalog\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#marketplace\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/private-catalog\"\r\n}],\r\n  ['gcp_Cost_Management', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Management Tools\",\r\n \"product\": \"Cost Management\",\r\n \"dsl\": \"gcp_Cost_Management\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cost_Management\",\r\n \"iconURL\": \"https://cloud.google.com/images/navigation/products/billing.png\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/cost-management\"\r\n}],\r\n  ['gcp_Intelligent_Management', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Management Tools\",\r\n \"product\": \"Intelligent Management\",\r\n \"dsl\": \"gcp_Intelligent_Management\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Intelligent_Management\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#generic\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/solutions/active-assist\"\r\n}],\r\n  ['gcp_Game_Servers', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Management Tools\",\r\n \"product\": \"Game Servers\",\r\n \"dsl\": \"gcp_Game_Servers\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Game_Servers\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudgameservers\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/game-servers\"\r\n}],\r\n  ['gcp_OpenCue', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Management Tools\",\r\n \"product\": \"OpenCue\",\r\n \"dsl\": \"gcp_OpenCue\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_OpenCue\",\r\n \"iconURL\": \"https://cloud.google.com/images/navigation/products/opencue.png\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/opencue\"\r\n}],\r\n  ['gcp_Application_Migration', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Migration\",\r\n \"product\": \"Application Migration\",\r\n \"dsl\": \"gcp_Application_Migration\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Application_Migration\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/application-migration.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/solutions/application-migration\"\r\n}],\r\n  ['gcp_BigQuery_Data_Transfer_Service', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Migration\",\r\n \"product\": \"BigQuery Data Transfer Service\",\r\n \"dsl\": \"gcp_BigQuery_Data_Transfer_Service\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_BigQuery_Data_Transfer_Service\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#bigquery\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/bigquery/transfer\"\r\n}],\r\n  ['gcp_Cloud_Foundation_Toolkit', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Migration\",\r\n \"product\": \"Cloud Foundation Toolkit\",\r\n \"dsl\": \"gcp_Cloud_Foundation_Toolkit\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Foundation_Toolkit\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#generic\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/foundation-toolkit\"\r\n}],\r\n  ['gcp_Rapid_Assessment_Migration_Program_RAMP', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Migration\",\r\n \"product\": \"Rapid Assessment & Migration Program (RAMP)\",\r\n \"dsl\": \"gcp_Rapid_Assessment_Migration_Program_RAMP\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Rapid_Assessment_Migration_Program_RAMP\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/rapid-assessment.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/solutions/cloud-migration-program\"\r\n}],\r\n  ['gcp_Transfer_Appliance', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Migration\",\r\n \"product\": \"Transfer Appliance\",\r\n \"dsl\": \"gcp_Transfer_Appliance\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Transfer_Appliance\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#transferappliance\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/transfer-appliance\"\r\n}],\r\n  ['gcp_Storage_Transfer_Service', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Migration\",\r\n \"product\": \"Storage Transfer Service\",\r\n \"dsl\": \"gcp_Storage_Transfer_Service\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Storage_Transfer_Service\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#transfer\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/storage-transfer-service\"\r\n}],\r\n  ['gcp_Cloud_Armor', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Networking\",\r\n \"product\": \"Cloud Armor\",\r\n \"dsl\": \"gcp_Cloud_Armor\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Armor\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudarmor\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/armor\"\r\n}],\r\n  ['gcp_Cloud_DNS', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Networking\",\r\n \"product\": \"Cloud DNS\",\r\n \"dsl\": \"gcp_Cloud_DNS\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_DNS\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#clouddns\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/dns\"\r\n}],\r\n  ['gcp_Cloud_Load_Balancing', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Networking\",\r\n \"product\": \"Cloud Load Balancing\",\r\n \"dsl\": \"gcp_Cloud_Load_Balancing\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Load_Balancing\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudloadbalancing\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/load-balancing\"\r\n}],\r\n  ['gcp_Cloud_NAT', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Networking\",\r\n \"product\": \"Cloud NAT\",\r\n \"dsl\": \"gcp_Cloud_NAT\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_NAT\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudnat\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/nat\"\r\n}],\r\n  ['gcp_Hybrid_Connectivity', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Networking\",\r\n \"product\": \"Hybrid Connectivity\",\r\n \"dsl\": \"gcp_Hybrid_Connectivity\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Hybrid_Connectivity\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudinterconnect\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/hybrid-connectivity\"\r\n}],\r\n  ['gcp_Network_Connectivity_Center', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Networking\",\r\n \"product\": \"Network Connectivity Center\",\r\n \"dsl\": \"gcp_Network_Connectivity_Center\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Network_Connectivity_Center\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/network-connectivity-center.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/network-connectivity-center\"\r\n}],\r\n  ['gcp_Network_Intelligence_Center', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Networking\",\r\n \"product\": \"Network Intelligence Center\",\r\n \"dsl\": \"gcp_Network_Intelligence_Center\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Network_Intelligence_Center\",\r\n \"iconURL\": \"https://cloud.google.com/_static/cloud/images/navigation/products/network-intelligence.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/network-intelligence-center\"\r\n}],\r\n  ['gcp_Network_Service_Tiers', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Networking\",\r\n \"product\": \"Network Service Tiers\",\r\n \"dsl\": \"gcp_Network_Service_Tiers\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Network_Service_Tiers\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#networktiers\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/network-tiers\"\r\n}],\r\n  ['gcp_Network_Telemetry', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Networking\",\r\n \"product\": \"Network Telemetry\",\r\n \"dsl\": \"gcp_Network_Telemetry\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Network_Telemetry\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#virtualprivatecloud\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/network-telemetry\"\r\n}],\r\n  ['gcp_See_all_networking_products', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Networking\",\r\n \"product\": \"See all networking products\",\r\n \"dsl\": \"gcp_See_all_networking_products\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_See_all_networking_products\",\r\n \"iconURL\": \"\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/products#section-16\"\r\n}],\r\n  ['gcp_Cloud_Logging', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Operations\",\r\n \"product\": \"Cloud Logging\",\r\n \"dsl\": \"gcp_Cloud_Logging\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Logging\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#logging\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/logging\"\r\n}],\r\n  ['gcp_Cloud_Monitoring', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Operations\",\r\n \"product\": \"Cloud Monitoring\",\r\n \"dsl\": \"gcp_Cloud_Monitoring\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Monitoring\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#monitoring\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/monitoring\"\r\n}],\r\n  ['gcp_Error_Reporting', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Operations\",\r\n \"product\": \"Error Reporting\",\r\n \"dsl\": \"gcp_Error_Reporting\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Error_Reporting\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#errorreporting2\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/error-reporting\"\r\n}],\r\n  ['gcp_Kubernetes_Engine_Monitoring', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Operations\",\r\n \"product\": \"Kubernetes Engine Monitoring\",\r\n \"dsl\": \"gcp_Kubernetes_Engine_Monitoring\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Kubernetes_Engine_Monitoring\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#kubernetesengine\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/kubernetes-engine-monitoring\"\r\n}],\r\n  ['gcp_Cloud_Trace', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Operations\",\r\n \"product\": \"Cloud Trace\",\r\n \"dsl\": \"gcp_Cloud_Trace\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Trace\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#trace\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/trace\"\r\n}],\r\n  ['gcp_Cloud_Profiler', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Operations\",\r\n \"product\": \"Cloud Profiler\",\r\n \"dsl\": \"gcp_Cloud_Profiler\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Profiler\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#profiler\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/profiler\"\r\n}],\r\n  ['gcp_Cloud_Debugger', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Operations\",\r\n \"product\": \"Cloud Debugger\",\r\n \"dsl\": \"gcp_Cloud_Debugger\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Debugger\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#debugger\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/debugger\"\r\n}],\r\n  ['gcp_Intelligent_Operations', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Operations\",\r\n \"product\": \"Intelligent Operations\",\r\n \"dsl\": \"gcp_Intelligent_Operations\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Intelligent_Operations\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#generic\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/solutions/active-assist\"\r\n}],\r\n  ['gcp_Cloud_IAM', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Security and Identity\",\r\n \"product\": \"Cloud IAM\",\r\n \"dsl\": \"gcp_Cloud_IAM\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_IAM\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudiam\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/iam\"\r\n}],\r\n  ['gcp_Assured_Workloads', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Security and Identity\",\r\n \"product\": \"Assured Workloads\",\r\n \"dsl\": \"gcp_Assured_Workloads\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Assured_Workloads\",\r\n \"iconURL\": \"https://cloud.google.com/images/navigation/products/assured-workloads.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/assured-workloads\"\r\n}],\r\n  ['gcp_Cloud_Key_Management', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Security and Identity\",\r\n \"product\": \"Cloud Key Management\",\r\n \"dsl\": \"gcp_Cloud_Key_Management\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Key_Management\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#keymanagementservice\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/security-key-management\"\r\n}],\r\n  ['gcp_Confidential_Computing', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Security and Identity\",\r\n \"product\": \"Confidential Computing\",\r\n \"dsl\": \"gcp_Confidential_Computing\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Confidential_Computing\",\r\n \"iconURL\": \"https://cloud.google.com/_static/cloud/images/navigation/products/compute-engine.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/confidential-computing\"\r\n}],\r\n  ['gcp_Security_Command_Center', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Security and Identity\",\r\n \"product\": \"Security Command Center\",\r\n \"dsl\": \"gcp_Security_Command_Center\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Security_Command_Center\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudsecuritycommandcenter\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/security-command-center\"\r\n}],\r\n  ['gcp_Cloud_Data_Loss_Prevention', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Security and Identity\",\r\n \"product\": \"Cloud Data Loss Prevention\",\r\n \"dsl\": \"gcp_Cloud_Data_Loss_Prevention\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Data_Loss_Prevention\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#clouddatalosspreventionapi\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/dlp\"\r\n}],\r\n  ['gcp_Managed_Service_for_Microsoft_Active_Directory', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Security and Identity\",\r\n \"product\": \"Managed Service for Microsoft Active Directory\",\r\n \"dsl\": \"gcp_Managed_Service_for_Microsoft_Active_Directory\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Managed_Service_for_Microsoft_Active_Directory\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#managedserviceformicrosoftactivedirectory\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/managed-microsoft-ad\"\r\n}],\r\n  ['gcp_Access_Transparency', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Security and Identity\",\r\n \"product\": \"Access Transparency\",\r\n \"dsl\": \"gcp_Access_Transparency\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Access_Transparency\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#logging\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/access-transparency\"\r\n}],\r\n  ['gcp_Titan_Security_Key', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Security and Identity\",\r\n \"product\": \"Titan Security Key\",\r\n \"dsl\": \"gcp_Titan_Security_Key\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Titan_Security_Key\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#securitykeyenforcement\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/titan-security-key\"\r\n}],\r\n  ['gcp_Secret_Manager', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Security and Identity\",\r\n \"product\": \"Secret Manager\",\r\n \"dsl\": \"gcp_Secret_Manager\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Secret_Manager\",\r\n \"iconURL\": \"https://cloud.google.com/images/navigation/products/secret-manager.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/secret-manager\"\r\n}],\r\n  ['gcp_BeyondCorp_Enterprise', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Security and Identity\",\r\n \"product\": \"BeyondCorp Enterprise\",\r\n \"dsl\": \"gcp_BeyondCorp_Enterprise\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_BeyondCorp_Enterprise\",\r\n \"iconURL\": \"https://cloud.google.com/images/navigation/products/beyond-corp.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/beyondcorp-enterprise\"\r\n}],\r\n  ['gcp_See_all_security_and_identity_products', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Security and Identity\",\r\n \"product\": \"See all security and identity products\",\r\n \"dsl\": \"gcp_See_all_security_and_identity_products\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_See_all_security_and_identity_products\",\r\n \"iconURL\": \"\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/products#security-and-identity\"\r\n}],\r\n  ['gcp_Cloud_Functions', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Serverless Computing\",\r\n \"product\": \"Cloud Functions\",\r\n \"dsl\": \"gcp_Cloud_Functions\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Functions\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudfunctions\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/functions\"\r\n}],\r\n  ['gcp_Workflows', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Serverless Computing\",\r\n \"product\": \"Workflows\",\r\n \"dsl\": \"gcp_Workflows\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Workflows\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#workflows\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/workflows\"\r\n}],\r\n  ['gcp_All_Storage_Products', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Storage\",\r\n \"product\": \"All Storage Products\",\r\n \"dsl\": \"gcp_All_Storage_Products\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_All_Storage_Products\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/all-storage-products.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/products/storage\"\r\n}],\r\n  ['gcp_Filestore', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Storage\",\r\n \"product\": \"Filestore\",\r\n \"dsl\": \"gcp_Filestore\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Filestore\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#cloudfilestore\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/filestore\"\r\n}],\r\n  ['gcp_Persistent_Disk', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Storage\",\r\n \"product\": \"Persistent Disk\",\r\n \"dsl\": \"gcp_Persistent_Disk\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Persistent_Disk\",\r\n \"iconURL\": \"https://www.gstatic.com/cloud/images/navigation/icons.svg#persistantdisk\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/persistent-disk\"\r\n}],\r\n  ['gcp_Cloud_Storage_for_Firebase', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Storage\",\r\n \"product\": \"Cloud Storage for Firebase\",\r\n \"dsl\": \"gcp_Cloud_Storage_for_Firebase\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Cloud_Storage_for_Firebase\",\r\n \"iconURL\": \"https://cloud.google.com/_static/cloud/images/navigation/products/firebase.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://firebase.google.com/products/storage\"\r\n}],\r\n  ['gcp_Local_SSD', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Storage\",\r\n \"product\": \"Local SSD\",\r\n \"dsl\": \"gcp_Local_SSD\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Local_SSD\",\r\n \"iconURL\": \"https://cloud.google.com/_static/cloud/images/navigation/products/local-ssd.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/local-ssd\"\r\n}],\r\n  ['gcp_Archival_Storage', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Storage\",\r\n \"product\": \"Archival Storage\",\r\n \"dsl\": \"gcp_Archival_Storage\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Archival_Storage\",\r\n \"iconURL\": \"https://cloud.google.com/images/navigation/products/archival-storage.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://cloud.google.com/storage/archival\"\r\n}],\r\n  ['gcp_Google_Workspace_Essentials', {\r\n \"provider\": \"GCP\",\r\n \"category\": \"Storage\",\r\n \"product\": \"Google Workspace Essentials\",\r\n \"dsl\": \"gcp_Google_Workspace_Essentials\",\r\n \"kind\": \"resource\",\r\n \"tagName\": \"gcp_Google_Workspace_Essentials\",\r\n \"iconURL\": \"https://cloud.google.com/images/navigation/products/drive-enterprise.svg\",\r\n \"typeURI\": null,\r\n \"docURL\": \"https://workspace.google.com/essentials/\"\r\n}],\r\n];\r\nexport const mapArray = new Map(_mapArray_);","import { resource } from '@imaguiraga/topology-dsl-core';\r\nimport { mapArray } from './GCP-map.js';\r\n\r\n/**\r\n * Create a 'gcp_Compute_Engine' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Compute_Engine(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Compute_Engine')._set_('style', mapArray.get('gcp_Compute_Engine'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Storage' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Storage(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Storage')._set_('style', mapArray.get('gcp_Cloud_Storage'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_SDK' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_SDK(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_SDK')._set_('style', mapArray.get('gcp_Cloud_SDK'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_SQL' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_SQL(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_SQL')._set_('style', mapArray.get('gcp_Cloud_SQL'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Google_Kubernetes_Engine' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Google_Kubernetes_Engine(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Google_Kubernetes_Engine')._set_('style', mapArray.get('gcp_Google_Kubernetes_Engine'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_BigQuery' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_BigQuery(...elt) {\r\n  return resource(...elt)._tagName_('gcp_BigQuery')._set_('style', mapArray.get('gcp_BigQuery'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_CDN' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_CDN(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_CDN')._set_('style', mapArray.get('gcp_Cloud_CDN'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Dataflow' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Dataflow(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Dataflow')._set_('style', mapArray.get('gcp_Dataflow'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Operations' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Operations(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Operations')._set_('style', mapArray.get('gcp_Operations'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Run' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Run(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Run')._set_('style', mapArray.get('gcp_Cloud_Run'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Anthos' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Anthos(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Anthos')._set_('style', mapArray.get('gcp_Anthos'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_See_all_products__100__' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_See_all_products__100__(...elt) {\r\n  return resource(...elt)._tagName_('gcp_See_all_products__100__')._set_('style', mapArray.get('gcp_See_all_products__100__'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Vertex_AI' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Vertex_AI(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Vertex_AI')._set_('style', mapArray.get('gcp_Vertex_AI'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Speech_to_Text' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Speech_to_Text(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Speech_to_Text')._set_('style', mapArray.get('gcp_Speech_to_Text'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Vision_AI' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Vision_AI(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Vision_AI')._set_('style', mapArray.get('gcp_Vision_AI'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Text_to_Speech' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Text_to_Speech(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Text_to_Speech')._set_('style', mapArray.get('gcp_Text_to_Speech'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Translation' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Translation(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Translation')._set_('style', mapArray.get('gcp_Cloud_Translation'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Natural_Language' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Natural_Language(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Natural_Language')._set_('style', mapArray.get('gcp_Cloud_Natural_Language'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_AutoML' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_AutoML(...elt) {\r\n  return resource(...elt)._tagName_('gcp_AutoML')._set_('style', mapArray.get('gcp_AutoML'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Video_AI' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Video_AI(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Video_AI')._set_('style', mapArray.get('gcp_Video_AI'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_AI_Infrastructure' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_AI_Infrastructure(...elt) {\r\n  return resource(...elt)._tagName_('gcp_AI_Infrastructure')._set_('style', mapArray.get('gcp_AI_Infrastructure'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Dialogflow' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Dialogflow(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Dialogflow')._set_('style', mapArray.get('gcp_Dialogflow'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_AutoML_Tables' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_AutoML_Tables(...elt) {\r\n  return resource(...elt)._tagName_('gcp_AutoML_Tables')._set_('style', mapArray.get('gcp_AutoML_Tables'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_See_all_AI_and_machine_learning_products' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_See_all_AI_and_machine_learning_products(...elt) {\r\n  return resource(...elt)._tagName_('gcp_See_all_AI_and_machine_learning_products')._set_('style', mapArray.get('gcp_See_all_AI_and_machine_learning_products'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Apigee_API_Management' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Apigee_API_Management(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Apigee_API_Management')._set_('style', mapArray.get('gcp_Apigee_API_Management'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Endpoints' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Endpoints(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Endpoints')._set_('style', mapArray.get('gcp_Cloud_Endpoints'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Healthcare_API' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Healthcare_API(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Healthcare_API')._set_('style', mapArray.get('gcp_Cloud_Healthcare_API'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_AppSheet' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_AppSheet(...elt) {\r\n  return resource(...elt)._tagName_('gcp_AppSheet')._set_('style', mapArray.get('gcp_AppSheet'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_API_Gateway' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_API_Gateway(...elt) {\r\n  return resource(...elt)._tagName_('gcp_API_Gateway')._set_('style', mapArray.get('gcp_API_Gateway'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_App_Engine' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_App_Engine(...elt) {\r\n  return resource(...elt)._tagName_('gcp_App_Engine')._set_('style', mapArray.get('gcp_App_Engine'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_GPUs' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_GPUs(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_GPUs')._set_('style', mapArray.get('gcp_Cloud_GPUs'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Migrate_for_Compute_Engine' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Migrate_for_Compute_Engine(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Migrate_for_Compute_Engine')._set_('style', mapArray.get('gcp_Migrate_for_Compute_Engine'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Preemptible_VMs' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Preemptible_VMs(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Preemptible_VMs')._set_('style', mapArray.get('gcp_Preemptible_VMs'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Shielded_VMs' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Shielded_VMs(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Shielded_VMs')._set_('style', mapArray.get('gcp_Shielded_VMs'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Sole_Tenant_Nodes' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Sole_Tenant_Nodes(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Sole_Tenant_Nodes')._set_('style', mapArray.get('gcp_Sole_Tenant_Nodes'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Bare_Metal' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Bare_Metal(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Bare_Metal')._set_('style', mapArray.get('gcp_Bare_Metal'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Recommender' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Recommender(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Recommender')._set_('style', mapArray.get('gcp_Recommender'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_VMware_Engine' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_VMware_Engine(...elt) {\r\n  return resource(...elt)._tagName_('gcp_VMware_Engine')._set_('style', mapArray.get('gcp_VMware_Engine'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_See_all_compute_products' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_See_all_compute_products(...elt) {\r\n  return resource(...elt)._tagName_('gcp_See_all_compute_products')._set_('style', mapArray.get('gcp_See_all_compute_products'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Container_Registry' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Container_Registry(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Container_Registry')._set_('style', mapArray.get('gcp_Container_Registry'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Container_Security' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Container_Security(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Container_Security')._set_('style', mapArray.get('gcp_Container_Security'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Build' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Build(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Build')._set_('style', mapArray.get('gcp_Cloud_Build'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Deep_Learning_Containers' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Deep_Learning_Containers(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Deep_Learning_Containers')._set_('style', mapArray.get('gcp_Deep_Learning_Containers'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Kubernetes_Applications' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Kubernetes_Applications(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Kubernetes_Applications')._set_('style', mapArray.get('gcp_Kubernetes_Applications'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Artifact_Registry' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Artifact_Registry(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Artifact_Registry')._set_('style', mapArray.get('gcp_Artifact_Registry'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Knative' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Knative(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Knative')._set_('style', mapArray.get('gcp_Knative'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Code' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Code(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Code')._set_('style', mapArray.get('gcp_Cloud_Code'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Looker' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Looker(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Looker')._set_('style', mapArray.get('gcp_Looker'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Pub_Sub' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Pub_Sub(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Pub_Sub')._set_('style', mapArray.get('gcp_Pub_Sub'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Dataproc' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Dataproc(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Dataproc')._set_('style', mapArray.get('gcp_Dataproc'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Data_Fusion' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Data_Fusion(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Data_Fusion')._set_('style', mapArray.get('gcp_Cloud_Data_Fusion'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Composer' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Composer(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Composer')._set_('style', mapArray.get('gcp_Cloud_Composer'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Dataprep' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Dataprep(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Dataprep')._set_('style', mapArray.get('gcp_Dataprep'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Dataplex' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Dataplex(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Dataplex')._set_('style', mapArray.get('gcp_Dataplex'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Data_Catalog' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Data_Catalog(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Data_Catalog')._set_('style', mapArray.get('gcp_Data_Catalog'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Analytics_Hub' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Analytics_Hub(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Analytics_Hub')._set_('style', mapArray.get('gcp_Analytics_Hub'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_See_all_developer_tools' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_See_all_developer_tools(...elt) {\r\n  return resource(...elt)._tagName_('gcp_See_all_developer_tools')._set_('style', mapArray.get('gcp_See_all_developer_tools'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Bigtable' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Bigtable(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Bigtable')._set_('style', mapArray.get('gcp_Cloud_Bigtable'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Firestore' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Firestore(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Firestore')._set_('style', mapArray.get('gcp_Firestore'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Memorystore' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Memorystore(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Memorystore')._set_('style', mapArray.get('gcp_Memorystore'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Spanner' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Spanner(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Spanner')._set_('style', mapArray.get('gcp_Cloud_Spanner'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Database_Migration_Service' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Database_Migration_Service(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Database_Migration_Service')._set_('style', mapArray.get('gcp_Database_Migration_Service'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Firebase_Realtime_Database' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Firebase_Realtime_Database(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Firebase_Realtime_Database')._set_('style', mapArray.get('gcp_Firebase_Realtime_Database'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Datastream' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Datastream(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Datastream')._set_('style', mapArray.get('gcp_Datastream'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Deployment_Manager' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Deployment_Manager(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Deployment_Manager')._set_('style', mapArray.get('gcp_Cloud_Deployment_Manager'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Scheduler' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Scheduler(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Scheduler')._set_('style', mapArray.get('gcp_Cloud_Scheduler'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Source_Repositories' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Source_Repositories(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Source_Repositories')._set_('style', mapArray.get('gcp_Cloud_Source_Repositories'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Tasks' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Tasks(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Tasks')._set_('style', mapArray.get('gcp_Cloud_Tasks'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Tekton' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Tekton(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Tekton')._set_('style', mapArray.get('gcp_Tekton'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Apigee_Healthcare_APIx' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Apigee_Healthcare_APIx(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Apigee_Healthcare_APIx')._set_('style', mapArray.get('gcp_Apigee_Healthcare_APIx'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Life_Sciences' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Life_Sciences(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Life_Sciences')._set_('style', mapArray.get('gcp_Cloud_Life_Sciences'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Healthcare_Natural_Language_AI' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Healthcare_Natural_Language_AI(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Healthcare_Natural_Language_AI')._set_('style', mapArray.get('gcp_Healthcare_Natural_Language_AI'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Run_for_Anthos' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Run_for_Anthos(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Run_for_Anthos')._set_('style', mapArray.get('gcp_Cloud_Run_for_Anthos'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Google_Cloud_Marketplace_for_Anthos' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Google_Cloud_Marketplace_for_Anthos(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Google_Cloud_Marketplace_for_Anthos')._set_('style', mapArray.get('gcp_Google_Cloud_Marketplace_for_Anthos'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Migrate_for_Anthos' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Migrate_for_Anthos(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Migrate_for_Anthos')._set_('style', mapArray.get('gcp_Migrate_for_Anthos'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Traffic_Director' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Traffic_Director(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Traffic_Director')._set_('style', mapArray.get('gcp_Traffic_Director'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_IoT_Core' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_IoT_Core(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_IoT_Core')._set_('style', mapArray.get('gcp_Cloud_IoT_Core'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Edge_TPU' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Edge_TPU(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Edge_TPU')._set_('style', mapArray.get('gcp_Edge_TPU'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Shell' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Shell(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Shell')._set_('style', mapArray.get('gcp_Cloud_Shell'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Console' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Console(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Console')._set_('style', mapArray.get('gcp_Cloud_Console'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Mobile_App' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Mobile_App(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Mobile_App')._set_('style', mapArray.get('gcp_Cloud_Mobile_App'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_APIs' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_APIs(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_APIs')._set_('style', mapArray.get('gcp_Cloud_APIs'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Private_Catalog' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Private_Catalog(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Private_Catalog')._set_('style', mapArray.get('gcp_Private_Catalog'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cost_Management' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cost_Management(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cost_Management')._set_('style', mapArray.get('gcp_Cost_Management'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Intelligent_Management' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Intelligent_Management(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Intelligent_Management')._set_('style', mapArray.get('gcp_Intelligent_Management'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Game_Servers' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Game_Servers(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Game_Servers')._set_('style', mapArray.get('gcp_Game_Servers'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_OpenCue' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_OpenCue(...elt) {\r\n  return resource(...elt)._tagName_('gcp_OpenCue')._set_('style', mapArray.get('gcp_OpenCue'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Application_Migration' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Application_Migration(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Application_Migration')._set_('style', mapArray.get('gcp_Application_Migration'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_BigQuery_Data_Transfer_Service' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_BigQuery_Data_Transfer_Service(...elt) {\r\n  return resource(...elt)._tagName_('gcp_BigQuery_Data_Transfer_Service')._set_('style', mapArray.get('gcp_BigQuery_Data_Transfer_Service'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Foundation_Toolkit' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Foundation_Toolkit(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Foundation_Toolkit')._set_('style', mapArray.get('gcp_Cloud_Foundation_Toolkit'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Rapid_Assessment_Migration_Program_RAMP' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Rapid_Assessment_Migration_Program_RAMP(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Rapid_Assessment_Migration_Program_RAMP')._set_('style', mapArray.get('gcp_Rapid_Assessment_Migration_Program_RAMP'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Transfer_Appliance' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Transfer_Appliance(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Transfer_Appliance')._set_('style', mapArray.get('gcp_Transfer_Appliance'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Storage_Transfer_Service' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Storage_Transfer_Service(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Storage_Transfer_Service')._set_('style', mapArray.get('gcp_Storage_Transfer_Service'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Armor' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Armor(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Armor')._set_('style', mapArray.get('gcp_Cloud_Armor'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_DNS' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_DNS(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_DNS')._set_('style', mapArray.get('gcp_Cloud_DNS'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Load_Balancing' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Load_Balancing(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Load_Balancing')._set_('style', mapArray.get('gcp_Cloud_Load_Balancing'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_NAT' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_NAT(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_NAT')._set_('style', mapArray.get('gcp_Cloud_NAT'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Hybrid_Connectivity' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Hybrid_Connectivity(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Hybrid_Connectivity')._set_('style', mapArray.get('gcp_Hybrid_Connectivity'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Network_Connectivity_Center' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Network_Connectivity_Center(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Network_Connectivity_Center')._set_('style', mapArray.get('gcp_Network_Connectivity_Center'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Network_Intelligence_Center' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Network_Intelligence_Center(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Network_Intelligence_Center')._set_('style', mapArray.get('gcp_Network_Intelligence_Center'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Network_Service_Tiers' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Network_Service_Tiers(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Network_Service_Tiers')._set_('style', mapArray.get('gcp_Network_Service_Tiers'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Network_Telemetry' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Network_Telemetry(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Network_Telemetry')._set_('style', mapArray.get('gcp_Network_Telemetry'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_See_all_networking_products' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_See_all_networking_products(...elt) {\r\n  return resource(...elt)._tagName_('gcp_See_all_networking_products')._set_('style', mapArray.get('gcp_See_all_networking_products'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Logging' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Logging(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Logging')._set_('style', mapArray.get('gcp_Cloud_Logging'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Monitoring' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Monitoring(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Monitoring')._set_('style', mapArray.get('gcp_Cloud_Monitoring'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Error_Reporting' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Error_Reporting(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Error_Reporting')._set_('style', mapArray.get('gcp_Error_Reporting'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Kubernetes_Engine_Monitoring' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Kubernetes_Engine_Monitoring(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Kubernetes_Engine_Monitoring')._set_('style', mapArray.get('gcp_Kubernetes_Engine_Monitoring'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Trace' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Trace(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Trace')._set_('style', mapArray.get('gcp_Cloud_Trace'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Profiler' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Profiler(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Profiler')._set_('style', mapArray.get('gcp_Cloud_Profiler'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Debugger' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Debugger(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Debugger')._set_('style', mapArray.get('gcp_Cloud_Debugger'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Intelligent_Operations' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Intelligent_Operations(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Intelligent_Operations')._set_('style', mapArray.get('gcp_Intelligent_Operations'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_IAM' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_IAM(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_IAM')._set_('style', mapArray.get('gcp_Cloud_IAM'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Assured_Workloads' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Assured_Workloads(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Assured_Workloads')._set_('style', mapArray.get('gcp_Assured_Workloads'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Key_Management' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Key_Management(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Key_Management')._set_('style', mapArray.get('gcp_Cloud_Key_Management'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Confidential_Computing' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Confidential_Computing(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Confidential_Computing')._set_('style', mapArray.get('gcp_Confidential_Computing'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Security_Command_Center' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Security_Command_Center(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Security_Command_Center')._set_('style', mapArray.get('gcp_Security_Command_Center'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Data_Loss_Prevention' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Data_Loss_Prevention(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Data_Loss_Prevention')._set_('style', mapArray.get('gcp_Cloud_Data_Loss_Prevention'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Managed_Service_for_Microsoft_Active_Directory' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Managed_Service_for_Microsoft_Active_Directory(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Managed_Service_for_Microsoft_Active_Directory')._set_('style', mapArray.get('gcp_Managed_Service_for_Microsoft_Active_Directory'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Access_Transparency' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Access_Transparency(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Access_Transparency')._set_('style', mapArray.get('gcp_Access_Transparency'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Titan_Security_Key' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Titan_Security_Key(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Titan_Security_Key')._set_('style', mapArray.get('gcp_Titan_Security_Key'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Secret_Manager' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Secret_Manager(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Secret_Manager')._set_('style', mapArray.get('gcp_Secret_Manager'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_BeyondCorp_Enterprise' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_BeyondCorp_Enterprise(...elt) {\r\n  return resource(...elt)._tagName_('gcp_BeyondCorp_Enterprise')._set_('style', mapArray.get('gcp_BeyondCorp_Enterprise'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_See_all_security_and_identity_products' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_See_all_security_and_identity_products(...elt) {\r\n  return resource(...elt)._tagName_('gcp_See_all_security_and_identity_products')._set_('style', mapArray.get('gcp_See_all_security_and_identity_products'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Functions' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Functions(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Functions')._set_('style', mapArray.get('gcp_Cloud_Functions'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Workflows' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Workflows(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Workflows')._set_('style', mapArray.get('gcp_Workflows'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_All_Storage_Products' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_All_Storage_Products(...elt) {\r\n  return resource(...elt)._tagName_('gcp_All_Storage_Products')._set_('style', mapArray.get('gcp_All_Storage_Products'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Filestore' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Filestore(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Filestore')._set_('style', mapArray.get('gcp_Filestore'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Persistent_Disk' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Persistent_Disk(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Persistent_Disk')._set_('style', mapArray.get('gcp_Persistent_Disk'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Cloud_Storage_for_Firebase' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Cloud_Storage_for_Firebase(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Cloud_Storage_for_Firebase')._set_('style', mapArray.get('gcp_Cloud_Storage_for_Firebase'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Local_SSD' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Local_SSD(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Local_SSD')._set_('style', mapArray.get('gcp_Local_SSD'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Archival_Storage' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Archival_Storage(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Archival_Storage')._set_('style', mapArray.get('gcp_Archival_Storage'));\r\n}\r\n\r\n/**\r\n * Create a 'gcp_Google_Workspace_Essentials' dsl tree.\r\n * @param {object} elt - The element.\r\n * @return {object} dsl object.\r\n */\r\nexport function gcp_Google_Workspace_Essentials(...elt) {\r\n  return resource(...elt)._tagName_('gcp_Google_Workspace_Essentials')._set_('style', mapArray.get('gcp_Google_Workspace_Essentials'));\r\n}\r\n\r\n","// text -> dslObjectMap -> dslObject -> [elkGraph] => [elkGraph] -> elkLayout -> elkLayoutRelative -> elkLayoutAbsolute -> x6Layout -> x6Graph\r\n/* tslint:disable */\r\nimport 'es6-promise/auto';  // polyfill Promise on IE\r\n\r\nimport {\r\n  CommandRegistry\r\n} from '@lumino/commands';\r\n\r\nimport {\r\n  BoxPanel, DockPanel, Widget\r\n} from '@lumino/widgets';\r\n\r\nimport {\r\n  createMenu, createBarWidget, createPalette\r\n} from './widgets/menu-util';\r\n\r\nimport { CodeMirrorWidget } from './widgets/codemirror-widget';\r\nimport { AceEditorWidget } from './widgets/ace-editor-widget';\r\n\r\nimport { ELKGraphWidget } from './widgets/elkgraph-widget';\r\n\r\nimport './style/widget-style.css';\r\nimport { samples } from './samples-1.js';\r\nimport { samples2 } from './samples-2.js';\r\n\r\nimport * as flowDsl from '@imaguiraga/topology-dsl-core';\r\nimport * as gcp from '../assets/js/GCP';\r\nimport { toElkGraph } from './diagram';\r\nconst {\r\n  parseDsl,\r\n  parseDslModule,\r\n  debugOn,\r\n  registerJSModule,\r\n  resolveImports,\r\n  NODEIDGENFN,\r\n  clone\r\n} = flowDsl;\r\n\r\nconst DSL_MODULE = { ...flowDsl };\r\nregisterJSModule('gcp-dsl', gcp);\r\n\r\nfunction loadFnFactory() {\r\n  let loadedImports = new Map();\r\n  const loadFn = (key) => {\r\n    if (loadedImports.has(key)) {\r\n      let obj = loadedImports.get(key);\r\n      //Clone to avoid ids collision     \r\n      let copy = clone(obj, NODEIDGENFN.next().value);\r\n      return copy;\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  loadFn.loadedImports = function (newValue) {\r\n    if (!arguments.length) return loadedImports;\r\n    loadedImports = newValue;\r\n    return this;\r\n  };\r\n\r\n  return loadFn;\r\n}\r\n\r\nDSL_MODULE.load = loadFnFactory();\r\n\r\nfunction main() {\r\n  const commands = new CommandRegistry();\r\n  createMenu(commands);\r\n  let bar = createBarWidget(commands);\r\n  let palette = createPalette(commands);\r\n  let main = createMainWidget(palette, commands);\r\n\r\n  Widget.attach(bar, document.body);\r\n  Widget.attach(main, document.body);\r\n  //*/\r\n}\r\n\r\nfunction createMainWidget(palette, commands) {\r\n  const elkgraphWidget = new ELKGraphWidget(640, 640);\r\n\r\n  const editorWidget = new CodeMirrorWidget({\r\n    mode: 'text/typescript',\r\n    lineNumbers: true,\r\n    tabSize: 2,\r\n  });\r\n  //*/\r\n\r\n  // const editorWidget = new AceEditorWidget();\r\n  editorWidget.title.label = 'EDITOR';\r\n  const myWorker = new SharedWorker('assets/js/worker.js');\r\n  // myWorker.port.start();\r\n  const messageCallbackFn = function (event) {\r\n    if (event.data.jsonrpc !== undefined) {\r\n      console.log('event => ' + event.data.method);\r\n      if (event.data.method === 'update.flows') {\r\n        // Convert entries array to map\r\n        elkgraphWidget.flows = event.data.params;\r\n      }\r\n    }\r\n  };\r\n\r\n  myWorker.port.onmessage = function (event) {\r\n    console.log('=> Worker.onmessage' + event);\r\n    messageCallbackFn(event);\r\n  };\r\n  // myWorker.port.start();\r\n\r\n  window.addEventListener('message', (event) => {\r\n    if (event.origin !== window.location.origin) {\r\n      return;\r\n    }\r\n    console.log('=> Window.onmessage' + event);\r\n    // messageCallbackFn(event);\r\n\r\n  }, false);\r\n  //*/\r\n\r\n  const callbackFn = function (content) {\r\n    try {\r\n      // TODO NODEIDGENFN.next(true);         \r\n      parseDslModule(content, DSL_MODULE).then((dslObjectMap) => {\r\n        // Update graph flows\r\n        if (dslObjectMap !== undefined && dslObjectMap !== null) {\r\n          const result = new Map();\r\n          dslObjectMap.forEach((dslObject, key, map) => {\r\n            if (dslObject !== null) {\r\n              //console.log(JSON.stringify(dslObject,null,'  '));\r\n              const elkgraph = toElkGraph(dslObject);\r\n              result.set(key, elkgraph);\r\n            }\r\n\r\n          });\r\n\r\n          console.log('parseDslModule');\r\n          // Convert to array\r\n          const message = { jsonrpc: '2.0', method: 'update.flows', params: result };\r\n          // Update flows\r\n          // window.postMessage(message, window.location.origin);\r\n          myWorker.port.postMessage(message);\r\n        }\r\n      }).catch((err) => {\r\n        console.log(err);\r\n        let variables = new Map();\r\n        variables.set('ERROR', err.message);\r\n        const message = { jsonrpc: '2.0', method: 'update.flows', params: variables };\r\n        // Update flows\r\n        // window.postMessage(message, window.location.origin);\r\n        // Update using\r\n        myWorker.port.postMessage(message);\r\n      });\r\n\r\n    } catch (e) {\r\n      console.error(e.name + ': ' + e.message);\r\n    }\r\n  };\r\n\r\n  editorWidget.valueChanged.connect(\r\n    (sender, value) => {\r\n      console.log('valueChanged');\r\n      callbackFn(value);\r\n    }\r\n  );\r\n\r\n  // set default samples\r\n  editorWidget.samples = samples2;\r\n  editorWidget.selectElt.addEventListener('change', (event) => {\r\n    // TODO NODEIDGENFN.next(true);\r\n  });\r\n\r\n  let dock = new DockPanel();\r\n\r\n  dock.addWidget(editorWidget);\r\n  dock.addWidget(elkgraphWidget, { mode: 'split-right', ref: editorWidget });\r\n\r\n  dock.id = 'dock';\r\n\r\n  let savedLayouts = [];\r\n\r\n  commands.addCommand('save-dock-layout', {\r\n    label: 'Save Layout',\r\n    caption: 'Save the current dock layout',\r\n    execute: () => {\r\n      savedLayouts.push(dock.saveLayout());\r\n      palette.addItem({\r\n        command: 'restore-dock-layout',\r\n        category: 'Dock Layout',\r\n        args: { index: savedLayouts.length - 1 }\r\n      });\r\n    }\r\n  });\r\n\r\n  commands.addCommand('restore-dock-layout', {\r\n    label: (args) => {\r\n      return `Restore Layout ${args.index}`;\r\n    },\r\n    execute: (args) => {\r\n      dock.restoreLayout(savedLayouts[args.index]);\r\n    }\r\n  });\r\n\r\n  palette.addItem({\r\n    command: 'save-dock-layout',\r\n    category: 'Dock Layout',\r\n    rank: 0\r\n  });\r\n\r\n  BoxPanel.setStretch(dock, 1);\r\n\r\n  let main = new BoxPanel({ direction: 'left-to-right', spacing: 0 });\r\n  main.id = 'main';\r\n\r\n  main.addWidget(dock);\r\n  window.onresize = () => { main.update(); };\r\n  return main;\r\n}\r\n\r\nwindow.onload = main;\r\n"],"sourceRoot":""}